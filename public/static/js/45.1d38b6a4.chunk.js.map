{"version":3,"sources":["navigation/tabs/users.tsx"],"names":["UsersScreen","React","SearchableAppBar","RigInspectionScreen","ProfileScreen","Settings","createStackNavigator","SettingsTab","useAppSelector","state","usersScreen","isSearchVisible","searchText","dispatch","useAppDispatch","Navigator","screenOptions","headerShown","header","props","searchVisible","setSearchVisible","visible","usersActions","onSearch","text","setSearchText","cardStyle","flex","Screen","name","component","options","title"],"mappings":"mLAGMA,EAAcC,QAAW,kBAAM,kCAC/BC,EAAmBD,QAAW,kBAAM,gEACpCE,EAAsBF,QAAW,kBAAM,uEACvCG,EAAgBH,QAAW,kBAAM,6EAUjCI,EAAWC,cAEF,SAASC,IACtB,MAAwCC,aAAe,SAAAC,GAAK,OAAIA,EAAMC,eAA9DC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,WACnBC,EAAWC,cAEjB,OACE,gBAACT,EAASU,UAAV,CACEC,cAAe,CACbC,aAAa,EACbC,OAAQ,SAACC,GAAD,OACN,gBAACjB,EAAD,OACMiB,EADN,CAEEP,WAAYA,EACZQ,cAAeT,EACfU,iBAAkB,SAACC,GAAD,OAAaT,EAASU,IAAaF,iBAAiBC,KACtEE,SAAU,SAACC,GAAD,OAAUZ,EAASU,IAAaG,cAAcD,SAE5DE,UAAW,CACTC,KAAM,KAIV,gBAACvB,EAASwB,OAAV,CAAiBC,KAAK,cAAcC,UAAW/B,EAAagC,QAAS,CAAEC,MAAO,oBAC9E,gBAAC5B,EAASwB,OAAV,CAAiBC,KAAK,oBAAoBC,UAAW3B,EAAe4B,QAAS,CAAEC,MAAO,UACtF,gBAAC5B,EAASwB,OAAV,CAAiBC,KAAK,sBAAsBC,UAAW5B,EAAqB6B,QAAS,CAAEC,MAAO","file":"static/js/45.1d38b6a4.chunk.js","sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\n\nconst UsersScreen = React.lazy(() => import('../../screens/authenticated/users/UsersScreen'));\nconst SearchableAppBar = React.lazy(() => import('../../screens/authenticated/users/AppBar'));\nconst RigInspectionScreen = React.lazy(() => import('../../screens/authenticated/rig/RigInspectionScreen'));\nconst ProfileScreen = React.lazy(() => import('../../screens/authenticated/profile/ProfileScreen'));\nimport { useAppDispatch, useAppSelector, usersActions } from '../../redux';\nimport { Rig } from '../../graphql/schema';\n\nexport type ISettingsTabParams = {\n  UsersScreen: undefined;\n  RigInspectionScreen: { dropzoneUserId: number, rig: Rig };\n  UserProfileScreen: undefined;\n}\n\nconst Settings = createStackNavigator<ISettingsTabParams>();\n\nexport default function SettingsTab() {\n  const { isSearchVisible, searchText } = useAppSelector(state => state.usersScreen);\n  const dispatch = useAppDispatch();\n\n  return (\n    <Settings.Navigator\n      screenOptions={{\n        headerShown: true,\n        header: (props) =>\n          <SearchableAppBar\n            {...props}\n            searchText={searchText}\n            searchVisible={isSearchVisible}\n            setSearchVisible={(visible) => dispatch(usersActions.setSearchVisible(visible))}\n            onSearch={(text) => dispatch(usersActions.setSearchText(text))}\n          />,\n        cardStyle: {\n          flex: 1\n        }\n      }}\n    >\n      <Settings.Screen name=\"UsersScreen\" component={UsersScreen} options={{ title: \"Dropzone users\" }} />\n      <Settings.Screen name=\"UserProfileScreen\" component={ProfileScreen} options={{ title: \"User\" }} />\n      <Settings.Screen name=\"RigInspectionScreen\" component={RigInspectionScreen} options={{ title: \"Inspection\" }} />\n    </Settings.Navigator>\n  );\n}\n"],"sourceRoot":""}