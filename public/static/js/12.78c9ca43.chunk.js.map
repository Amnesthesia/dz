{"version":3,"sources":["node_modules/date-fns/esm/_lib/requiredArgs/index.js","DataTableCell.tsx","DataTableHeader.tsx","DataTableTitle.tsx","DataTablePagination.tsx","DataTableRow.tsx","DataTable.tsx","getContrastingColor.tsx","FAB.tsx","FABGroup.tsx","index.ts","Divider.tsx","Chip.tsx","node_modules/date-fns/esm/toDate/index.js","node_modules/react-native-gesture-handler/State.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/@babel/runtime/helpers/get.js","node_modules/react-native-web/dist/exports/Switch/index.js","node_modules/react-native-web/dist/exports/DrawerLayoutAndroid/index.js","node_modules/react-native-web/dist/vendor/react-native/PooledClass/index.js","node_modules/react-native-web/dist/exports/Touchable/BoundingDimensions.js","node_modules/react-native-web/dist/exports/Touchable/Position.js","node_modules/react-native-web/dist/exports/Touchable/index.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/react-native-gesture-handler/createHandler.js","../../../../.config/yarn/global/node_modules/timers-browserify/main.js","node_modules/@egjs/hammerjs/dist/hammer.esm.js","node_modules/react-native-gesture-handler/web/constants.js","node_modules/react-native-gesture-handler/web/Errors.js","node_modules/react-native-gesture-handler/web/NodeManager.js","node_modules/react-native-gesture-handler/web/GestureHandler.js","node_modules/react-native-gesture-handler/web/DraggingGestureHandler.js","node_modules/react-native-gesture-handler/web/utils.js","node_modules/react-native-gesture-handler/web/FlingGestureHandler.js","node_modules/react-native-gesture-handler/web/DiscreteGestureHandler.js","node_modules/react-native-gesture-handler/web/PressGestureHandler.js","node_modules/react-native-gesture-handler/web/LongPressGestureHandler.js","node_modules/react-native-gesture-handler/web/NativeViewGestureHandler.js","node_modules/react-native-gesture-handler/web/PanGestureHandler.js","node_modules/react-native-gesture-handler/web/IndiscreteGestureHandler.js","node_modules/react-native-gesture-handler/web/PinchGestureHandler.js","node_modules/react-native-gesture-handler/RNGestureHandlerModule.web.js","node_modules/react-native-gesture-handler/web/RotationGestureHandler.js","node_modules/react-native-gesture-handler/web/TapGestureHandler.js","../../../../.config/yarn/global/node_modules/setimmediate/setImmediate.js","node_modules/fbjs/lib/areEqual.js","node_modules/@babel/runtime/helpers/superPropBase.js","node_modules/date-fns/esm/addMinutes/index.js","node_modules/react-native-gesture-handler/GestureHandlerPropTypes.js","node_modules/react-native-gesture-handler/NativeViewGestureHandler.js","node_modules/react-native-gesture-handler/createNativeWrapper.js","node_modules/react-native-gesture-handler/Directions.js","node_modules/react-native-gesture-handler/GestureHandlerRootView.js","node_modules/react-native-gesture-handler/gestureHandlerRootHOC.js","node_modules/react-native-gesture-handler/GestureButtons.js","node_modules/react-native-gesture-handler/GestureHandlerButton.web.js","node_modules/react-native-gesture-handler/GestureComponents.web.js","node_modules/react-native-gesture-handler/PlatformConstants.web.js","node_modules/react-native-gesture-handler/Gestures.js","node_modules/react-native-gesture-handler/Swipeable.js","node_modules/react-native-gesture-handler/DrawerLayout.js","node_modules/react-native-gesture-handler/touchables/TouchableNativeFeedback.js","node_modules/react-native-gesture-handler/touchables/GenericTouchable.js","node_modules/react-native-gesture-handler/touchables/TouchableWithoutFeedback.js","node_modules/react-native-gesture-handler/touchables/TouchableOpacity.js","node_modules/react-native-gesture-handler/touchables/TouchableHighlight.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","node_modules/date-fns/esm/startOfDay/index.js"],"names":["requiredArgs","required","args","length","TypeError","DataTableCell","rest","style","styles","numeric","numberOfLines","StyleSheet","container","flex","flexDirection","alignItems","right","justifyContent","DataTableHeader","borderBottomColor","color","theme","header","height","paddingHorizontal","borderBottomWidth","withTheme","DataTableTitle","spinAnim","React","Animated","sortDirection","current","toValue","duration","useNativeDriver","textColor","spin","inputRange","outputRange","icon","transform","rotate","name","size","direction","I18nManager","disabled","onPress","alignContent","paddingVertical","cell","lineHeight","fontSize","fontWeight","sorted","marginLeft","DataTablePagination","labelColor","page","onPageChange","numberOfPages","paddingLeft","label","marginRight","borderStyle","minHeight","content","pointerEvents","DataTable","width","getContrastingColor","input","light","FAB","accessibilityLabel","animated","visible","uppercase","visibility","scale","IconComponent","disabledColor","backgroundColor","accent","foregroundColor","customColor","rippleColor","opacity","borderless","onLongPress","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","testID","small","loading","source","selectable","medium","borderRadius","elevation","touchable","standard","extended","marginHorizontal","uppercaseLabel","textTransform","FABGroup","colorProp","backdrop","animations","actions","open","animation","close","onStateChange","colors","backdropOpacity","opacities","scales","prevActions","setPrevActions","safeArea","key","it","i","surface","expanded","fab","marginBottom","marginTop","absoluteFillObject","marginVertical","item","Group","hairlineWidth","dark","inset","isDarkTheme","borderWidth","position","padding","alignSelf","closeIcon","text","textAlignVertical","avatar","avatarWrapper","avatarSelected","top","left","closeButtonStyle","mode","selected","closeIconAccessibilityLabel","defaultBackgroundColor","borderColor","selectedColor","iconColor","backgroundColorString","selectedBackgroundColor","underlayColor","Platform","delayPressIn","onPressIn","onPressOut","paddingRight","onClose","ellipsizeMode","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","State","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END","state","keys","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","superPropBase","_get","target","property","receiver","Reflect","get","module","exports","__esModule","base","desc","getOwnPropertyDescriptor","value","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","_extends","assign","hasOwnProperty","this","emptyObject","Switch","forwardRef","props","forwardedRef","_props$activeThumbCol","activeThumbColor","_props$activeTrackCol","activeTrackColor","_props$disabled","onValueChange","_props$style","_props$thumbColor","thumbColor","_props$trackColor","trackColor","_props$value","other","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","thumbRef","useRef","handleFocusState","event","boxShadow","nativeEvent","type","thumbDefaultBoxShadow","_StyleSheet$flatten","flatten","styleHeight","styleWidth","minWidth","multiplyStyleLengthValue","trackBorderRadius","trackCurrentColor","true","false","thumbCurrentColor","thumbHeight","thumbWidth","rootStyle","root","cursorDefault","trackStyle","track","thumbStyle","thumb","thumbActive","marginStart","nativeControl","createElement","checked","onBlur","onChange","onFocus","ref","cursorInherit","View","displayName","create","cursor","userSelect","margin","transitionDuration","start","translateZ","UnimplementedView","twoArgumentPooler","a1","a2","instancePool","instance","pop","standardReleaser","destructor","poolSize","DEFAULT_POOLER","PooledClass","addPoolingTo","CopyConstructor","pooler","NewKlass","getPooled","release","BoundingDimensions","getPooledFromElement","element","offsetWidth","offsetHeight","Position","extractSingleTouch","touches","changedTouches","hasTouches","hasChangedTouches","States","baseStatesConditions","NOT_RESPONDER","RESPONDER_INACTIVE_PRESS_IN","RESPONDER_INACTIVE_PRESS_OUT","RESPONDER_ACTIVE_PRESS_IN","RESPONDER_ACTIVE_PRESS_OUT","RESPONDER_ACTIVE_LONG_PRESS_IN","RESPONDER_ACTIVE_LONG_PRESS_OUT","ERROR","IsActive","IsPressingIn","IsLongPressingIn","Signals","Transitions","DELAY","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","ENTER_PRESS_RECT","LEAVE_PRESS_RECT","LONG_PRESS_DETECTED","error","TouchableMixin","componentDidMount","_this","_touchableNode","findNodeHandle","addEventListener","_touchableBlurListener","e","_isTouchableKeyboardActive","touchState","touchableHandleResponderTerminate","componentWillUnmount","removeEventListener","touchableDelayTimeout","clearTimeout","longPressDelayTimeout","pressOutDelayTimeout","touchableGetInitialState","undefined","responderID","touchableHandleResponderTerminationRequest","rejectResponderTermination","touchableHandleStartShouldSetResponder","touchableLongPressCancelsPress","touchableHandleResponderGrant","dispatchID","currentTarget","persist","_receiveSignal","delayMS","touchableGetHighlightDelayMS","max","setTimeout","_handleDelay","bind","longDelayMS","touchableGetLongPressDelayMS","LONG_PRESS_THRESHOLD","_handleLongDelay","touchableHandleResponderRelease","pressInLocation","touchableHandleResponderMove","positionOnActivate","dimensionsOnActivate","pressRectOffset","touchableGetPressRectOffset","bottom","pressExpandLeft","pressExpandTop","pressExpandRight","pressExpandBottom","hitSlop","touchableGetHitSlop","touch","pageX","pageY","_getDistanceBetweenPoints","_cancelLongPressDelayTimeout","prevState","touchableHandleFocus","touchableHandleBlur","_remeasureMetricsOnActivation","tag","UIManager","measure","_handleQueryLayout","l","t","w","h","globalX","globalY","curState","signal","nextState","_performSideEffectsForTransition","_isHighlight","_savePressInLocation","locationX","locationY","aX","aY","bX","bY","deltaX","deltaY","sqrt","curIsHighlight","newIsHighlight","isInitialTransition","isActiveTransition","touchableHandleLongPress","_startHighlight","_endHighlight","hasLongPressHandler","pressIsLongButStillCallOnPress","touchableHandlePress","_playTouchSound","playTouchSound","touchableHandleActivePressIn","_this2","touchableHandleActivePressOut","touchableGetPressOutDelayMS","touchableHandleKeyEvent","stopPropagation","AccessibilityUtil","propsToAriaRole","preventDefault","withoutDefaultFocusAndBlur","TouchableMixinWithoutDefaultFocusAndBlur","Touchable","Mixin","TOUCH_TARGET_DEBUG","renderDebugView","_ref","debugHitSlopStyle","normalizedColor","normalizeColor","hexColor","substr","slice","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","node","OS","findNodeHandleRN","NativeModules","customGHEventsConfig","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","genericDirectEventTypes","getConstants","setJSResponder","oldSetJSResponder","clearJSResponder","oldClearJSResponder","blockNativeResponder","RNGestureHandlerModule","handleSetJSResponder","handleClearJSResponder","handlerTag","handlerIDToTag","isConfigParam","param","filterConfig","validProps","defaults","res","transformIntoHandlerTags","handlerIDs","Array","isArray","map","handle","handlerID","_handlerTag","hasUnresolvedRefs","extract","refs","some","r","stateToPropMappings","createHandler","handlerName","propTypes","config","transformProps","customNativeProps","Handler","_onGestureHandlerEvent","onGestureEvent","_onGestureHandlerStateChange","onHandlerStateChange","stateEventName","_refHandler","_viewNode","Children","only","children","_createGestureHandler","newConfig","_config","createGestureHandler","_attachGestureHandler","newViewTag","_viewTag","attachGestureHandler","_updateGestureHandler","updateGestureHandler","id","dropGestureHandler","_updateEnqueued","clearImmediate","setImmediate","_update","constructor","viewTag","deepEqual","updates","mergedProps","gestureEventHandler","gestureStateEventHandler","child","grandChildren","toArray","cloneElement","collapsable","Component","self","window","Function","Timeout","clearFn","_id","_clearFn","scope","setInterval","clearInterval","timeout","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","global","_inheritsLoose","subClass","superClass","__proto__","_assertThisInitialized","ReferenceError","win","assign$1","output","index","nextKey","VENDOR_PREFIXES","TEST_ELEMENT","document","round","abs","now","prefixed","prefix","prop","camelProp","toUpperCase","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","val","getTouchActionProps","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","PROPS_XY","PROPS_CLIENT_XY","each","iterator","context","boolOrFn","inStr","str","find","TouchAction","manager","set","_proto","compute","toLowerCase","trim","update","options","touchAction","recognizers","recognizer","enable","concat","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","srcEvent","offsetDirection","session","prevented","hasNone","isTapPointer","pointers","isTapMovement","distance","isTapTouchTime","deltaTime","DIRECTION_LEFT","DIRECTION_UP","preventSrc","hasParent","parent","parentNode","getCenter","pointersLength","x","clientX","y","clientY","simpleCloneInputData","timeStamp","center","getDistance","p1","p2","getAngle","atan2","PI","getVelocity","computeInputData","firstInput","firstMultiple","offsetCenter","angle","offset","offsetDelta","prevDelta","prevInput","eventType","computeDeltaXY","end","overallVelocity","overallVelocityX","overallVelocityY","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","last","lastInterval","v","computeIntervalInputData","srcEventTarget","composedPath","path","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","emit","recognize","splitStr","split","addEventListeners","types","handler","removeEventListeners","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","callback","inputTarget","domHandler","ev","init","evEl","evTarget","evWin","destroy","inArray","src","findByKey","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","PointerEventInput","_Input","proto","store","removePointer","eventTypeNormalized","replace","pointerType","isTouch","storeIndex","pointerId","button","splice","uniqueArray","sort","results","values","a","b","TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TouchInput","targetIds","getTouches","targetTouches","allTouches","identifier","changedTargetTouches","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","which","setLastTouch","eventData","primaryTouch","lastTouch","lts","lastTouches","recordTouches","isSyntheticEvent","dx","dy","TouchMouseInput","_manager","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","mouse","invokeArrayArg","arg","fn","_uniqueId","getRecognizerByNameIfManager","otherRecognizer","stateStr","Recognizer","simultaneous","requireFail","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","TapRecognizer","_Recognizer","taps","interval","time","threshold","posThreshold","pTime","pCenter","_timer","_input","count","validPointers","validMovement","validTouchTime","failTimeout","validInterval","validMultiTap","_this3","tapCount","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","directionStr","PanRecognizer","_AttrRecognizer","DIRECTION_HORIZONTAL","pX","pY","directionTest","hasMoved","SwipeRecognizer","PinchRecognizer","inOut","RotateRecognizer","PressRecognizer","validTime","domEvents","inputClass","cssProps","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","preset","toggleCssProps","add","oldCssProps","Manager","handlers","createInputInstance","stop","force","stopped","curRecognizer","existing","remove","targetRecognizer","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","SINGLE_TOUCH_INPUT_MAP","SingleTouchInput","started","normalizeSingleTouches","all","changed","deprecate","method","message","deprecationMessage","log","extend","dest","merge","inherit","properties","childP","baseP","_super","bindFn","Hammer","VERSION","DIRECTION_ALL","DIRECTION_DOWN","DIRECTION_RIGHT","DIRECTION_VERTICAL","DIRECTION_NONE","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","DEG_RAD","EventMap","Direction","RIGHT","LEFT","UP","DOWN","GesturePropError","expectedType","gestures","getHandler","getNodes","_gestureInstances","invokeNullableMethod","__getHandler","argMapping","__nodeConfig","nativeValue","setValue","GestureHandler","isGestureRunning","hasGestureFailed","view","hammer","pendingGestures","oldState","previousState","lastSentState","clearSelfAsPending","waitFor","removePendingGesture","isPointInView","rect","getBoundingClientRect","sendEvent","transformEventData","sync","params","getHammerConfig","enabled","shouldEnableGestureOnSetup","isDiscrete","_stillWaiting","_getPendingGestures","_hasCustomActivationCriteria","deltaRotation","initialRotation","isGestureEnabledForEvent","getConfig","success","failed","simulateCancelEvent","_gestureInstance","minDist","minDistSq","minVelocity","minVelocitySq","maxDist","maxDistSq","NodeManager","ensureConfig","updateHasCustomActivationCriteria","addPendingGesture","numberOfPointers","changedTouch","pointerInside","getState","transformNativeEvent","cancelEvent","onWaitingEnded","cancelPendingGestures","notifyPendingGestures","onGestureEnded","NativeGestureClass","onRawEvent","setupEvents","onStart","onGestureActivated","__initialX","__initialY","minPointers","DraggingGestureHandler","ratio","PixelRatio","translationX","translationY","absoluteX","absoluteY","isnan","isValidNumber","TEST_MIN_IF_NOT_NAN","limit","VEC_LEN_SQ","TEST_MAX_IF_NOT_NAN","fireAfterInterval","FlingGestureHandler","getDirection","directions","Set","pointerLength","maxDeltaX","maxDeltaY","shouldCancelWhenOutside","validPointerCount","DiscreteGestureHandler","shouldFailUnderCustomCriteria","PressGestureHandler","shouldDelayTouches","minDurationMs","onGestureStart","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","shouldDelayTouchForEvent","shouldActivateOnStart","disallowInterruption","LongPressGestureHandler","NativeViewGestureHandler","contains","forceInvalidate","PanGestureHandler","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","horizontalDirections","verticalDirections","criteria","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","minVelocityX","minVelocityY","deltaScale","absDeltaRotation","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","IndiscreteGestureHandler","PinchGestureHandler","focalX","focalY","Gestures","RotationGestureHandler","anchorX","anchorY","TapGestureHandler","onSuccessfulTap","_shouldFireEndEvent","maxDelayMs","_multiTapTimer","numberOfTaps","maxDurationMs","GestureClass","newView","setView","updateGestureConfig","getGestureHandlerNode","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","getPrototypeOf","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","task","run","aStackPool","bStackPool","aStack","bStack","result","eq","objToStr","className","String","multiline","ignoreCase","valueOf","addMinutes","GestureHandlerPropTypes","PropTypes","string","bool","oneOfType","arrayOf","simultaneousHandlers","shape","vertical","horizontal","func","onBegan","onFailed","onCancelled","onActivated","onEnded","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","ComponentWrapper","gestureHandlerProps","reduce","RawButton","BaseButton","_handleEvent","_lastActive","onActiveStateChange","_onHandlerStateChange","_onGestureEvent","processColor","AnimatedBaseButton","createAnimatedComponent","btnStyles","underlay","RectButton","_onActiveStateChange","_opacity","activeOpacity","Value","resolvedStyle","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","defaultProps","BorderlessButton","ScrollView","RNScrollView","RNSwitch","RNTextInput","RNDrawerLayoutAndroid","positions","FlatList","renderScrollComponent","scrollProps","ForceTouchFallback","PlatformConstants","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","activeOffsetY","activeOffsetX","failOffsetY","failOffsetX","avgTouches","minDeltaX","minOffsetX","minDeltaY","minOffsetY","transformPanGestureHandlerProps","_updateAnimatedEvent","friction","overshootFriction","dragX","useNativeAnimations","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","overshootLeft","overshootRight","transX","interpolate","_transX","_showLeftAction","_leftActionTranslate","MIN_VALUE","extrapolate","_showRightAction","_rightActionTranslate","_onTapHandlerStateChange","_handleRelease","rowState","leftThreshold","rightThreshold","startOffsetX","_currentOffset","_animateRow","fromValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","bounciness","animationOptions","finished","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","layout","openLeft","openRight","renderLeftActions","renderRightActions","leftActions","translateX","onLayout","rightActions","containerStyle","childrenContainerStyle","overflow","isRTL","DrawerLayout","_accessibilityIsModalView","createRef","_pointerEventsView","_panGestureHandler","_drawerShown","drawerPosition","drawerWidth","drawerType","dragXValue","touchXValue","touchX","drawerTranslation","containerWidth","multiply","dragOffsetFromOnStartPosition","_openValue","_handleContainerLayout","_emitStateChanged","newState","drawerWillShow","onDrawerStateChanged","_openingHandlerStateChange","keyboardDismissMode","Keyboard","dismiss","hideStatusBar","StatusBar","setHidden","statusBarAnimation","drawerLockMode","closeDrawer","gestureStartX","dragOffsetBasedOnStart","_animateDrawer","_updateShowing","showing","setNativeProps","accessibilityViewIsModal","minSwipeDistance","edgeWidth","fromLeft","gestureOrientation","nextFramePosition","min","willShow","onDrawerOpen","onDrawerClose","openDrawer","forceUpdate","_renderOverlay","invariant","dynamicOverlayStyles","overlayColor","overlay","_renderDrawer","containerStyles","drawerBackgroundColor","drawerContainerStyle","contentContainerStyle","drawerSlide","containerSlide","reverseContentDirection","dynamicDrawerStyles","openValue","drawerTranslateX","closedDrawerOffset","drawerStyles","main","containerOnBack","containerInFront","importantForAccessibility","drawerContainer","renderNavigationView","_setPanGestureRef","onGestureRef","Left","Right","zIndex","TOUCHABLE_STATE","PublicPropTypes","accessible","accessibilityHint","nativeID","delayPressOut","delayLongPress","InternalPropTypes","extraButtonProps","GenericTouchable","longPressDetected","STATE","onMoveIn","onMoveOut","moveToState","handlePressIn","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","onLongPressDetected","pressInTimeout","longPressTimeout","handleMoveOutside","coreProps","accessibilityStates","publicPropTypes","internalPropTypes","TouchableWithoutFeedback","TouchableOpacity","getChildStyleOpacityWithDefault","childStyle","setOpacityTo","timing","easing","Easing","quad","from","to","any","TouchableHighlight","showUnderlay","hasPressHandler","extraChildStyle","extraUnderlayStyle","onShowUnderlay","hideUnderlay","onHideUnderlay","compose","renderChildren","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","differenceInMinutes","diff","startOfDay","date","setHours"],"mappings":"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","file":"static/js/12.78c9ca43.chunk.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({ children, style, numeric, ...rest }: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text numberOfLines={1}>{children}</Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n","import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTablePagination = ({\n  label,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View {...rest} style={[styles.container, style]}>\n      <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n        {label}\n      </Text>\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n      />\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n","import * as React from 'react';\nimport color from 'color';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n","import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/data-table.png\" />\n *     <figcaption>Data table</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <DataTable>\n *     <DataTable.Header>\n *       <DataTable.Title>Dessert</DataTable.Title>\n *       <DataTable.Title numeric>Calories</DataTable.Title>\n *       <DataTable.Title numeric>Fat</DataTable.Title>\n *     </DataTable.Header>\n *\n *     <DataTable.Row>\n *       <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n *       <DataTable.Cell numeric>159</DataTable.Cell>\n *       <DataTable.Cell numeric>6.0</DataTable.Cell>\n *     </DataTable.Row>\n *\n *     <DataTable.Row>\n *       <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n *       <DataTable.Cell numeric>237</DataTable.Cell>\n *       <DataTable.Cell numeric>8.0</DataTable.Cell>\n *     </DataTable.Row>\n *\n *     <DataTable.Pagination\n *       page={1}\n *       numberOfPages={3}\n *       onPageChange={page => {\n *         console.log(page);\n *       }}\n *       label=\"1-2 of 6\"\n *     />\n *   </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DataTable = ({ children, style, ...rest }: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {children}\n  </View>\n);\n\n// @component ./DataTableHeader.tsx\nDataTable.Header = DataTableHeader;\n\n// @component ./DataTableTitle.tsx\nDataTable.Title = DataTableTitle;\n\n// @component ./DataTableRow.tsx\nDataTable.Row = DataTableRow;\n\n// @component ./DataTableCell.tsx\nDataTable.Cell = DataTableCell;\n\n// @component ./DataTablePagination.tsx\nDataTable.Pagination = DataTablePagination;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n","import type { ColorValue } from 'react-native';\nimport color from 'color';\n\nexport default function getContrastingColor(\n  input: ColorValue,\n  light: string,\n  dark: string\n): string {\n  if (typeof input === 'string') {\n    return color(input).isLight() ? dark : light;\n  }\n\n  return light;\n}\n","import color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  AccessibilityState,\n} from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport type { $RemoveChildren } from '../../types';\n\ngetContrastingColor;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = ({\n  small,\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  animated = true,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  loading,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const {\n    backgroundColor = disabled ? disabledColor : theme.colors.accent,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  let foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = getContrastingColor(\n      backgroundColor,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ ...accessibilityState, disabled }}\n        style={styles.touchable}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.content,\n            label ? styles.extended : small ? styles.small : styles.standard,\n          ]}\n          pointerEvents=\"none\"\n        >\n          {icon && loading !== true ? (\n            <IconComponent source={icon} size={24} color={foregroundColor} />\n          ) : null}\n          {loading ? (\n            <ActivityIndicator size={18} color={foregroundColor} />\n          ) : null}\n          {label ? (\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                uppercase && styles.uppercaseLabel,\n                { color: foregroundColor, ...theme.fonts.medium },\n              ]}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n","import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `small`: boolean describing whether small or normal sized FAB is rendered. Defaults to `true`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    small?: boolean;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { colors } = theme;\n\n  const labelColor = theme.dark\n    ? colors.text\n    : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        })\n      : 1\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: colors.backdrop,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => (\n            <View\n              key={i} // eslint-disable-line react/no-array-index-key\n              style={[\n                styles.item,\n                {\n                  marginHorizontal:\n                    typeof it.small === 'undefined' || it.small ? 24 : 16,\n                },\n              ]}\n              pointerEvents={open ? 'box-none' : 'none'}\n            >\n              {it.label && (\n                <View>\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                </View>\n              )}\n              <FAB\n                small={typeof it.small !== 'undefined' ? it.small : true}\n                icon={it.icon}\n                color={it.color}\n                style={\n                  [\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ] as StyleProp<ViewStyle>\n                }\n                onPress={() => {\n                  it.onPress();\n                  close();\n                }}\n                accessibilityLabel={\n                  typeof it.accessibilityLabel !== 'undefined'\n                    ? it.accessibilityLabel\n                    : it.label\n                }\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={it.testID}\n                visible={open}\n              />\n            </View>\n          ))}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n","import FABComponent from './FAB';\nimport FABGroup from './FABGroup';\n\nconst FAB = Object.assign(\n  // @component ./FAB.tsx\n  FABComponent,\n  {\n    // @component ./FABGroup.tsx\n    Group: FABGroup,\n  }\n);\n\nexport default FAB;\n","import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport type { $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({ inset, style, theme, ...rest }: Props) => {\n  const { dark: isDarkTheme } = theme;\n  return (\n    <View\n      {...rest}\n      style={[\n        isDarkTheme ? styles.dark : styles.light,\n        inset && styles.inset,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n","import * as React from 'react';\nimport {\n  AccessibilityState,\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport type { IconSource } from './Icon';\nimport Icon from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport TouchableRipple from './TouchableRipple/TouchableRipple';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport type { EllipsizeProp } from '../types';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Mode of the chip.\n   * - `flat` - flat chip without outline.\n   * - `outlined` - chip with an outline.\n   */\n  mode?: 'flat' | 'outlined';\n  /**\n   * Text content of the `Chip`.\n   */\n  children: React.ReactNode;\n  /**\n   * Icon to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  icon?: IconSource;\n  /**\n   * Avatar to display for the `Chip`. Both icon and avatar cannot be specified.\n   */\n  avatar?: React.ReactNode;\n  /**\n   * Whether chip is selected.\n   */\n  selected?: boolean;\n  /**\n   * Whether to style the chip color as selected.\n   */\n  selectedColor?: string;\n  /**\n   * Whether the chip is disabled. A disabled chip is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the chip. This is read by the screen reader when the user taps the chip.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility label for the close icon. This is read by the screen reader when the user taps the close icon.\n   */\n  closeIconAccessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on close button press. The close button appears only when this prop is specified.\n   */\n  onClose?: () => void;\n  /**\n   * Style of chip's text\n   */\n  textStyle?: any;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from chip props to touchable for Detox tests.\n   */\n  testID?: string;\n  /**\n   * Ellipsize Mode for the children text\n   */\n  ellipsizeMode?: EllipsizeProp;\n};\n\n/**\n * Chips can be used to display entities in small blocks.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/chip-1.png\" />\n *     <figcaption>Flat chip</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/chip-2.png\" />\n *     <figcaption>Outlined chip</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Chip } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Chip = ({\n  mode = 'flat',\n  children,\n  icon,\n  avatar,\n  selected = false,\n  disabled = false,\n  accessibilityLabel,\n  closeIconAccessibilityLabel = 'Close',\n  onPress,\n  onLongPress,\n  onClose,\n  textStyle,\n  style,\n  theme,\n  testID,\n  selectedColor,\n  ellipsizeMode,\n  ...rest\n}: Props) => {\n  const { current: elevation } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n\n  const handlePressIn = () => {\n    const { scale } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: 4,\n      duration: 200 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressOut = () => {\n    const { scale } = theme.animation;\n    Animated.timing(elevation, {\n      toValue: 0,\n      duration: 150 * scale,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const { dark, colors } = theme;\n  const defaultBackgroundColor =\n    mode === 'outlined' ? colors.surface : dark ? '#383838' : '#ebebeb';\n\n  const {\n    backgroundColor = defaultBackgroundColor,\n    borderRadius = 16,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  const borderColor =\n    mode === 'outlined'\n      ? color(\n          selectedColor !== undefined\n            ? selectedColor\n            : color(dark ? white : black)\n        )\n          .alpha(0.29)\n          .rgb()\n          .string()\n      : backgroundColor;\n  const textColor = disabled\n    ? colors.disabled\n    : color(selectedColor !== undefined ? selectedColor : colors.text)\n        .alpha(0.87)\n        .rgb()\n        .string();\n  const iconColor = disabled\n    ? colors.disabled\n    : color(selectedColor !== undefined ? selectedColor : colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n\n  const backgroundColorString =\n    typeof backgroundColor === 'string'\n      ? backgroundColor\n      : defaultBackgroundColor;\n  const selectedBackgroundColor = (dark\n    ? color(backgroundColorString).lighten(mode === 'outlined' ? 0.2 : 0.4)\n    : color(backgroundColorString).darken(mode === 'outlined' ? 0.08 : 0.2)\n  )\n    .rgb()\n    .string();\n\n  const underlayColor = selectedColor\n    ? color(selectedColor).fade(0.5).rgb().string()\n    : selectedBackgroundColor;\n\n  const accessibilityTraits = ['button'];\n  const accessibilityState: AccessibilityState = {\n    selected,\n    disabled,\n  };\n\n  if (selected) {\n    accessibilityTraits.push('selected');\n  }\n\n  if (disabled) {\n    accessibilityTraits.push('disabled');\n  }\n\n  return (\n    <Surface\n      style={\n        [\n          styles.container,\n          {\n            elevation: Platform.OS === 'android' ? elevation : 0,\n            backgroundColor: selected\n              ? selectedBackgroundColor\n              : backgroundColor,\n            borderColor,\n            borderRadius,\n          },\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      {...rest}\n    >\n      <TouchableRipple\n        borderless\n        delayPressIn={0}\n        style={{ borderRadius }}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        underlayColor={underlayColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={accessibilityTraits}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={accessibilityState}\n        testID={testID}\n      >\n        <View style={[styles.content, { paddingRight: onClose ? 32 : 4 }]}>\n          {avatar && !icon ? (\n            <View style={[styles.avatarWrapper, disabled && { opacity: 0.26 }]}>\n              {React.isValidElement(avatar)\n                ? React.cloneElement(avatar, {\n                    style: [styles.avatar, avatar.props.style],\n                  })\n                : avatar}\n            </View>\n          ) : null}\n          {icon || selected ? (\n            <View\n              style={[\n                styles.icon,\n                avatar ? [styles.avatar, styles.avatarSelected] : null,\n              ]}\n            >\n              {icon ? (\n                <Icon\n                  source={icon}\n                  color={avatar ? white : iconColor}\n                  size={18}\n                />\n              ) : (\n                <MaterialCommunityIcon\n                  name=\"check\"\n                  color={avatar ? white : iconColor}\n                  size={18}\n                  direction=\"ltr\"\n                />\n              )}\n            </View>\n          ) : null}\n          <Text\n            selectable={false}\n            numberOfLines={1}\n            style={[\n              styles.text,\n              {\n                ...theme.fonts.regular,\n                color: textColor,\n                marginRight: onClose ? 0 : 8,\n                marginLeft: avatar || icon || selected ? 4 : 8,\n              },\n              textStyle,\n            ]}\n            ellipsizeMode={ellipsizeMode}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableRipple>\n      {onClose ? (\n        <View style={styles.closeButtonStyle}>\n          <TouchableWithoutFeedback\n            onPress={onClose}\n            // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            accessibilityLabel={closeIconAccessibilityLabel}\n          >\n            <View style={[styles.icon, styles.closeIcon]}>\n              <MaterialCommunityIcon\n                name=\"close-circle\"\n                size={16}\n                color={iconColor}\n                direction=\"ltr\"\n              />\n            </View>\n          </TouchableWithoutFeedback>\n        </View>\n      ) : null}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: 'row',\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center',\n  },\n  closeIcon: {\n    marginRight: 4,\n  },\n  text: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4,\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n  },\n  avatarWrapper: {\n    marginRight: 4,\n  },\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)',\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Chip);\n","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","const State = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nexport default State;\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport createElement from '../createElement';\nimport multiplyStyleLengthValue from '../../modules/multiplyStyleLengthValue';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nvar emptyObject = {};\nvar thumbDefaultBoxShadow = '0px 1px 3px rgba(0,0,0,0.5)';\nvar thumbFocusedBoxShadow = thumbDefaultBoxShadow + \", 0 0 0 10px rgba(0,0,0,0.1)\";\nvar Switch = forwardRef(function (props, forwardedRef) {\n  var accessibilityLabel = props.accessibilityLabel,\n      _props$activeThumbCol = props.activeThumbColor,\n      activeThumbColor = _props$activeThumbCol === void 0 ? '#009688' : _props$activeThumbCol,\n      _props$activeTrackCol = props.activeTrackColor,\n      activeTrackColor = _props$activeTrackCol === void 0 ? '#A3D3CF' : _props$activeTrackCol,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      onValueChange = props.onValueChange,\n      _props$style = props.style,\n      style = _props$style === void 0 ? emptyObject : _props$style,\n      _props$thumbColor = props.thumbColor,\n      thumbColor = _props$thumbColor === void 0 ? '#FAFAFA' : _props$thumbColor,\n      _props$trackColor = props.trackColor,\n      trackColor = _props$trackColor === void 0 ? '#939393' : _props$trackColor,\n      _props$value = props.value,\n      value = _props$value === void 0 ? false : _props$value,\n      other = _objectWithoutPropertiesLoose(props, [\"accessibilityLabel\", \"activeThumbColor\", \"activeTrackColor\", \"disabled\", \"onValueChange\", \"style\", \"thumbColor\", \"trackColor\", \"value\"]);\n\n  var thumbRef = useRef(null);\n\n  function handleChange(event) {\n    if (onValueChange != null) {\n      onValueChange(event.nativeEvent.target.checked);\n    }\n  }\n\n  function handleFocusState(event) {\n    var isFocused = event.nativeEvent.type === 'focus';\n    var boxShadow = isFocused ? thumbFocusedBoxShadow : thumbDefaultBoxShadow;\n\n    if (thumbRef.current != null) {\n      thumbRef.current.style.boxShadow = boxShadow;\n    }\n  }\n\n  var _StyleSheet$flatten = StyleSheet.flatten(style),\n      styleHeight = _StyleSheet$flatten.height,\n      styleWidth = _StyleSheet$flatten.width;\n\n  var height = styleHeight || 20;\n  var minWidth = multiplyStyleLengthValue(height, 2);\n  var width = styleWidth > minWidth ? styleWidth : minWidth;\n  var trackBorderRadius = multiplyStyleLengthValue(height, 0.5);\n\n  var trackCurrentColor = function () {\n    if (value === true) {\n      if (trackColor != null && typeof trackColor === 'object') {\n        return trackColor.true;\n      } else {\n        return activeTrackColor;\n      }\n    } else {\n      if (trackColor != null && typeof trackColor === 'object') {\n        return trackColor.false;\n      } else {\n        return trackColor;\n      }\n    }\n  }();\n\n  var thumbCurrentColor = value ? activeThumbColor : thumbColor;\n  var thumbHeight = height;\n  var thumbWidth = thumbHeight;\n  var rootStyle = [styles.root, style, disabled && styles.cursorDefault, {\n    height: height,\n    width: width\n  }];\n  var trackStyle = [styles.track, {\n    backgroundColor: disabled ? '#D5D5D5' : trackCurrentColor,\n    borderRadius: trackBorderRadius\n  }];\n  var thumbStyle = [styles.thumb, value && styles.thumbActive, {\n    backgroundColor: disabled ? '#BDBDBD' : thumbCurrentColor,\n    height: thumbHeight,\n    marginStart: value ? multiplyStyleLengthValue(thumbWidth, -1) : 0,\n    width: thumbWidth\n  }];\n  var nativeControl = createElement('input', {\n    accessibilityLabel: accessibilityLabel,\n    checked: value,\n    disabled: disabled,\n    onBlur: handleFocusState,\n    onChange: handleChange,\n    onFocus: handleFocusState,\n    ref: forwardedRef,\n    style: [styles.nativeControl, styles.cursorInherit],\n    type: 'checkbox'\n  });\n  return React.createElement(View, _extends({}, other, {\n    style: rootStyle\n  }), React.createElement(View, {\n    style: trackStyle\n  }), React.createElement(View, {\n    ref: thumbRef,\n    style: thumbStyle\n  }), nativeControl);\n});\nSwitch.displayName = 'Switch';\nvar styles = StyleSheet.create({\n  root: {\n    cursor: 'pointer',\n    userSelect: 'none'\n  },\n  cursorDefault: {\n    cursor: 'default'\n  },\n  cursorInherit: {\n    cursor: 'inherit'\n  },\n  track: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    height: '70%',\n    margin: 'auto',\n    transitionDuration: '0.1s',\n    width: '100%'\n  }),\n  thumb: {\n    alignSelf: 'flex-start',\n    borderRadius: '100%',\n    boxShadow: thumbDefaultBoxShadow,\n    start: '0%',\n    transform: [{\n      translateZ: 0\n    }],\n    transitionDuration: '0.1s'\n  },\n  thumbActive: {\n    start: '100%'\n  },\n  nativeControl: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    height: '100%',\n    margin: 0,\n    opacity: 0,\n    padding: 0,\n    width: '100%'\n  })\n});\nexport default Switch;","import UnimplementedView from '../../modules/UnimplementedView';\nexport default UnimplementedView;","/* eslint-disable */\n\n/**\n * Copyright 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * From React 16.0.0\n */\nimport invariant from 'fbjs/lib/invariant';\n\nvar twoArgumentPooler = function twoArgumentPooler(a1, a2) {\n  var Klass = this;\n\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar standardReleaser = function standardReleaser(instance) {\n  var Klass = this;\n  instance.destructor();\n\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = twoArgumentPooler;\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\n\nvar addPoolingTo = function addPoolingTo(CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  twoArgumentPooler: twoArgumentPooler\n};\nexport default PooledClass;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport PooledClass from '../../vendor/react-native/PooledClass';\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n/**\n * PooledClass representing the bounding rectangle of a region.\n */\n\nfunction BoundingDimensions(width, height) {\n  this.width = width;\n  this.height = height;\n}\n\nBoundingDimensions.prototype.destructor = function () {\n  this.width = null;\n  this.height = null;\n};\n\nBoundingDimensions.getPooledFromElement = function (element) {\n  return BoundingDimensions.getPooled(element.offsetWidth, element.offsetHeight);\n};\n\nPooledClass.addPoolingTo(BoundingDimensions, twoArgumentPooler);\nexport default BoundingDimensions;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport PooledClass from '../../vendor/react-native/PooledClass';\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\nfunction Position(left, top) {\n  this.left = left;\n  this.top = top;\n}\n\nPosition.prototype.destructor = function () {\n  this.left = null;\n  this.top = null;\n};\n\nPooledClass.addPoolingTo(Position, twoArgumentPooler);\nexport default Position;","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\nimport BoundingDimensions from './BoundingDimensions';\nimport findNodeHandle from '../findNodeHandle';\nimport normalizeColor from 'normalize-css-color';\nimport Position from './Position';\nimport React from 'react';\nimport UIManager from '../UIManager';\nimport View from '../View';\n\nvar extractSingleTouch = function extractSingleTouch(nativeEvent) {\n  var touches = nativeEvent.touches;\n  var changedTouches = nativeEvent.changedTouches;\n  var hasTouches = touches && touches.length > 0;\n  var hasChangedTouches = changedTouches && changedTouches.length > 0;\n  return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;\n};\n/**\n * `Touchable`: Taps done right.\n *\n * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`\n * will measure time/geometry and tells you when to give feedback to the user.\n *\n * ====================== Touchable Tutorial ===============================\n * The `Touchable` mixin helps you handle the \"press\" interaction. It analyzes\n * the geometry of elements, and observes when another responder (scroll view\n * etc) has stolen the touch lock. It notifies your component when it should\n * give feedback to the user. (bouncing/highlighting/unhighlighting).\n *\n * - When a touch was activated (typically you highlight)\n * - When a touch was deactivated (typically you unhighlight)\n * - When a touch was \"pressed\" - a touch ended while still within the geometry\n *   of the element, and no other element (like scroller) has \"stolen\" touch\n *   lock (\"responder\") (Typically you bounce the element).\n *\n * A good tap interaction isn't as simple as you might think. There should be a\n * slight delay before showing a highlight when starting a touch. If a\n * subsequent touch move exceeds the boundary of the element, it should\n * unhighlight, but if that same touch is brought back within the boundary, it\n * should rehighlight again. A touch can move in and out of that boundary\n * several times, each time toggling highlighting, but a \"press\" is only\n * triggered if that touch ends while within the element's boundary and no\n * scroller (or anything else) has stolen the lock on touches.\n *\n * To create a new type of component that handles interaction using the\n * `Touchable` mixin, do the following:\n *\n * - Initialize the `Touchable` state.\n *\n *   getInitialState: function() {\n *     return merge(this.touchableGetInitialState(), yourComponentState);\n *   }\n *\n * - Choose the rendered component who's touches should start the interactive\n *   sequence. On that rendered node, forward all `Touchable` responder\n *   handlers. You can choose any rendered node you like. Choose a node whose\n *   hit target you'd like to instigate the interaction sequence:\n *\n *   // In render function:\n *   return (\n *     <View\n *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n *       onResponderGrant={this.touchableHandleResponderGrant}\n *       onResponderMove={this.touchableHandleResponderMove}\n *       onResponderRelease={this.touchableHandleResponderRelease}\n *       onResponderTerminate={this.touchableHandleResponderTerminate}>\n *       <View>\n *         Even though the hit detection/interactions are triggered by the\n *         wrapping (typically larger) node, we usually end up implementing\n *         custom logic that highlights this inner one.\n *       </View>\n *     </View>\n *   );\n *\n * - You may set up your own handlers for each of these events, so long as you\n *   also invoke the `touchable*` handlers inside of your custom handler.\n *\n * - Implement the handlers on your component class in order to provide\n *   feedback to the user. See documentation for each of these class methods\n *   that you should implement.\n *\n *   touchableHandlePress: function() {\n *      this.performBounceAnimation();  // or whatever you want to do.\n *   },\n *   touchableHandleActivePressIn: function() {\n *     this.beginHighlighting(...);  // Whatever you like to convey activation\n *   },\n *   touchableHandleActivePressOut: function() {\n *     this.endHighlighting(...);  // Whatever you like to convey deactivation\n *   },\n *\n * - There are more advanced methods you can implement (see documentation below):\n *   touchableGetHighlightDelayMS: function() {\n *     return 20;\n *   }\n *   // In practice, *always* use a predeclared constant (conserve memory).\n *   touchableGetPressRectOffset: function() {\n *     return {top: 20, left: 20, right: 20, bottom: 100};\n *   }\n */\n\n/**\n * Touchable states.\n */\n\n\nvar States = {\n  NOT_RESPONDER: 'NOT_RESPONDER',\n  // Not the responder\n  RESPONDER_INACTIVE_PRESS_IN: 'RESPONDER_INACTIVE_PRESS_IN',\n  // Responder, inactive, in the `PressRect`\n  RESPONDER_INACTIVE_PRESS_OUT: 'RESPONDER_INACTIVE_PRESS_OUT',\n  // Responder, inactive, out of `PressRect`\n  RESPONDER_ACTIVE_PRESS_IN: 'RESPONDER_ACTIVE_PRESS_IN',\n  // Responder, active, in the `PressRect`\n  RESPONDER_ACTIVE_PRESS_OUT: 'RESPONDER_ACTIVE_PRESS_OUT',\n  // Responder, active, out of `PressRect`\n  RESPONDER_ACTIVE_LONG_PRESS_IN: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  // Responder, active, in the `PressRect`, after long press threshold\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n  // Responder, active, out of `PressRect`, after long press threshold\n  ERROR: 'ERROR'\n};\n\n/*\n * Quick lookup map for states that are considered to be \"active\"\n */\nvar baseStatesConditions = {\n  NOT_RESPONDER: false,\n  RESPONDER_INACTIVE_PRESS_IN: false,\n  RESPONDER_INACTIVE_PRESS_OUT: false,\n  RESPONDER_ACTIVE_PRESS_IN: false,\n  RESPONDER_ACTIVE_PRESS_OUT: false,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: false,\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: false,\n  ERROR: false\n};\n\nvar IsActive = _objectSpread({}, baseStatesConditions, {\n  RESPONDER_ACTIVE_PRESS_OUT: true,\n  RESPONDER_ACTIVE_PRESS_IN: true\n});\n/**\n * Quick lookup for states that are considered to be \"pressing\" and are\n * therefore eligible to result in a \"selection\" if the press stops.\n */\n\n\nvar IsPressingIn = _objectSpread({}, baseStatesConditions, {\n  RESPONDER_INACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_PRESS_IN: true,\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true\n});\n\nvar IsLongPressingIn = _objectSpread({}, baseStatesConditions, {\n  RESPONDER_ACTIVE_LONG_PRESS_IN: true\n});\n/**\n * Inputs to the state machine.\n */\n\n\nvar Signals = {\n  DELAY: 'DELAY',\n  RESPONDER_GRANT: 'RESPONDER_GRANT',\n  RESPONDER_RELEASE: 'RESPONDER_RELEASE',\n  RESPONDER_TERMINATED: 'RESPONDER_TERMINATED',\n  ENTER_PRESS_RECT: 'ENTER_PRESS_RECT',\n  LEAVE_PRESS_RECT: 'LEAVE_PRESS_RECT',\n  LONG_PRESS_DETECTED: 'LONG_PRESS_DETECTED'\n};\n\n/**\n * Mapping from States x Signals => States\n */\nvar Transitions = {\n  NOT_RESPONDER: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.ERROR,\n    RESPONDER_TERMINATED: States.ERROR,\n    ENTER_PRESS_RECT: States.ERROR,\n    LEAVE_PRESS_RECT: States.ERROR,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_IN,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: States.ERROR,\n    RESPONDER_GRANT: States.ERROR,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n    LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n    LONG_PRESS_DETECTED: States.ERROR\n  },\n  error: {\n    DELAY: States.NOT_RESPONDER,\n    RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n    RESPONDER_RELEASE: States.NOT_RESPONDER,\n    RESPONDER_TERMINATED: States.NOT_RESPONDER,\n    ENTER_PRESS_RECT: States.NOT_RESPONDER,\n    LEAVE_PRESS_RECT: States.NOT_RESPONDER,\n    LONG_PRESS_DETECTED: States.NOT_RESPONDER\n  }\n}; // ==== Typical Constants for integrating into UI components ====\n// var HIT_EXPAND_PX = 20;\n// var HIT_VERT_OFFSET_PX = 10;\n\nvar HIGHLIGHT_DELAY_MS = 130;\nvar PRESS_EXPAND_PX = 20;\nvar LONG_PRESS_THRESHOLD = 500;\nvar LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;\nvar LONG_PRESS_ALLOWED_MOVEMENT = 10; // Default amount \"active\" region protrudes beyond box\n\n/**\n * By convention, methods prefixed with underscores are meant to be @private,\n * and not @protected. Mixers shouldn't access them - not even to provide them\n * as callback handlers.\n *\n *\n * ========== Geometry =========\n * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n *  +--------------------------+\n *  |                          | - \"Start\" events in `HitRect` cause `HitRect`\n *  |  +--------------------+  |   to become the responder.\n *  |  |  +--------------+  |  | - `HitRect` is typically expanded around\n *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.\n *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,\n *  |  |  |              |  |  |   and before letting up, the Visual React\n *  |  |  +--------------+  |  |   will become \"active\". This makes it eligible\n *  |  |     HitRect        |  |   for being highlighted (so long as the\n *  |  +--------------------+  |   press remains in the `PressRect`).\n *  |        PressRect     o   |\n *  +----------------------|---+\n *           Out Region    |\n *                         +-----+ This gap between the `HitRect` and\n *                                 `PressRect` allows a touch to move far away\n *                                 from the original hit rect, and remain\n *                                 highlighted, and eligible for a \"Press\".\n *                                 Customize this via\n *                                 `touchableGetPressRectOffset()`.\n *\n *\n *\n * ======= State Machine =======\n *\n * +-------------+ <---+ RESPONDER_RELEASE\n * |NOT_RESPONDER|\n * +-------------+ <---+ RESPONDER_TERMINATED\n *     +\n *     | RESPONDER_GRANT (HitRect)\n *     v\n * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+\n * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|\n * +---------------------------+          +-------------------------+                +------------------------------+\n *     +            ^                         +           ^                                 +           ^\n *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_\n *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT\n *     |            |                         |           |                                 |           |\n *     v            +                         v           +                                 v           +\n * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+\n * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|\n * +----------------------------+         +--------------------------+               +-------------------------------+\n *\n * T + DELAY => LONG_PRESS_DELAY_MS + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the `touchableHandlePress` abstract method invocation that occurs\n * when a responder is released while in either of the \"Press\" states.\n *\n * The other important side effects are the highlight abstract method\n * invocations (internal callbacks) to be implemented by the mixer.\n *\n *\n * @lends Touchable.prototype\n */\n\nvar TouchableMixin = {\n  // HACK (part 1): basic support for touchable interactions using a keyboard\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    this._touchableNode = findNodeHandle(this);\n\n    if (this._touchableNode && this._touchableNode.addEventListener) {\n      this._touchableBlurListener = function (e) {\n        if (_this._isTouchableKeyboardActive) {\n          if (_this.state.touchable.touchState && _this.state.touchable.touchState !== States.NOT_RESPONDER) {\n            _this.touchableHandleResponderTerminate({\n              nativeEvent: e\n            });\n          }\n\n          _this._isTouchableKeyboardActive = false;\n        }\n      };\n\n      this._touchableNode.addEventListener('blur', this._touchableBlurListener);\n    }\n  },\n\n  /**\n   * Clear all timeouts on unmount\n   */\n  componentWillUnmount: function componentWillUnmount() {\n    if (this._touchableNode && this._touchableNode.addEventListener) {\n      this._touchableNode.removeEventListener('blur', this._touchableBlurListener);\n    }\n\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n  },\n\n  /**\n   * It's prefer that mixins determine state in this way, having the class\n   * explicitly mix the state in the one and only `getInitialState` method.\n   *\n   * @return {object} State object to be placed inside of\n   * `this.state.touchable`.\n   */\n  touchableGetInitialState: function touchableGetInitialState() {\n    return {\n      touchable: {\n        touchState: undefined,\n        responderID: null\n      }\n    };\n  },\n  // ==== Hooks to Gesture Responder system ====\n\n  /**\n   * Must return true if embedded in a native platform scroll view.\n   */\n  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {\n    return !this.props.rejectResponderTermination;\n  },\n\n  /**\n   * Must return true to start the process of `Touchable`.\n   */\n  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {\n    return !this.props.disabled;\n  },\n\n  /**\n   * Return true to cancel press on long press.\n   */\n  touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {\n    return true;\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderGrant` event.\n   * @param {SyntheticEvent} e Synthetic event from event system.\n   *\n   */\n  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {\n    var dispatchID = e.currentTarget; // Since e is used in a callback invoked on another event loop\n    // (as in setTimeout etc), we need to call e.persist() on the\n    // event to make sure it doesn't get reused in the event object pool.\n\n    e.persist();\n    this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n    this.pressOutDelayTimeout = null;\n    this.state.touchable.touchState = States.NOT_RESPONDER;\n    this.state.touchable.responderID = dispatchID;\n\n    this._receiveSignal(Signals.RESPONDER_GRANT, e);\n\n    var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;\n    delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;\n\n    if (delayMS !== 0) {\n      this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);\n    } else {\n      this._handleDelay(e);\n    }\n\n    var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;\n    longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;\n    this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderRelease` event.\n   */\n  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {\n    this.pressInLocation = null;\n\n    this._receiveSignal(Signals.RESPONDER_RELEASE, e);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderTerminate` event.\n   */\n  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {\n    this.pressInLocation = null;\n\n    this._receiveSignal(Signals.RESPONDER_TERMINATED, e);\n  },\n\n  /**\n   * Place as callback for a DOM element's `onResponderMove` event.\n   */\n  touchableHandleResponderMove: function touchableHandleResponderMove(e) {\n    // Measurement may not have returned yet.\n    if (!this.state.touchable.positionOnActivate) {\n      return;\n    }\n\n    var positionOnActivate = this.state.touchable.positionOnActivate;\n    var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;\n    var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {\n      left: PRESS_EXPAND_PX,\n      right: PRESS_EXPAND_PX,\n      top: PRESS_EXPAND_PX,\n      bottom: PRESS_EXPAND_PX\n    };\n    var pressExpandLeft = pressRectOffset.left;\n    var pressExpandTop = pressRectOffset.top;\n    var pressExpandRight = pressRectOffset.right;\n    var pressExpandBottom = pressRectOffset.bottom;\n    var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;\n\n    if (hitSlop) {\n      pressExpandLeft += hitSlop.left || 0;\n      pressExpandTop += hitSlop.top || 0;\n      pressExpandRight += hitSlop.right || 0;\n      pressExpandBottom += hitSlop.bottom || 0;\n    }\n\n    var touch = extractSingleTouch(e.nativeEvent);\n    var pageX = touch && touch.pageX;\n    var pageY = touch && touch.pageY;\n\n    if (this.pressInLocation) {\n      var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);\n\n      if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {\n        this._cancelLongPressDelayTimeout();\n      }\n    }\n\n    var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;\n\n    if (isTouchWithinActive) {\n      var prevState = this.state.touchable.touchState;\n\n      this._receiveSignal(Signals.ENTER_PRESS_RECT, e);\n\n      var curState = this.state.touchable.touchState;\n\n      if (curState === States.RESPONDER_INACTIVE_PRESS_IN && prevState !== States.RESPONDER_INACTIVE_PRESS_IN) {\n        // fix for t7967420\n        this._cancelLongPressDelayTimeout();\n      }\n    } else {\n      this._cancelLongPressDelayTimeout();\n\n      this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);\n    }\n  },\n\n  /**\n   * Invoked when the item receives focus. Mixers might override this to\n   * visually distinguish the `VisualRect` so that the user knows that it\n   * currently has the focus. Most platforms only support a single element being\n   * focused at a time, in which case there may have been a previously focused\n   * element that was blurred just prior to this. This can be overridden when\n   * using `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n   */\n  touchableHandleFocus: function touchableHandleFocus(e) {\n    this.props.onFocus && this.props.onFocus(e);\n  },\n\n  /**\n   * Invoked when the item loses focus. Mixers might override this to\n   * visually distinguish the `VisualRect` so that the user knows that it\n   * no longer has focus. Most platforms only support a single element being\n   * focused at a time, in which case the focus may have moved to another.\n   * This can be overridden when using\n   * `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n   */\n  touchableHandleBlur: function touchableHandleBlur(e) {\n    this.props.onBlur && this.props.onBlur(e);\n  },\n  // ==== Abstract Application Callbacks ====\n\n  /**\n   * Invoked when the item should be highlighted. Mixers should implement this\n   * to visually distinguish the `VisualRect` so that the user knows that\n   * releasing a touch will result in a \"selection\" (analog to click).\n   *\n   * @abstract\n   * touchableHandleActivePressIn: function,\n   */\n\n  /**\n   * Invoked when the item is \"active\" (in that it is still eligible to become\n   * a \"select\") but the touch has left the `PressRect`. Usually the mixer will\n   * want to unhighlight the `VisualRect`. If the user (while pressing) moves\n   * back into the `PressRect` `touchableHandleActivePressIn` will be invoked\n   * again and the mixer should probably highlight the `VisualRect` again. This\n   * event will not fire on an `touchEnd/mouseUp` event, only move events while\n   * the user is depressing the mouse/touch.\n   *\n   * @abstract\n   * touchableHandleActivePressOut: function\n   */\n\n  /**\n   * Invoked when the item is \"selected\" - meaning the interaction ended by\n   * letting up while the item was either in the state\n   * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.\n   *\n   * @abstract\n   * touchableHandlePress: function\n   */\n\n  /**\n   * Invoked when the item is long pressed - meaning the interaction ended by\n   * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If\n   * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will\n   * be called as it normally is. If `touchableHandleLongPress` is provided, by\n   * default any `touchableHandlePress` callback will not be invoked. To\n   * override this default behavior, override `touchableLongPressCancelsPress`\n   * to return false. As a result, `touchableHandlePress` will be called when\n   * lifting up, even if `touchableHandleLongPress` has also been called.\n   *\n   * @abstract\n   * touchableHandleLongPress: function\n   */\n\n  /**\n   * Returns the number of millis to wait before triggering a highlight.\n   *\n   * @abstract\n   * touchableGetHighlightDelayMS: function\n   */\n\n  /**\n   * Returns the amount to extend the `HitRect` into the `PressRect`. Positive\n   * numbers mean the size expands outwards.\n   *\n   * @abstract\n   * touchableGetPressRectOffset: function\n   */\n  // ==== Internal Logic ====\n\n  /**\n   * Measures the `HitRect` node on activation. The Bounding rectangle is with\n   * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`\n   * should result in points that are in the same coordinate system as an\n   * event's `globalX/globalY` data values.\n   *\n   * - Consider caching this for the lifetime of the component, or possibly\n   *   being able to share this cache between any `ScrollMap` view.\n   *\n   * @sideeffects\n   * @private\n   */\n  _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {\n    var tag = this.state.touchable.responderID;\n\n    if (tag == null) {\n      return;\n    }\n\n    UIManager.measure(tag, this._handleQueryLayout);\n  },\n  _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {\n    //don't do anything UIManager failed to measure node\n    if (!l && !t && !w && !h && !globalX && !globalY) {\n      return;\n    }\n\n    this.state.touchable.positionOnActivate && Position.release(this.state.touchable.positionOnActivate);\n    this.state.touchable.dimensionsOnActivate && // $FlowFixMe\n    BoundingDimensions.release(this.state.touchable.dimensionsOnActivate);\n    this.state.touchable.positionOnActivate = Position.getPooled(globalX, globalY); // $FlowFixMe\n\n    this.state.touchable.dimensionsOnActivate = BoundingDimensions.getPooled(w, h);\n  },\n  _handleDelay: function _handleDelay(e) {\n    this.touchableDelayTimeout = null;\n\n    this._receiveSignal(Signals.DELAY, e);\n  },\n  _handleLongDelay: function _handleLongDelay(e) {\n    this.longPressDelayTimeout = null;\n    var curState = this.state.touchable.touchState;\n\n    if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {\n      console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');\n    } else {\n      this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);\n    }\n  },\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   *\n   * @param {Signals} signal State machine signal.\n   * @throws Error if invalid state transition or unrecognized signal.\n   * @sideeffects\n   */\n  _receiveSignal: function _receiveSignal(signal, e) {\n    var responderID = this.state.touchable.responderID;\n    var curState = this.state.touchable.touchState;\n    var nextState = Transitions[curState] && Transitions[curState][signal];\n\n    if (!responderID && signal === Signals.RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (!nextState) {\n      throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');\n    }\n\n    if (nextState === States.ERROR) {\n      throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');\n    }\n\n    if (curState !== nextState) {\n      this._performSideEffectsForTransition(curState, nextState, signal, e);\n\n      this.state.touchable.touchState = nextState;\n    }\n  },\n  _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {\n    this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n    this.longPressDelayTimeout = null;\n  },\n  _isHighlight: function _isHighlight(state) {\n    return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;\n  },\n  _savePressInLocation: function _savePressInLocation(e) {\n    var touch = extractSingleTouch(e.nativeEvent);\n    var pageX = touch && touch.pageX;\n    var pageY = touch && touch.pageY;\n    var locationX = touch && touch.locationX;\n    var locationY = touch && touch.locationY;\n    this.pressInLocation = {\n      pageX: pageX,\n      pageY: pageY,\n      locationX: locationX,\n      locationY: locationY\n    };\n  },\n  _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {\n    var deltaX = aX - bX;\n    var deltaY = aY - bY;\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  },\n\n  /**\n   * Will perform a transition between touchable states, and identify any\n   * highlighting or unhighlighting that must be performed for this particular\n   * transition.\n   *\n   * @param {States} curState Current Touchable state.\n   * @param {States} nextState Next Touchable state.\n   * @param {Signal} signal Signal that triggered the transition.\n   * @param {Event} e Native event.\n   * @sideeffects\n   */\n  _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {\n    var curIsHighlight = this._isHighlight(curState);\n\n    var newIsHighlight = this._isHighlight(nextState);\n\n    var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;\n\n    if (isFinalSignal) {\n      this._cancelLongPressDelayTimeout();\n    }\n\n    var isInitialTransition = curState === States.NOT_RESPONDER && nextState === States.RESPONDER_INACTIVE_PRESS_IN;\n    var isActiveTransition = !IsActive[curState] && IsActive[nextState];\n\n    if (isInitialTransition || isActiveTransition) {\n      this._remeasureMetricsOnActivation();\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {\n      this.touchableHandleLongPress && this.touchableHandleLongPress(e);\n    }\n\n    if (newIsHighlight && !curIsHighlight) {\n      this._startHighlight(e);\n    } else if (!newIsHighlight && curIsHighlight) {\n      this._endHighlight(e);\n    }\n\n    if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {\n      var hasLongPressHandler = !!this.props.onLongPress;\n      var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && ( // We *are* long pressing.. // But either has no long handler\n      !hasLongPressHandler || !this.touchableLongPressCancelsPress()); // or we're told to ignore it.\n\n      var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;\n\n      if (shouldInvokePress && this.touchableHandlePress) {\n        if (!newIsHighlight && !curIsHighlight) {\n          // we never highlighted because of delay, but we should highlight now\n          this._startHighlight(e);\n\n          this._endHighlight(e);\n        }\n\n        this.touchableHandlePress(e);\n      }\n    }\n\n    this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n    this.touchableDelayTimeout = null;\n  },\n  _playTouchSound: function _playTouchSound() {\n    UIManager.playTouchSound();\n  },\n  _startHighlight: function _startHighlight(e) {\n    this._savePressInLocation(e);\n\n    this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);\n  },\n  _endHighlight: function _endHighlight(e) {\n    var _this2 = this;\n\n    if (this.touchableHandleActivePressOut) {\n      if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {\n        this.pressOutDelayTimeout = setTimeout(function () {\n          _this2.touchableHandleActivePressOut(e);\n        }, this.touchableGetPressOutDelayMS());\n      } else {\n        this.touchableHandleActivePressOut(e);\n      }\n    }\n  },\n  // HACK (part 2): basic support for touchable interactions using a keyboard (including\n  // delays and longPress)\n  touchableHandleKeyEvent: function touchableHandleKeyEvent(e) {\n    var type = e.type,\n        key = e.key;\n\n    if (key === 'Enter' || key === ' ') {\n      if (type === 'keydown') {\n        if (!this._isTouchableKeyboardActive) {\n          if (!this.state.touchable.touchState || this.state.touchable.touchState === States.NOT_RESPONDER) {\n            this.touchableHandleResponderGrant(e);\n            this._isTouchableKeyboardActive = true;\n          }\n        }\n      } else if (type === 'keyup') {\n        if (this._isTouchableKeyboardActive) {\n          if (this.state.touchable.touchState && this.state.touchable.touchState !== States.NOT_RESPONDER) {\n            this.touchableHandleResponderRelease(e);\n            this._isTouchableKeyboardActive = false;\n          }\n        }\n      }\n\n      e.stopPropagation(); // prevent the default behaviour unless the Touchable functions as a link\n      // and Enter is pressed\n\n      if (!(key === 'Enter' && AccessibilityUtil.propsToAriaRole(this.props) === 'link')) {\n        e.preventDefault();\n      }\n    }\n  },\n  withoutDefaultFocusAndBlur: {}\n};\n/**\n * Provide an optional version of the mixin where `touchableHandleFocus` and\n * `touchableHandleBlur` can be overridden. This allows appropriate defaults to\n * be set on TV platforms, without breaking existing implementations of\n * `Touchable`.\n */\n\nvar touchableHandleFocus = TouchableMixin.touchableHandleFocus,\n    touchableHandleBlur = TouchableMixin.touchableHandleBlur,\n    TouchableMixinWithoutDefaultFocusAndBlur = _objectWithoutPropertiesLoose(TouchableMixin, [\"touchableHandleFocus\", \"touchableHandleBlur\"]);\n\nTouchableMixin.withoutDefaultFocusAndBlur = TouchableMixinWithoutDefaultFocusAndBlur;\nvar Touchable = {\n  Mixin: TouchableMixin,\n  TOUCH_TARGET_DEBUG: false,\n  // Highlights all touchable targets. Toggle with Inspector.\n\n  /**\n   * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).\n   */\n  renderDebugView: function renderDebugView(_ref) {\n    var color = _ref.color,\n        hitSlop = _ref.hitSlop;\n\n    if (!Touchable.TOUCH_TARGET_DEBUG) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');\n    }\n\n    var debugHitSlopStyle = {};\n    hitSlop = hitSlop || {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    };\n\n    for (var key in hitSlop) {\n      debugHitSlopStyle[key] = -hitSlop[key];\n    }\n\n    var normalizedColor = normalizeColor(color);\n\n    if (typeof normalizedColor !== 'number') {\n      return null;\n    }\n\n    var hexColor = '#' + ('00000000' + normalizedColor.toString(16)).substr(-8);\n    return React.createElement(View, {\n      pointerEvents: \"none\",\n      style: _objectSpread({\n        position: 'absolute',\n        borderColor: hexColor.slice(0, -2) + '55',\n        // More opaque\n        borderWidth: 1,\n        borderStyle: 'dashed',\n        backgroundColor: hexColor.slice(0, -2) + '0F'\n      }, debugHitSlopStyle)\n    });\n  }\n};\nexport default Touchable;","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import React from 'react';\nimport {\n  findNodeHandle as findNodeHandleRN,\n  NativeModules,\n  Touchable,\n  Platform,\n} from 'react-native';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from './RNGestureHandlerModule';\nimport State from './State';\n\nfunction findNodeHandle(node) {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\n\nconst { UIManager = {} } = NativeModules;\n\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  ...customGHEventsConfig,\n};\n// In newer versions of RN the `genericDirectEventTypes` is located in the object\n// returned by UIManager.getConstants(), we need to add it there as well to make\n// it compatible with RN 61+\nif (UIManager.getConstants) {\n  UIManager.getConstants().genericDirectEventTypes = {\n    ...UIManager.getConstants().genericDirectEventTypes,\n    ...customGHEventsConfig,\n  };\n}\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {},\n  clearJSResponder: oldClearJSResponder = () => {},\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nfunction isConfigParam(param, name) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  if (Platform.OS === 'web') {\n    return handlerIDs.map(({ current }) => current).filter(handle => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nexport default function createHandler(\n  handlerName,\n  propTypes = {},\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static displayName = handlerName;\n\n    static propTypes = propTypes;\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    _createGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        newConfig\n      );\n    };\n\n    _attachGestureHandler = newViewTag => {\n      this._viewTag = newViewTag;\n\n      RNGestureHandlerModule.attachGestureHandler(this._handlerTag, newViewTag);\n    };\n\n    _updateGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.updateGestureHandler(this._handlerTag, newConfig);\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n\n      this._createGestureHandler(\n        filterConfig(\n          transformProps ? transformProps(this.props) : this.props,\n          { ...this.constructor.propTypes, ...customNativeProps },\n          config\n        )\n      );\n      this._attachGestureHandler(findNodeHandle(this._viewNode));\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._attachGestureHandler(viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._updateGestureHandler(newConfig);\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      this._updateGestureHandler(newConfig);\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      const child = React.Children.only(this.props.children);\n      let grandChildren = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler,\n        },\n        grandChildren\n      );\n    }\n  }\n  return Handler;\n}\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/*! Hammer.JS - v2.0.17-rc - 2019-12-16\n * http://naver.github.io/egjs\n *\n * Forked By Naver egjs\n * Copyright (c) hammerjs\n * Licensed under the MIT license */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\n\nif (typeof Object.assign !== 'function') {\n  assign = function assign(target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey];\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n} else {\n  assign = Object.assign;\n}\n\nvar assign$1 = assign;\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = typeof document === \"undefined\" ? {\n  style: {}\n} : document.createElement('div');\nvar TYPE_FUNCTION = 'function';\nvar round = Math.round,\n    abs = Math.abs;\nvar now = Date.now;\n\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\n\nfunction prefixed(obj, property) {\n  var prefix;\n  var prop;\n  var camelProp = property[0].toUpperCase() + property.slice(1);\n  var i = 0;\n\n  while (i < VENDOR_PREFIXES.length) {\n    prefix = VENDOR_PREFIXES[i];\n    prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n\n    i++;\n  }\n\n  return undefined;\n}\n\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win;\n\nif (typeof window === \"undefined\") {\n  // window is undefined in node.js\n  win = {};\n} else {\n  win = window;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\nfunction getTouchActionProps() {\n  if (!NATIVE_TOUCH_ACTION) {\n    return false;\n  }\n\n  var touchMap = {};\n  var cssSupports = win.CSS && win.CSS.supports;\n  ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n    // If css.supports is not supported but there is native touch-action assume it supports\n    // all values. This is the case for IE 10 and 11.\n    return touchMap[val] = cssSupports ? win.CSS.supports('touch-action', val) : true;\n  });\n  return touchMap;\n}\n\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\nvar SUPPORT_TOUCH = 'ontouchstart' in win;\nvar SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\nvar COMPUTE_INTERVAL = 25;\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * @private\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n  var i;\n\n  if (!obj) {\n    return;\n  }\n\n  if (obj.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length !== undefined) {\n    i = 0;\n\n    while (i < obj.length) {\n      iterator.call(context, obj[i], i, obj);\n      i++;\n    }\n  } else {\n    for (i in obj) {\n      obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n    }\n  }\n}\n\n/**\n * @private\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\n\nfunction boolOrFn(val, args) {\n  if (typeof val === TYPE_FUNCTION) {\n    return val.apply(args ? args[0] || undefined : undefined, args);\n  }\n\n  return val;\n}\n\n/**\n * @private\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n  return str.indexOf(find) > -1;\n}\n\n/**\n * @private\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\n\nfunction cleanTouchActions(actions) {\n  // none\n  if (inStr(actions, TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n  var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  } // pan-x OR pan-y\n\n\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  } // manipulation\n\n\n  if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n\n  return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\n\nvar TouchAction =\n/*#__PURE__*/\nfunction () {\n  function TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n  }\n  /**\n   * @private\n   * set the touchAction value on the element or enable the polyfill\n   * @param {String} value\n   */\n\n\n  var _proto = TouchAction.prototype;\n\n  _proto.set = function set(value) {\n    // find out the touch-action by the event handlers\n    if (value === TOUCH_ACTION_COMPUTE) {\n      value = this.compute();\n    }\n\n    if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n      this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n    }\n\n    this.actions = value.toLowerCase().trim();\n  };\n  /**\n   * @private\n   * just re-set the touchAction value\n   */\n\n\n  _proto.update = function update() {\n    this.set(this.manager.options.touchAction);\n  };\n  /**\n   * @private\n   * compute the value for the touchAction property based on the recognizer's settings\n   * @returns {String} value\n   */\n\n\n  _proto.compute = function compute() {\n    var actions = [];\n    each(this.manager.recognizers, function (recognizer) {\n      if (boolOrFn(recognizer.options.enable, [recognizer])) {\n        actions = actions.concat(recognizer.getTouchAction());\n      }\n    });\n    return cleanTouchActions(actions.join(' '));\n  };\n  /**\n   * @private\n   * this method is called on each input cycle and provides the preventing of the browser behavior\n   * @param {Object} input\n   */\n\n\n  _proto.preventDefaults = function preventDefaults(input) {\n    var srcEvent = input.srcEvent;\n    var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n    if (this.manager.session.prevented) {\n      srcEvent.preventDefault();\n      return;\n    }\n\n    var actions = this.actions;\n    var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n    if (hasNone) {\n      // do not prevent defaults if this is a tap gesture\n      var isTapPointer = input.pointers.length === 1;\n      var isTapMovement = input.distance < 2;\n      var isTapTouchTime = input.deltaTime < 250;\n\n      if (isTapPointer && isTapMovement && isTapTouchTime) {\n        return;\n      }\n    }\n\n    if (hasPanX && hasPanY) {\n      // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n      return;\n    }\n\n    if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n      return this.preventSrc(srcEvent);\n    }\n  };\n  /**\n   * @private\n   * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n   * @param {Object} srcEvent\n   */\n\n\n  _proto.preventSrc = function preventSrc(srcEvent) {\n    this.manager.session.prevented = true;\n    srcEvent.preventDefault();\n  };\n\n  return TouchAction;\n}();\n\n/**\n * @private\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n  while (node) {\n    if (node === parent) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * @private\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\n\nfunction getCenter(pointers) {\n  var pointersLength = pointers.length; // no need to loop when only one touch\n\n  if (pointersLength === 1) {\n    return {\n      x: round(pointers[0].clientX),\n      y: round(pointers[0].clientY)\n    };\n  }\n\n  var x = 0;\n  var y = 0;\n  var i = 0;\n\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: round(x / pointersLength),\n    y: round(y / pointersLength)\n  };\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\n\nfunction simpleCloneInputData(input) {\n  // make a simple copy of the pointers because we will get a reference if we don't\n  // we only need clientXY for the calculations\n  var pointers = [];\n  var i = 0;\n\n  while (i < input.pointers.length) {\n    pointers[i] = {\n      clientX: round(input.pointers[i].clientX),\n      clientY: round(input.pointers[i].clientY)\n    };\n    i++;\n  }\n\n  return {\n    timeStamp: now(),\n    pointers: pointers,\n    center: getCenter(pointers),\n    deltaX: input.deltaX,\n    deltaY: input.deltaY\n  };\n}\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\n\nfunction getDistance(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\n\nfunction getAngle(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * @private\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\n\nfunction getDirection(x, y) {\n  if (x === y) {\n    return DIRECTION_NONE;\n  }\n\n  if (abs(x) >= abs(y)) {\n    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n\n  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\nfunction computeDeltaXY(session, input) {\n  var center = input.center; // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n  // jscs throwing error on defalut destructured values and without defaults tests fail\n\n  var offset = session.offsetDelta || {};\n  var prevDelta = session.prevDelta || {};\n  var prevInput = session.prevInput || {};\n\n  if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n    prevDelta = session.prevDelta = {\n      x: prevInput.deltaX || 0,\n      y: prevInput.deltaY || 0\n    };\n    offset = session.offsetDelta = {\n      x: center.x,\n      y: center.y\n    };\n  }\n\n  input.deltaX = prevDelta.x + (center.x - offset.x);\n  input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n  return {\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n  };\n}\n\n/**\n * @private\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\n\nfunction getScale(start, end) {\n  return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\n\nfunction getRotation(start, end) {\n  return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\n\nfunction computeIntervalInputData(session, input) {\n  var last = session.lastInterval || input;\n  var deltaTime = input.timeStamp - last.timeStamp;\n  var velocity;\n  var velocityX;\n  var velocityY;\n  var direction;\n\n  if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n    var deltaX = input.deltaX - last.deltaX;\n    var deltaY = input.deltaY - last.deltaY;\n    var v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n\n/**\n* @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\n\nfunction computeInputData(manager, input) {\n  var session = manager.session;\n  var pointers = input.pointers;\n  var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n  if (!session.firstInput) {\n    session.firstInput = simpleCloneInputData(input);\n  } // to compute scale and rotation we need to store the multiple touches\n\n\n  if (pointersLength > 1 && !session.firstMultiple) {\n    session.firstMultiple = simpleCloneInputData(input);\n  } else if (pointersLength === 1) {\n    session.firstMultiple = false;\n  }\n\n  var firstInput = session.firstInput,\n      firstMultiple = session.firstMultiple;\n  var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n  var center = input.center = getCenter(pointers);\n  input.timeStamp = now();\n  input.deltaTime = input.timeStamp - firstInput.timeStamp;\n  input.angle = getAngle(offsetCenter, center);\n  input.distance = getDistance(offsetCenter, center);\n  computeDeltaXY(session, input);\n  input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n  var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n  input.overallVelocityX = overallVelocity.x;\n  input.overallVelocityY = overallVelocity.y;\n  input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n  input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n  input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n  input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n  computeIntervalInputData(session, input); // find the correct target\n\n  var target = manager.element;\n  var srcEvent = input.srcEvent;\n  var srcEventTarget;\n\n  if (srcEvent.composedPath) {\n    srcEventTarget = srcEvent.composedPath()[0];\n  } else if (srcEvent.path) {\n    srcEventTarget = srcEvent.path[0];\n  } else {\n    srcEventTarget = srcEvent.target;\n  }\n\n  if (hasParent(srcEventTarget, target)) {\n    target = srcEventTarget;\n  }\n\n  input.target = target;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\n\nfunction inputHandler(manager, eventType, input) {\n  var pointersLen = input.pointers.length;\n  var changedPointersLen = input.changedPointers.length;\n  var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n  var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n  input.isFirst = !!isFirst;\n  input.isFinal = !!isFinal;\n\n  if (isFirst) {\n    manager.session = {};\n  } // source event is the normalized value of the domEvents\n  // like 'touchstart, mouseup, pointerdown'\n\n\n  input.eventType = eventType; // compute scale, rotation etc\n\n  computeInputData(manager, input); // emit secret event\n\n  manager.emit('hammer.input', input);\n  manager.recognize(input);\n  manager.session.prevInput = input;\n}\n\n/**\n * @private\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n  return str.trim().split(/\\s+/g);\n}\n\n/**\n * @private\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction addEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.addEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction removeEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.removeEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n  var doc = element.ownerDocument || element;\n  return doc.defaultView || doc.parentWindow || window;\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\n\nvar Input =\n/*#__PURE__*/\nfunction () {\n  function Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n  /**\n   * @private\n   * should handle the inputEvent data and trigger the callback\n   * @virtual\n   */\n\n\n  var _proto = Input.prototype;\n\n  _proto.handler = function handler() {};\n  /**\n   * @private\n   * bind the events\n   */\n\n\n  _proto.init = function init() {\n    this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n  /**\n   * @private\n   * unbind the events\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n\n  return Input;\n}();\n\n/**\n * @private\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n  if (src.indexOf && !findByKey) {\n    return src.indexOf(find);\n  } else {\n    var i = 0;\n\n    while (i < src.length) {\n      if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n        // do not use === here, test fails\n        return i;\n      }\n\n      i++;\n    }\n\n    return -1;\n  }\n}\n\nvar POINTER_INPUT_MAP = {\n  pointerdown: INPUT_START,\n  pointermove: INPUT_MOVE,\n  pointerup: INPUT_END,\n  pointercancel: INPUT_CANCEL,\n  pointerout: INPUT_CANCEL\n}; // in IE10 the pointer types is defined as an enum\n\nvar IE10_POINTER_TYPE_ENUM = {\n  2: INPUT_TYPE_TOUCH,\n  3: INPUT_TYPE_PEN,\n  4: INPUT_TYPE_MOUSE,\n  5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n};\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\nif (win.MSPointerEvent && !win.PointerEvent) {\n  POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n  POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\n\n\nvar PointerEventInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(PointerEventInput, _Input);\n\n  function PointerEventInput() {\n    var _this;\n\n    var proto = PointerEventInput.prototype;\n    proto.evEl = POINTER_ELEMENT_EVENTS;\n    proto.evWin = POINTER_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.store = _this.manager.session.pointerEvents = [];\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = PointerEventInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var store = this.store;\n    var removePointer = false;\n    var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n    var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n    var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n    var isTouch = pointerType === INPUT_TYPE_TOUCH; // get index of the event in the store\n\n    var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n    if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n      if (storeIndex < 0) {\n        store.push(ev);\n        storeIndex = store.length - 1;\n      }\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      removePointer = true;\n    } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n    if (storeIndex < 0) {\n      return;\n    } // update the event in the store\n\n\n    store[storeIndex] = ev;\n    this.callback(this.manager, eventType, {\n      pointers: store,\n      changedPointers: [ev],\n      pointerType: pointerType,\n      srcEvent: ev\n    });\n\n    if (removePointer) {\n      // remove from the store\n      store.splice(storeIndex, 1);\n    }\n  };\n\n  return PointerEventInput;\n}(Input);\n\n/**\n * @private\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n  return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * @private\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\n\nfunction uniqueArray(src, key, sort) {\n  var results = [];\n  var values = [];\n  var i = 0;\n\n  while (i < src.length) {\n    var val = key ? src[i][key] : src[i];\n\n    if (inArray(values, val) < 0) {\n      results.push(src[i]);\n    }\n\n    values[i] = val;\n    i++;\n  }\n\n  if (sort) {\n    if (!key) {\n      results = results.sort();\n    } else {\n      results = results.sort(function (a, b) {\n        return a[key] > b[key];\n      });\n    }\n  }\n\n  return results;\n}\n\nvar TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\n\nvar TouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(TouchInput, _Input);\n\n  function TouchInput() {\n    var _this;\n\n    TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.targetIds = {}; // this.evTarget = TOUCH_TARGET_EVENTS;\n\n    return _this;\n  }\n\n  var _proto = TouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = TOUCH_INPUT_MAP[ev.type];\n    var touches = getTouches.call(this, ev, type);\n\n    if (!touches) {\n      return;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return TouchInput;\n}(Input);\n\nfunction getTouches(ev, type) {\n  var allTouches = toArray(ev.touches);\n  var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n  if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n    targetIds[allTouches[0].identifier] = true;\n    return [allTouches, allTouches];\n  }\n\n  var i;\n  var targetTouches;\n  var changedTouches = toArray(ev.changedTouches);\n  var changedTargetTouches = [];\n  var target = this.target; // get target touches from touches\n\n  targetTouches = allTouches.filter(function (touch) {\n    return hasParent(touch.target, target);\n  }); // collect touches\n\n  if (type === INPUT_START) {\n    i = 0;\n\n    while (i < targetTouches.length) {\n      targetIds[targetTouches[i].identifier] = true;\n      i++;\n    }\n  } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n  i = 0;\n\n  while (i < changedTouches.length) {\n    if (targetIds[changedTouches[i].identifier]) {\n      changedTargetTouches.push(changedTouches[i]);\n    } // cleanup removed touches\n\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      delete targetIds[changedTouches[i].identifier];\n    }\n\n    i++;\n  }\n\n  if (!changedTargetTouches.length) {\n    return;\n  }\n\n  return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n  uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n}\n\nvar MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\n\nvar MouseInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(MouseInput, _Input);\n\n  function MouseInput() {\n    var _this;\n\n    var proto = MouseInput.prototype;\n    proto.evEl = MOUSE_ELEMENT_EVENTS;\n    proto.evWin = MOUSE_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.pressed = false; // mousedown state\n\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = MouseInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n    if (eventType & INPUT_START && ev.button === 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which !== 1) {\n      eventType = INPUT_END;\n    } // mouse must be down\n\n\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: INPUT_TYPE_MOUSE,\n      srcEvent: ev\n    });\n  };\n\n  return MouseInput;\n}(Input);\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction setLastTouch(eventData) {\n  var _eventData$changedPoi = eventData.changedPointers,\n      touch = _eventData$changedPoi[0];\n\n  if (touch.identifier === this.primaryTouch) {\n    var lastTouch = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    var lts = this.lastTouches;\n    this.lastTouches.push(lastTouch);\n\n    var removeLastTouch = function removeLastTouch() {\n      var i = lts.indexOf(lastTouch);\n\n      if (i > -1) {\n        lts.splice(i, 1);\n      }\n    };\n\n    setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n  }\n}\n\nfunction recordTouches(eventType, eventData) {\n  if (eventType & INPUT_START) {\n    this.primaryTouch = eventData.changedPointers[0].identifier;\n    setLastTouch.call(this, eventData);\n  } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n    setLastTouch.call(this, eventData);\n  }\n}\n\nfunction isSyntheticEvent(eventData) {\n  var x = eventData.srcEvent.clientX;\n  var y = eventData.srcEvent.clientY;\n\n  for (var i = 0; i < this.lastTouches.length; i++) {\n    var t = this.lastTouches[i];\n    var dx = Math.abs(x - t.x);\n    var dy = Math.abs(y - t.y);\n\n    if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar TouchMouseInput =\n/*#__PURE__*/\nfunction () {\n  var TouchMouseInput =\n  /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(TouchMouseInput, _Input);\n\n    function TouchMouseInput(_manager, callback) {\n      var _this;\n\n      _this = _Input.call(this, _manager, callback) || this;\n\n      _this.handler = function (manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n        var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n          return;\n        } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n        if (isTouch) {\n          recordTouches.call(_assertThisInitialized(_assertThisInitialized(_this)), inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized(_assertThisInitialized(_this)), inputData)) {\n          return;\n        }\n\n        _this.callback(manager, inputEvent, inputData);\n      };\n\n      _this.touch = new TouchInput(_this.manager, _this.handler);\n      _this.mouse = new MouseInput(_this.manager, _this.handler);\n      _this.primaryTouch = null;\n      _this.lastTouches = [];\n      return _this;\n    }\n    /**\n     * @private\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n\n\n    var _proto = TouchMouseInput.prototype;\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n    _proto.destroy = function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    };\n\n    return TouchMouseInput;\n  }(Input);\n\n  return TouchMouseInput;\n}();\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\n\nfunction createInputInstance(manager) {\n  var Type; // let inputClass = manager.options.inputClass;\n\n  var inputClass = manager.options.inputClass;\n\n  if (inputClass) {\n    Type = inputClass;\n  } else if (SUPPORT_POINTER_EVENTS) {\n    Type = PointerEventInput;\n  } else if (SUPPORT_ONLY_TOUCH) {\n    Type = TouchInput;\n  } else if (!SUPPORT_TOUCH) {\n    Type = MouseInput;\n  } else {\n    Type = TouchMouseInput;\n  }\n\n  return new Type(manager, inputHandler);\n}\n\n/**\n * @private\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\n\nfunction invokeArrayArg(arg, fn, context) {\n  if (Array.isArray(arg)) {\n    each(arg, context[fn], context);\n    return true;\n  }\n\n  return false;\n}\n\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n  return _uniqueId++;\n}\n\n/**\n * @private\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n  var manager = recognizer.manager;\n\n  if (manager) {\n    return manager.get(otherRecognizer);\n  }\n\n  return otherRecognizer;\n}\n\n/**\n * @private\n * get a usable string, used as event postfix\n * @param {constant} state\n * @returns {String} state\n */\n\nfunction stateStr(state) {\n  if (state & STATE_CANCELLED) {\n    return 'cancel';\n  } else if (state & STATE_ENDED) {\n    return 'end';\n  } else if (state & STATE_CHANGED) {\n    return 'move';\n  } else if (state & STATE_BEGAN) {\n    return 'start';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\n\nvar Recognizer =\n/*#__PURE__*/\nfunction () {\n  function Recognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = _extends({\n      enable: true\n    }, options);\n    this.id = uniqueId();\n    this.manager = null; // default is enable true\n\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @return {Recognizer}\n   */\n\n\n  var _proto = Recognizer.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n    this.manager && this.manager.touchAction.update();\n    return this;\n  };\n  /**\n   * @private\n   * recognize simultaneous with an other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.recognizeWith = function recognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n      return this;\n    }\n\n    var simultaneous = this.simultaneous;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (!simultaneous[otherRecognizer.id]) {\n      simultaneous[otherRecognizer.id] = otherRecognizer;\n      otherRecognizer.recognizeWith(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    delete this.simultaneous[otherRecognizer.id];\n    return this;\n  };\n  /**\n   * @private\n   * recognizer can only run when an other is failing\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.requireFailure = function requireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n      return this;\n    }\n\n    var requireFail = this.requireFail;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (inArray(requireFail, otherRecognizer) === -1) {\n      requireFail.push(otherRecognizer);\n      otherRecognizer.requireFailure(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the requireFailure link. it does not remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    var index = inArray(this.requireFail, otherRecognizer);\n\n    if (index > -1) {\n      this.requireFail.splice(index, 1);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * has require failures boolean\n   * @returns {boolean}\n   */\n\n\n  _proto.hasRequireFailures = function hasRequireFailures() {\n    return this.requireFail.length > 0;\n  };\n  /**\n   * @private\n   * if the recognizer can recognize simultaneous with an other recognizer\n   * @param {Recognizer} otherRecognizer\n   * @returns {Boolean}\n   */\n\n\n  _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {\n    return !!this.simultaneous[otherRecognizer.id];\n  };\n  /**\n   * @private\n   * You should use `tryEmit` instead of `emit` directly to check\n   * that all the needed recognizers has failed before emitting.\n   * @param {Object} input\n   */\n\n\n  _proto.emit = function emit(input) {\n    var self = this;\n    var state = this.state;\n\n    function emit(event) {\n      self.manager.emit(event, input);\n    } // 'panstart' and 'panmove'\n\n\n    if (state < STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n\n    emit(self.options.event); // simple 'eventName' events\n\n    if (input.additionalEvent) {\n      // additional event(panleft, panright, pinchin, pinchout...)\n      emit(input.additionalEvent);\n    } // panend and pancancel\n\n\n    if (state >= STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n  };\n  /**\n   * @private\n   * Check that all the require failure recognizers has failed,\n   * if true, it emits a gesture event,\n   * otherwise, setup the state to FAILED.\n   * @param {Object} input\n   */\n\n\n  _proto.tryEmit = function tryEmit(input) {\n    if (this.canEmit()) {\n      return this.emit(input);\n    } // it's failing anyway\n\n\n    this.state = STATE_FAILED;\n  };\n  /**\n   * @private\n   * can we emit?\n   * @returns {boolean}\n   */\n\n\n  _proto.canEmit = function canEmit() {\n    var i = 0;\n\n    while (i < this.requireFail.length) {\n      if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * update the recognizer\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    // make a new copy of the inputData\n    // so we can change the inputData without messing up the other recognizers\n    var inputDataClone = assign$1({}, inputData); // is is enabled and allow recognizing?\n\n    if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n      this.reset();\n      this.state = STATE_FAILED;\n      return;\n    } // reset when we've reached the end\n\n\n    if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n      this.state = STATE_POSSIBLE;\n    }\n\n    this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n    // so trigger an event\n\n    if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n      this.tryEmit(inputDataClone);\n    }\n  };\n  /**\n   * @private\n   * return the state of the recognizer\n   * the actual recognizing happens in this method\n   * @virtual\n   * @param {Object} inputData\n   * @returns {constant} STATE\n   */\n\n  /* jshint ignore:start */\n\n\n  _proto.process = function process(inputData) {};\n  /* jshint ignore:end */\n\n  /**\n   * @private\n   * return the preferred touch-action\n   * @virtual\n   * @returns {Array}\n   */\n\n\n  _proto.getTouchAction = function getTouchAction() {};\n  /**\n   * @private\n   * called when the gesture isn't allowed to recognize\n   * like when another is being recognized or it is disabled\n   * @virtual\n   */\n\n\n  _proto.reset = function reset() {};\n\n  return Recognizer;\n}();\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\n\nvar TapRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(TapRecognizer, _Recognizer);\n\n  function TapRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      // max time between the multi-tap taps\n      time: 250,\n      // max time of the pointer to be down (like finger on the screen)\n      threshold: 9,\n      // a minimal movement is ok, but keep it low\n      posThreshold: 10\n    }, options)) || this; // previous time and center,\n    // used for tap counting\n\n    _this.pTime = false;\n    _this.pCenter = false;\n    _this._timer = null;\n    _this._input = null;\n    _this.count = 0;\n    return _this;\n  }\n\n  var _proto = TapRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_MANIPULATION];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTouchTime = input.deltaTime < options.time;\n    this.reset();\n\n    if (input.eventType & INPUT_START && this.count === 0) {\n      return this.failTimeout();\n    } // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n\n    if (validMovement && validTouchTime && validPointers) {\n      if (input.eventType !== INPUT_END) {\n        return this.failTimeout();\n      }\n\n      var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n      var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n      this.pTime = input.timeStamp;\n      this.pCenter = input.center;\n\n      if (!validMultiTap || !validInterval) {\n        this.count = 1;\n      } else {\n        this.count += 1;\n      }\n\n      this._input = input; // if tap count matches we have recognized it,\n      // else it has began recognizing...\n\n      var tapCount = this.count % options.taps;\n\n      if (tapCount === 0) {\n        // no failing requirements, immediately trigger the tap event\n        // or wait as long as the multitap interval to trigger\n        if (!this.hasRequireFailures()) {\n          return STATE_RECOGNIZED;\n        } else {\n          this._timer = setTimeout(function () {\n            _this2.state = STATE_RECOGNIZED;\n\n            _this2.tryEmit();\n          }, options.interval);\n          return STATE_BEGAN;\n        }\n      }\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.failTimeout = function failTimeout() {\n    var _this3 = this;\n\n    this._timer = setTimeout(function () {\n      _this3.state = STATE_FAILED;\n    }, this.options.interval);\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit() {\n    if (this.state === STATE_RECOGNIZED) {\n      this._input.tapCount = this.count;\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return TapRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\n\nvar AttrRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(AttrRecognizer, _Recognizer);\n\n  function AttrRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _Recognizer.call(this, _extends({\n      pointers: 1\n    }, options)) || this;\n  }\n  /**\n   * @private\n   * Used to check if it the recognizer receives valid input, like input.distance > 10.\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {Boolean} recognized\n   */\n\n\n  var _proto = AttrRecognizer.prototype;\n\n  _proto.attrTest = function attrTest(input) {\n    var optionPointers = this.options.pointers;\n    return optionPointers === 0 || input.pointers.length === optionPointers;\n  };\n  /**\n   * @private\n   * Process the input and return the state for the recognizer\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {*} State\n   */\n\n\n  _proto.process = function process(input) {\n    var state = this.state;\n    var eventType = input.eventType;\n    var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n    var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n    if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n      return state | STATE_CANCELLED;\n    } else if (isRecognized || isValid) {\n      if (eventType & INPUT_END) {\n        return state | STATE_ENDED;\n      } else if (!(state & STATE_BEGAN)) {\n        return STATE_BEGAN;\n      }\n\n      return state | STATE_CHANGED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  return AttrRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\n\nfunction directionStr(direction) {\n  if (direction === DIRECTION_DOWN) {\n    return 'down';\n  } else if (direction === DIRECTION_UP) {\n    return 'up';\n  } else if (direction === DIRECTION_LEFT) {\n    return 'left';\n  } else if (direction === DIRECTION_RIGHT) {\n    return 'right';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PanRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PanRecognizer, _AttrRecognizer);\n\n  function PanRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _AttrRecognizer.call(this, _extends({\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: DIRECTION_ALL\n    }, options)) || this;\n    _this.pX = null;\n    _this.pY = null;\n    return _this;\n  }\n\n  var _proto = PanRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    var direction = this.options.direction;\n    var actions = [];\n\n    if (direction & DIRECTION_HORIZONTAL) {\n      actions.push(TOUCH_ACTION_PAN_Y);\n    }\n\n    if (direction & DIRECTION_VERTICAL) {\n      actions.push(TOUCH_ACTION_PAN_X);\n    }\n\n    return actions;\n  };\n\n  _proto.directionTest = function directionTest(input) {\n    var options = this.options;\n    var hasMoved = true;\n    var distance = input.distance;\n    var direction = input.direction;\n    var x = input.deltaX;\n    var y = input.deltaY; // lock to axis?\n\n    if (!(direction & options.direction)) {\n      if (options.direction & DIRECTION_HORIZONTAL) {\n        direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        hasMoved = x !== this.pX;\n        distance = Math.abs(input.deltaX);\n      } else {\n        direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n        hasMoved = y !== this.pY;\n        distance = Math.abs(input.deltaY);\n      }\n    }\n\n    input.direction = direction;\n    return hasMoved && distance > options.threshold && direction & options.direction;\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return AttrRecognizer.prototype.attrTest.call(this, input) && ( // replace with a super call\n    this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n  };\n\n  _proto.emit = function emit(input) {\n    this.pX = input.deltaX;\n    this.pY = input.deltaY;\n    var direction = directionStr(input.direction);\n\n    if (direction) {\n      input.additionalEvent = this.options.event + direction;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PanRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar SwipeRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(SwipeRecognizer, _AttrRecognizer);\n\n  function SwipeRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'swipe',\n      threshold: 10,\n      velocity: 0.3,\n      direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n      pointers: 1\n    }, options)) || this;\n  }\n\n  var _proto = SwipeRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return PanRecognizer.prototype.getTouchAction.call(this);\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    var direction = this.options.direction;\n    var velocity;\n\n    if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n      velocity = input.overallVelocity;\n    } else if (direction & DIRECTION_HORIZONTAL) {\n      velocity = input.overallVelocityX;\n    } else if (direction & DIRECTION_VERTICAL) {\n      velocity = input.overallVelocityY;\n    }\n\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n  };\n\n  _proto.emit = function emit(input) {\n    var direction = directionStr(input.offsetDirection);\n\n    if (direction) {\n      this.manager.emit(this.options.event + direction, input);\n    }\n\n    this.manager.emit(this.options.event, input);\n  };\n\n  return SwipeRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PinchRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PinchRecognizer, _AttrRecognizer);\n\n  function PinchRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = PinchRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  _proto.emit = function emit(input) {\n    if (input.scale !== 1) {\n      var inOut = input.scale < 1 ? 'in' : 'out';\n      input.additionalEvent = this.options.event + inOut;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PinchRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar RotateRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(RotateRecognizer, _AttrRecognizer);\n\n  function RotateRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = RotateRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  return RotateRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\n\nvar PressRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(PressRecognizer, _Recognizer);\n\n  function PressRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      // minimal time of the pointer to be pressed\n      threshold: 9\n    }, options)) || this;\n    _this._timer = null;\n    _this._input = null;\n    return _this;\n  }\n\n  var _proto = PressRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_AUTO];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTime = input.deltaTime > options.time;\n    this._input = input; // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n    if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n      this.reset();\n    } else if (input.eventType & INPUT_START) {\n      this.reset();\n      this._timer = setTimeout(function () {\n        _this2.state = STATE_RECOGNIZED;\n\n        _this2.tryEmit();\n      }, options.time);\n    } else if (input.eventType & INPUT_END) {\n      return STATE_RECOGNIZED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit(input) {\n    if (this.state !== STATE_RECOGNIZED) {\n      return;\n    }\n\n    if (input && input.eventType & INPUT_END) {\n      this.manager.emit(this.options.event + \"up\", input);\n    } else {\n      this._input.timeStamp = now();\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return PressRecognizer;\n}(Recognizer);\n\nvar defaults = {\n  /**\n   * @private\n   * set if DOM events are being triggered.\n   * But this is slower and unused by simple implementations, so disabled by default.\n   * @type {Boolean}\n   * @default false\n   */\n  domEvents: false,\n\n  /**\n   * @private\n   * The value for the touchAction property/fallback.\n   * When set to `compute` it will magically set the correct value based on the added recognizers.\n   * @type {String}\n   * @default compute\n   */\n  touchAction: TOUCH_ACTION_COMPUTE,\n\n  /**\n   * @private\n   * @type {Boolean}\n   * @default true\n   */\n  enable: true,\n\n  /**\n   * @private\n   * EXPERIMENTAL FEATURE -- can be removed/changed\n   * Change the parent input target element.\n   * If Null, then it is being set the to main element.\n   * @type {Null|EventTarget}\n   * @default null\n   */\n  inputTarget: null,\n\n  /**\n   * @private\n   * force an input class\n   * @type {Null|Function}\n   * @default null\n   */\n  inputClass: null,\n\n  /**\n   * @private\n   * Some CSS properties can be used to improve the working of Hammer.\n   * Add them to this method and they will be set when creating a new Manager.\n   * @namespace\n   */\n  cssProps: {\n    /**\n     * @private\n     * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userSelect: \"none\",\n\n    /**\n     * @private\n     * Disable the Windows Phone grippers when pressing an element.\n     * @type {String}\n     * @default 'none'\n     */\n    touchSelect: \"none\",\n\n    /**\n     * @private\n     * Disables the default callout shown when you touch and hold a touch target.\n     * On iOS, when you touch and hold a touch target such as a link, Safari displays\n     * a callout containing information about the link. This property allows you to disable that callout.\n     * @type {String}\n     * @default 'none'\n     */\n    touchCallout: \"none\",\n\n    /**\n     * @private\n     * Specifies whether zooming is enabled. Used by IE10>\n     * @type {String}\n     * @default 'none'\n     */\n    contentZooming: \"none\",\n\n    /**\n     * @private\n     * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userDrag: \"none\",\n\n    /**\n     * @private\n     * Overrides the highlight color shown when the user taps a link or a JavaScript\n     * clickable element in iOS. This property obeys the alpha value, if specified.\n     * @type {String}\n     * @default 'rgba(0,0,0,0)'\n     */\n    tapHighlightColor: \"rgba(0,0,0,0)\"\n  }\n};\n/**\n * @private\n * Default recognizer setup when calling `Hammer()`\n * When creating a new Manager these will be skipped.\n * This is separated with other defaults because of tree-shaking.\n * @type {Array}\n */\n\nvar preset = [[RotateRecognizer, {\n  enable: false\n}], [PinchRecognizer, {\n  enable: false\n}, ['rotate']], [SwipeRecognizer, {\n  direction: DIRECTION_HORIZONTAL\n}], [PanRecognizer, {\n  direction: DIRECTION_HORIZONTAL\n}, ['swipe']], [TapRecognizer], [TapRecognizer, {\n  event: 'doubletap',\n  taps: 2\n}, ['tap']], [PressRecognizer]];\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n/**\n * @private\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\n\nfunction toggleCssProps(manager, add) {\n  var element = manager.element;\n\n  if (!element.style) {\n    return;\n  }\n\n  var prop;\n  each(manager.options.cssProps, function (value, name) {\n    prop = prefixed(element.style, name);\n\n    if (add) {\n      manager.oldCssProps[prop] = element.style[prop];\n      element.style[prop] = value;\n    } else {\n      element.style[prop] = manager.oldCssProps[prop] || \"\";\n    }\n  });\n\n  if (!add) {\n    manager.oldCssProps = {};\n  }\n}\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\n\n\nfunction triggerDomEvent(event, data) {\n  var gestureEvent = document.createEvent(\"Event\");\n  gestureEvent.initEvent(event, true, true);\n  gestureEvent.gesture = data;\n  data.target.dispatchEvent(gestureEvent);\n}\n/**\n* @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\n\nvar Manager =\n/*#__PURE__*/\nfunction () {\n  function Manager(element, options) {\n    var _this = this;\n\n    this.options = assign$1({}, defaults, options || {});\n    this.options.inputTarget = this.options.inputTarget || element;\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n    toggleCssProps(this, true);\n    each(this.options.recognizers, function (item) {\n      var recognizer = _this.add(new item[0](item[1]));\n\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @returns {Manager}\n   */\n\n\n  var _proto = Manager.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // Options that need a little more setup\n\n    if (options.touchAction) {\n      this.touchAction.update();\n    }\n\n    if (options.inputTarget) {\n      // Clean up existing event listeners and reinitialize\n      this.input.destroy();\n      this.input.target = options.inputTarget;\n      this.input.init();\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * stop recognizing for this session.\n   * This session will be discarded, when a new [input]start event is fired.\n   * When forced, the recognizer cycle is stopped immediately.\n   * @param {Boolean} [force]\n   */\n\n\n  _proto.stop = function stop(force) {\n    this.session.stopped = force ? FORCED_STOP : STOP;\n  };\n  /**\n   * @private\n   * run the recognizers!\n   * called by the inputHandler function on every movement of the pointers (touches)\n   * it walks through all the recognizers and tries to detect the gesture that is being made\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    var session = this.session;\n\n    if (session.stopped) {\n      return;\n    } // run the touch-action polyfill\n\n\n    this.touchAction.preventDefaults(inputData);\n    var recognizer;\n    var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n    // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n    // if no recognizer is detecting a thing, it is set to `null`\n\n    var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n    // or when we're in a new session\n\n    if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n      session.curRecognizer = null;\n      curRecognizer = null;\n    }\n\n    var i = 0;\n\n    while (i < recognizers.length) {\n      recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n      // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n      // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n      //      that is being recognized.\n      // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n      //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n      if (session.stopped !== FORCED_STOP && ( // 1\n      !curRecognizer || recognizer === curRecognizer || // 2\n      recognizer.canRecognizeWith(curRecognizer))) {\n        // 3\n        recognizer.recognize(inputData);\n      } else {\n        recognizer.reset();\n      } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n      // current active recognizer. but only if we don't already have an active recognizer\n\n\n      if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n        session.curRecognizer = recognizer;\n        curRecognizer = recognizer;\n      }\n\n      i++;\n    }\n  };\n  /**\n   * @private\n   * get a recognizer by its event name.\n   * @param {Recognizer|String} recognizer\n   * @returns {Recognizer|Null}\n   */\n\n\n  _proto.get = function get(recognizer) {\n    if (recognizer instanceof Recognizer) {\n      return recognizer;\n    }\n\n    var recognizers = this.recognizers;\n\n    for (var i = 0; i < recognizers.length; i++) {\n      if (recognizers[i].options.event === recognizer) {\n        return recognizers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @private add a recognizer to the manager\n   * existing recognizers with the same event name will be removed\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer|Manager}\n   */\n\n\n  _proto.add = function add(recognizer) {\n    if (invokeArrayArg(recognizer, \"add\", this)) {\n      return this;\n    } // remove existing\n\n\n    var existing = this.get(recognizer.options.event);\n\n    if (existing) {\n      this.remove(existing);\n    }\n\n    this.recognizers.push(recognizer);\n    recognizer.manager = this;\n    this.touchAction.update();\n    return recognizer;\n  };\n  /**\n   * @private\n   * remove a recognizer by name or instance\n   * @param {Recognizer|String} recognizer\n   * @returns {Manager}\n   */\n\n\n  _proto.remove = function remove(recognizer) {\n    if (invokeArrayArg(recognizer, \"remove\", this)) {\n      return this;\n    }\n\n    var targetRecognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n    if (recognizer) {\n      var recognizers = this.recognizers;\n      var index = inArray(recognizers, targetRecognizer);\n\n      if (index !== -1) {\n        recognizers.splice(index, 1);\n        this.touchAction.update();\n      }\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * bind event\n   * @param {String} events\n   * @param {Function} handler\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.on = function on(events, handler) {\n    if (events === undefined || handler === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    });\n    return this;\n  };\n  /**\n   * @private unbind event, leave emit blank to remove all handlers\n   * @param {String} events\n   * @param {Function} [handler]\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.off = function off(events, handler) {\n    if (events === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      if (!handler) {\n        delete handlers[event];\n      } else {\n        handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n      }\n    });\n    return this;\n  };\n  /**\n   * @private emit event to the listeners\n   * @param {String} event\n   * @param {Object} data\n   */\n\n\n  _proto.emit = function emit(event, data) {\n    // we also want to trigger dom events\n    if (this.options.domEvents) {\n      triggerDomEvent(event, data);\n    } // no handlers, so skip it all\n\n\n    var handlers = this.handlers[event] && this.handlers[event].slice();\n\n    if (!handlers || !handlers.length) {\n      return;\n    }\n\n    data.type = event;\n\n    data.preventDefault = function () {\n      data.srcEvent.preventDefault();\n    };\n\n    var i = 0;\n\n    while (i < handlers.length) {\n      handlers[i](data);\n      i++;\n    }\n  };\n  /**\n   * @private\n   * destroy the manager and unbinds all events\n   * it doesn't unbind dom events, that is the user own responsibility\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.element && toggleCssProps(this, false);\n    this.handlers = {};\n    this.session = {};\n    this.input.destroy();\n    this.element = null;\n  };\n\n  return Manager;\n}();\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Touch events input\n * @constructor\n * @extends Input\n */\n\nvar SingleTouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(SingleTouchInput, _Input);\n\n  function SingleTouchInput() {\n    var _this;\n\n    var proto = SingleTouchInput.prototype;\n    proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.started = false;\n    return _this;\n  }\n\n  var _proto = SingleTouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n    if (type === INPUT_START) {\n      this.started = true;\n    }\n\n    if (!this.started) {\n      return;\n    }\n\n    var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n    if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n      this.started = false;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return SingleTouchInput;\n}(Input);\n\nfunction normalizeSingleTouches(ev, type) {\n  var all = toArray(ev.touches);\n  var changed = toArray(ev.changedTouches);\n\n  if (type & (INPUT_END | INPUT_CANCEL)) {\n    all = uniqueArray(all.concat(changed), 'identifier', true);\n  }\n\n  return [all, changed];\n}\n\n/**\n * @private\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n  var deprecationMessage = \"DEPRECATED METHOD: \" + name + \"\\n\" + message + \" AT \\n\";\n  return function () {\n    var e = new Error('get-stack-trace');\n    var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n    var log = window.console && (window.console.warn || window.console.log);\n\n    if (log) {\n      log.call(window.console, deprecationMessage, stack);\n    }\n\n    return method.apply(this, arguments);\n  };\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\n\nvar extend = deprecate(function (dest, src, merge) {\n  var keys = Object.keys(src);\n  var i = 0;\n\n  while (i < keys.length) {\n    if (!merge || merge && dest[keys[i]] === undefined) {\n      dest[keys[i]] = src[keys[i]];\n    }\n\n    i++;\n  }\n\n  return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * @private\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\n\nvar merge = deprecate(function (dest, src) {\n  return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * @private\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\n\nfunction inherit(child, base, properties) {\n  var baseP = base.prototype;\n  var childP;\n  childP = child.prototype = Object.create(baseP);\n  childP.constructor = child;\n  childP._super = baseP;\n\n  if (properties) {\n    assign$1(childP, properties);\n  }\n}\n\n/**\n * @private\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n  return function boundFn() {\n    return fn.apply(context, arguments);\n  };\n}\n\n/**\n * @private\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\nvar Hammer =\n/*#__PURE__*/\nfunction () {\n  var Hammer =\n  /**\n    * @private\n    * @const {string}\n    */\n  function Hammer(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Manager(element, _extends({\n      recognizers: preset.concat()\n    }, options));\n  };\n\n  Hammer.VERSION = \"2.0.17-rc\";\n  Hammer.DIRECTION_ALL = DIRECTION_ALL;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.DIRECTION_LEFT = DIRECTION_LEFT;\n  Hammer.DIRECTION_RIGHT = DIRECTION_RIGHT;\n  Hammer.DIRECTION_UP = DIRECTION_UP;\n  Hammer.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n  Hammer.DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n  Hammer.DIRECTION_NONE = DIRECTION_NONE;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.INPUT_START = INPUT_START;\n  Hammer.INPUT_MOVE = INPUT_MOVE;\n  Hammer.INPUT_END = INPUT_END;\n  Hammer.INPUT_CANCEL = INPUT_CANCEL;\n  Hammer.STATE_POSSIBLE = STATE_POSSIBLE;\n  Hammer.STATE_BEGAN = STATE_BEGAN;\n  Hammer.STATE_CHANGED = STATE_CHANGED;\n  Hammer.STATE_ENDED = STATE_ENDED;\n  Hammer.STATE_RECOGNIZED = STATE_RECOGNIZED;\n  Hammer.STATE_CANCELLED = STATE_CANCELLED;\n  Hammer.STATE_FAILED = STATE_FAILED;\n  Hammer.Manager = Manager;\n  Hammer.Input = Input;\n  Hammer.TouchAction = TouchAction;\n  Hammer.TouchInput = TouchInput;\n  Hammer.MouseInput = MouseInput;\n  Hammer.PointerEventInput = PointerEventInput;\n  Hammer.TouchMouseInput = TouchMouseInput;\n  Hammer.SingleTouchInput = SingleTouchInput;\n  Hammer.Recognizer = Recognizer;\n  Hammer.AttrRecognizer = AttrRecognizer;\n  Hammer.Tap = TapRecognizer;\n  Hammer.Pan = PanRecognizer;\n  Hammer.Swipe = SwipeRecognizer;\n  Hammer.Pinch = PinchRecognizer;\n  Hammer.Rotate = RotateRecognizer;\n  Hammer.Press = PressRecognizer;\n  Hammer.on = addEventListeners;\n  Hammer.off = removeEventListeners;\n  Hammer.each = each;\n  Hammer.merge = merge;\n  Hammer.extend = extend;\n  Hammer.bindFn = bindFn;\n  Hammer.assign = assign$1;\n  Hammer.inherit = inherit;\n  Hammer.bindFn = bindFn;\n  Hammer.prefixed = prefixed;\n  Hammer.toArray = toArray;\n  Hammer.inArray = inArray;\n  Hammer.uniqueArray = uniqueArray;\n  Hammer.splitStr = splitStr;\n  Hammer.boolOrFn = boolOrFn;\n  Hammer.hasParent = hasParent;\n  Hammer.addEventListeners = addEventListeners;\n  Hammer.removeEventListeners = removeEventListeners;\n  Hammer.defaults = assign$1({}, defaults, {\n    preset: preset\n  });\n  return Hammer;\n}();\n\n//  style loader but by script tag, not by the loader.\n\nvar defaults$1 = Hammer.defaults;\n\nexport default Hammer;\nexport { INPUT_START, INPUT_MOVE, INPUT_END, INPUT_CANCEL, STATE_POSSIBLE, STATE_BEGAN, STATE_CHANGED, STATE_ENDED, STATE_RECOGNIZED, STATE_CANCELLED, STATE_FAILED, DIRECTION_NONE, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL, DIRECTION_ALL, Manager, Input, TouchAction, TouchInput, MouseInput, PointerEventInput, TouchMouseInput, SingleTouchInput, Recognizer, AttrRecognizer, TapRecognizer as Tap, PanRecognizer as Pan, SwipeRecognizer as Swipe, PinchRecognizer as Pinch, RotateRecognizer as Rotate, PressRecognizer as Press, addEventListeners as on, removeEventListeners as off, each, merge, extend, assign$1 as assign, inherit, bindFn, prefixed, toArray, inArray, uniqueArray, splitStr, boolOrFn, hasParent, addEventListeners, removeEventListeners, defaults$1 as defaults };\n//# sourceMappingURL=hammer.esm.js.map\n","import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\n\nexport const CONTENT_TOUCHES_DELAY = 240;\nexport const CONTENT_TOUCHES_QUICK_TAP_END_DELAY = 50;\nexport const MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD = 0.1;\nexport const MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD = 7;\nexport const DEG_RAD = Math.PI / 180;\n\n// Map Hammer values to RNGH\nexport const EventMap = {\n  [Hammer.INPUT_START]: State.BEGAN,\n  [Hammer.INPUT_MOVE]: State.ACTIVE,\n  [Hammer.INPUT_END]: State.END,\n  [Hammer.INPUT_CANCEL]: State.FAILED,\n};\n\nexport const Direction = {\n  RIGHT: 1,\n  LEFT: 2,\n  UP: 4,\n  DOWN: 8,\n};\n\nexport const DirectionMap = {\n  [Hammer.DIRECTION_RIGHT]: Direction.RIGHT,\n  [Hammer.DIRECTION_LEFT]: Direction.LEFT,\n  [Hammer.DIRECTION_UP]: Direction.UP,\n  [Hammer.DIRECTION_DOWN]: Direction.DOWN,\n};\n\nexport const HammerInputNames = {\n  [Hammer.INPUT_START]: 'START',\n  [Hammer.INPUT_MOVE]: 'MOVE',\n  [Hammer.INPUT_END]: 'END',\n  [Hammer.INPUT_CANCEL]: 'CANCEL',\n};\nexport const HammerDirectionNames = {\n  [Hammer.DIRECTION_HORIZONTAL]: 'HORIZONTAL',\n  [Hammer.DIRECTION_UP]: 'UP',\n  [Hammer.DIRECTION_DOWN]: 'DOWN',\n  [Hammer.DIRECTION_VERTICAL]: 'VERTICAL',\n  [Hammer.DIRECTION_NONE]: 'NONE',\n  [Hammer.DIRECTION_ALL]: 'ALL',\n  [Hammer.DIRECTION_RIGHT]: 'RIGHT',\n  [Hammer.DIRECTION_LEFT]: 'LEFT',\n};\n","export class GesturePropError extends Error {\n  constructor(name, value, expectedType) {\n    super(`Invalid property \\`${name}: ${value}\\` expected \\`${expectedType}\\``);\n  }\n}\n","let gestures = {};\n\nexport function getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n\n  throw new Error('No handler for tag ' + tag);\n}\n\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error('Handler with tag ' + handlerTag + ' already exists');\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag) {\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n","import Hammer from '@egjs/hammerjs';\nimport { findNodeHandle } from 'react-native';\n\nimport State from '../State';\nimport { EventMap } from './constants';\nimport * as NodeManager from './NodeManager';\n\nlet _gestureInstances = 0;\n\nclass GestureHandler {\n  isGestureRunning = false;\n  hasGestureFailed = false;\n  view = null;\n  config = {};\n  hammer = null;\n  pendingGestures = {};\n  oldState = State.UNDETERMINED;\n  previousState = State.UNDETERMINED;\n  lastSentState = null;\n\n  get id() {\n    return `${this.name}${this._gestureInstance}`;\n  }\n\n  get isDiscrete() {\n    return false;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  constructor() {\n    this._gestureInstance = _gestureInstances++;\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  onWaitingEnded(gesture) {}\n\n  removePendingGesture(id) {\n    delete this.pendingGestures[id];\n  }\n\n  addPendingGesture(gesture) {\n    this.pendingGestures[gesture.id] = gesture;\n  }\n\n  isGestureEnabledForEvent() {\n    return { success: true };\n  }\n\n  parseNativeEvent(nativeEvent) {\n    return nativeEvent;\n  }\n\n  get NativeGestureClass() {\n    throw new Error('Must override GestureHandler.NativeGestureClass');\n  }\n\n  updateHasCustomActivationCriteria(config) {\n    return true;\n  }\n\n  clearSelfAsPending = () => {\n    if (Array.isArray(this.config.waitFor)) {\n      for (const gesture of this.config.waitFor) {\n        gesture.removePendingGesture(this.id);\n      }\n    }\n  };\n\n  updateGestureConfig({ enabled = true, ...props }) {\n    this.clearSelfAsPending();\n\n    this.config = ensureConfig({ enabled, ...props });\n    this._hasCustomActivationCriteria = this.updateHasCustomActivationCriteria(\n      this.config\n    );\n    if (Array.isArray(this.config.waitFor)) {\n      for (const gesture of this.config.waitFor) {\n        gesture.addPendingGesture(this);\n      }\n    }\n\n    if (this.hammer) {\n      this.sync();\n    }\n    return this.config;\n  }\n\n  destroy = () => {\n    this.clearSelfAsPending();\n\n    if (this.hammer) {\n      this.hammer.stop();\n      this.hammer.destroy();\n    }\n    this.hammer = null;\n  };\n\n  isPointInView = ({ x, y }) => {\n    const rect = this.view.getBoundingClientRect();\n    const pointerInside =\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    return pointerInside;\n  };\n\n  getState(type) {\n    return EventMap[type];\n  }\n\n  transformEventData(event) {\n    const { eventType, maxPointers: numberOfPointers } = event;\n    // const direction = DirectionMap[ev.direction];\n    const changedTouch = event.changedPointers[0];\n    const pointerInside = this.isPointInView({\n      x: changedTouch.clientX,\n      y: changedTouch.clientY,\n    });\n\n    const state = this.getState(eventType);\n    if (state !== this.previousState) {\n      this.oldState = this.previousState;\n      this.previousState = state;\n    }\n\n    return {\n      nativeEvent: {\n        numberOfPointers,\n        state,\n        pointerInside,\n        ...this.transformNativeEvent(event),\n        // onHandlerStateChange only\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: this.oldState,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  transformNativeEvent(event) {\n    return {};\n  }\n\n  sendEvent = nativeEvent => {\n    const {\n      onGestureHandlerStateChange: onHandlerStateChange,\n      onGestureHandlerEvent: onGestureEvent,\n    } = this.ref.props;\n\n    const event = this.transformEventData(nativeEvent);\n\n    invokeNullableMethod('onGestureEvent', onGestureEvent, event);\n    if (this.lastSentState !== event.nativeEvent.state) {\n      this.lastSentState = event.nativeEvent.state;\n      invokeNullableMethod('onHandlerStateChange', onHandlerStateChange, event);\n    }\n  };\n\n  cancelPendingGestures(event) {\n    for (const gesture of Object.values(this.pendingGestures)) {\n      if (gesture && gesture.isGestureRunning) {\n        gesture.hasGestureFailed = true;\n        gesture.cancelEvent(event);\n      }\n    }\n  }\n\n  notifyPendingGestures() {\n    for (const gesture of Object.values(this.pendingGestures)) {\n      if (gesture) {\n        gesture.onWaitingEnded(this);\n      }\n    }\n  }\n\n  onGestureEnded(event) {\n    this.isGestureRunning = false;\n    this.cancelPendingGestures(event);\n  }\n\n  forceInvalidate(event) {\n    if (this.isGestureRunning) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(event);\n    }\n  }\n\n  cancelEvent(event) {\n    this.notifyPendingGestures();\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_CANCEL,\n      isFinal: true,\n    });\n    this.onGestureEnded(event);\n  }\n\n  onRawEvent({ isFirst }) {\n    if (isFirst) {\n      this.hasGestureFailed = false;\n    }\n  }\n\n  setView(ref) {\n    if (ref == null) {\n      this.destroy();\n      this.view = null;\n      return;\n    }\n\n    this.ref = ref;\n\n    this.view = findNodeHandle(ref);\n    this.hammer = new Hammer.Manager(this.view);\n\n    this.oldState = State.UNDETERMINED;\n    this.previousState = State.UNDETERMINED;\n    this.lastSentState = null;\n\n    const { NativeGestureClass } = this;\n    const gesture = new NativeGestureClass(this.getHammerConfig());\n    this.hammer.add(gesture);\n\n    this.hammer.on('hammer.input', ev => {\n      if (!this.config.enabled) {\n        this.hasGestureFailed = false;\n        this.isGestureRunning = false;\n        return;\n      }\n\n      this.onRawEvent(ev);\n\n      // TODO: Bacon: Check against something other than null\n      // The isFirst value is not called when the first rotation is calculated.\n      if (this.initialRotation === null && ev.rotation !== 0) {\n        this.initialRotation = ev.rotation;\n      }\n      if (ev.isFinal) {\n        // in favor of a willFail otherwise the last frame of the gesture will be captured.\n        setTimeout(() => {\n          this.initialRotation = null;\n          this.hasGestureFailed = false;\n        });\n      }\n    });\n\n    this.setupEvents();\n    this.sync();\n  }\n\n  setupEvents() {\n    if (!this.isDiscrete) {\n      this.hammer.on(`${this.name}start`, event => this.onStart(event));\n      this.hammer.on(`${this.name}end ${this.name}cancel`, event =>\n        this.onGestureEnded(event)\n      );\n    }\n    this.hammer.on(this.name, ev => this.onGestureActivated(ev));\n  }\n\n  onStart({ deltaX, deltaY, rotation }) {\n    // Reset the state for the next gesture\n    this.oldState = State.UNDETERMINED;\n    this.previousState = State.UNDETERMINED;\n    this.lastSentState = null;\n\n    this.isGestureRunning = true;\n    this.__initialX = deltaX;\n    this.__initialY = deltaY;\n    this.initialRotation = rotation;\n  }\n\n  onGestureActivated(ev) {\n    this.sendEvent(ev);\n  }\n\n  onSuccess() {}\n\n  _getPendingGestures() {\n    if (Array.isArray(this.config.waitFor) && this.config.waitFor.length) {\n      // Get the list of gestures that this gesture is still waiting for.\n      // Use `=== false` in case a ref that isn't a gesture handler is used.\n      const stillWaiting = this.config.waitFor.filter(\n        ({ hasGestureFailed }) => hasGestureFailed === false\n      );\n      return stillWaiting;\n    }\n    return [];\n  }\n\n  getHammerConfig() {\n    const pointers =\n      this.config.minPointers === this.config.maxPointers\n        ? this.config.minPointers\n        : 0;\n    return {\n      pointers,\n    };\n  }\n\n  sync = () => {\n    const gesture = this.hammer.get(this.name);\n    if (!gesture) return;\n\n    const enable = (recognizer, inputData) => {\n      if (!this.config.enabled) {\n        this.isGestureRunning = false;\n        this.hasGestureFailed = false;\n        return false;\n      }\n\n      // Prevent events before the system is ready.\n      if (\n        !inputData ||\n        !recognizer.options ||\n        typeof inputData.maxPointers === 'undefined'\n      ) {\n        return this.shouldEnableGestureOnSetup;\n      }\n\n      if (this.hasGestureFailed) {\n        return false;\n      }\n\n      if (!this.isDiscrete) {\n        if (this.isGestureRunning) {\n          return true;\n        }\n        // The built-in hammer.js \"waitFor\" doesn't work across multiple views.\n        // Only process if there are views to wait for.\n        this._stillWaiting = this._getPendingGestures();\n        // This gesture should continue waiting.\n        if (this._stillWaiting.length) {\n          // Check to see if one of the gestures you're waiting for has started.\n          // If it has then the gesture should fail.\n          for (const gesture of this._stillWaiting) {\n            // When the target gesture has started, this gesture must force fail.\n            if (!gesture.isDiscrete && gesture.isGestureRunning) {\n              this.hasGestureFailed = true;\n              this.isGestureRunning = false;\n              return false;\n            }\n          }\n          // This gesture shouldn't start until the others have finished.\n          return false;\n        }\n      }\n\n      // Use default behaviour\n      if (!this._hasCustomActivationCriteria) {\n        return true;\n      }\n\n      const deltaRotation =\n        this.initialRotation == null\n          ? 0\n          : inputData.rotation - this.initialRotation;\n      const { success, failed } = this.isGestureEnabledForEvent(\n        this.getConfig(),\n        recognizer,\n        {\n          ...inputData,\n          deltaRotation,\n        }\n      );\n\n      if (failed) {\n        this.simulateCancelEvent(inputData);\n        this.hasGestureFailed = true;\n      }\n      return success;\n    };\n\n    const params = this.getHammerConfig();\n    gesture.set({ ...params, enable });\n  };\n\n  simulateCancelEvent(inputData) {}\n}\n\n// Used for sending data to a callback or AnimatedEvent\nfunction invokeNullableMethod(name, method, event) {\n  if (method) {\n    if (typeof method === 'function') {\n      method(event);\n    } else {\n      // For use with reanimated's AnimatedEvent\n      if (\n        '__getHandler' in method &&\n        typeof method.__getHandler === 'function'\n      ) {\n        const handler = method.__getHandler();\n        invokeNullableMethod(name, handler, event);\n      } else {\n        if ('__nodeConfig' in method) {\n          const { argMapping } = method.__nodeConfig;\n          if (Array.isArray(argMapping)) {\n            for (const index in argMapping) {\n              const [key, value] = argMapping[index];\n              if (key in event.nativeEvent) {\n                const nativeValue = event.nativeEvent[key];\n                if (value && value.setValue) {\n                  // Reanimated API\n                  value.setValue(nativeValue);\n                } else {\n                  // RN Animated API\n                  method.__nodeConfig.argMapping[index] = [key, nativeValue];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Validate the props\nfunction ensureConfig(config) {\n  const props = { ...config };\n\n  if ('minDist' in config) {\n    props.minDist = config.minDist;\n    props.minDistSq = props.minDist * props.minDist;\n  }\n  if ('minVelocity' in config) {\n    props.minVelocity = config.minVelocity;\n    props.minVelocitySq = props.minVelocity * props.minVelocity;\n  }\n  if ('maxDist' in config) {\n    props.maxDist = config.maxDist;\n    props.maxDistSq = config.maxDist * config.maxDist;\n  }\n  if ('waitFor' in config) {\n    props.waitFor = asArray(config.waitFor)\n      .map(({ _handlerTag }) => NodeManager.getHandler(_handlerTag))\n      .filter(v => v);\n  } else {\n    props.waitFor = null;\n  }\n\n  [\n    'minPointers',\n    'maxPointers',\n    'minDist',\n    'maxDist',\n    'maxDistSq',\n    'minVelocitySq',\n    'minDistSq',\n    'minVelocity',\n    'failOffsetXStart',\n    'failOffsetYStart',\n    'failOffsetXEnd',\n    'failOffsetYEnd',\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n  ].forEach(prop => {\n    if (typeof props[prop] === 'undefined') {\n      props[prop] = Number.NaN;\n    }\n  });\n  return props;\n}\n\nfunction asArray(value) {\n  return value == null ? [] : Array.isArray(value) ? value : [value];\n}\n\nexport default GestureHandler;\n","import GestureHandler from './GestureHandler';\nimport { PixelRatio } from 'react-native';\n\nclass DraggingGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  transformNativeEvent({\n    deltaX,\n    deltaY,\n    velocityX,\n    velocityY,\n    center: { x, y },\n  }) {\n    const rect = this.view.getBoundingClientRect();\n    const ratio = PixelRatio.get();\n    return {\n      translationX: deltaX - (this.__initialX || 0),\n      translationY: deltaY - (this.__initialY || 0),\n      absoluteX: x,\n      absoluteY: y,\n      velocityX: velocityX * ratio,\n      velocityY: velocityY * ratio,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n}\n\nexport default DraggingGestureHandler;\n","export const isnan = v => Number.isNaN(v);\n\nexport const isValidNumber = v => typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value, limit) =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value, max) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval);\n}\n","import Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      numberOfPointers,\n      maxDist,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    },\n    recognizer,\n    { maxPointers: pointerLength, deltaX: dx, deltaY: dy, ...props }\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n","import GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nclass DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY },\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq)\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }) {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers, maxDist, maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside },\n    recognizer,\n    { maxPointers: pointerLength, center, deltaX, deltaY, ...props }\n  ) {\n    const validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (ev.isFinal && this.isGestureRunning) {\n      let timeout;\n      if (this.visualFeedbackTimer) {\n        // Aesthetic timing for a quick tap.\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }\n      fireAfterInterval(() => {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_END,\n          isFinal: true,\n        });\n        this.onGestureEnded();\n      }, timeout);\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n","import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {\n            const { handlerTag, view, isGestureRunning } = gesture;\n            return (\n              // Check if this gesture isn't self\n              handlerTag !== this.handlerTag &&\n              // Ensure the gesture needs to be cancelled\n              isGestureRunning &&\n              // ScrollView can cancel discrete gestures like taps and presses\n              gesture instanceof DiscreteGestureHandler &&\n              // Ensure a view exists and is a child of the current view\n              view &&\n              this.view.contains(view)\n            );\n          });\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport {\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport State from '../State';\n\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria({ deltaX, deltaY }, criteria) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria({ deltaX, deltaY, velocity }, criteria) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({ pointerLength, scale, deltaRotation }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(criteria) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(props, recognizer, inputData) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this._hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nfunction validateConfig(config = {}) {\n  const isNum = v => isnan(v) || typeof v === 'number';\n  const isBool = v => typeof v === 'boolean';\n\n  const valid = {\n    enabled: isBool,\n    minDistSq: isNum,\n    minVelocityX: isNum,\n    minVelocityY: isNum,\n    // TODO: Bacon: remove `minVelocity`\n    minVelocity: isNum,\n    minVelocitySq: isNum,\n    activeOffsetXStart: isNum,\n    activeOffsetXEnd: isNum,\n    failOffsetXStart: isNum,\n    failOffsetXEnd: isNum,\n    activeOffsetYStart: isNum,\n    activeOffsetYEnd: isNum,\n    failOffsetYStart: isNum,\n    failOffsetYEnd: isNum,\n    hasCustomActivationCriteria: isBool,\n    minPointers: isNum,\n    maxPointers: isNum,\n  };\n  const keys = Object.keys(valid);\n\n  let invalidKeys = [];\n  for (const key of Object.keys(config)) {\n    if (keys.includes(key)) {\n      if (valid[key](config[key])) {\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\n      }\n    } else {\n      invalidKeys.push(key);\n    }\n  }\n\n  if (invalidKeys.length) {\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\n  }\n  return config;\n}\n\nexport default PanGestureHandler;\n","import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers },\n    recognizer,\n    { maxPointers: pointerLength }\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass PinchGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'pinch';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pinch;\n  }\n\n  transformNativeEvent({ scale, velocity, center }) {\n    return {\n      focalX: center.x,\n      focalY: center.y,\n      velocity,\n      scale,\n    };\n  }\n}\n\nexport default PinchGestureHandler;\n","import { Direction } from './web/constants';\nimport FlingGestureHandler from './web/FlingGestureHandler';\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\nimport * as NodeManager from './web/NodeManager';\nimport PanGestureHandler from './web/PanGestureHandler';\nimport PinchGestureHandler from './web/PinchGestureHandler';\nimport RotationGestureHandler from './web/RotationGestureHandler';\nimport TapGestureHandler from './web/TapGestureHandler';\n\nconst Gestures = {\n  PanGestureHandler,\n  RotationGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n  NativeViewGestureHandler,\n  LongPressGestureHandler,\n  FlingGestureHandler,\n  // ForceTouchGestureHandler,\n};\n\nexport default {\n  Direction,\n  handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures))\n      throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n    const GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler(handlerTag, newView) {\n    NodeManager.getHandler(handlerTag).setView(newView);\n  },\n  updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n};\n","import Hammer from '@egjs/hammerjs';\n\nimport { DEG_RAD } from './constants';\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass RotationGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'rotate';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Rotate;\n  }\n\n  transformNativeEvent({ rotation, velocity, center }) {\n    return {\n      rotation: (rotation - this.initialRotation) * DEG_RAD,\n      anchorX: center.x,\n      anchorY: center.y,\n      velocity,\n    };\n  }\n}\nexport default RotationGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { isnan } from './utils';\n\nclass TapGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'tap';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Tap;\n  }\n\n  get maxDelayMs() {\n    return isnan(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n  }\n\n  simulateCancelEvent(inputData) {\n    if (this.isGestureRunning) {\n      this.cancelEvent(inputData);\n    }\n  }\n\n  onGestureActivated(ev) {\n    if (this.isGestureRunning) {\n      this.onSuccessfulTap(ev);\n    }\n  }\n\n  onSuccessfulTap = ev => {\n    if (this._getPendingGestures().length) {\n      this._shouldFireEndEvent = ev;\n      return;\n    }\n    if (ev.eventType === Hammer.INPUT_END) {\n      this.sendEvent({ ...ev, eventType: Hammer.INPUT_MOVE });\n    }\n    // When handler gets activated it will turn into State.END immediately.\n    this.sendEvent({ ...ev, isFinal: true });\n    this.onGestureEnded(ev);\n  };\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n\n    // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n    if (\n      !this.hasGestureFailed &&\n      !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal\n    ) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n    if (ev.isFinal && ev.maxPointers > 1) {\n      setTimeout(() => {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    }\n\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      // Handle case where one finger presses slightly\n      // after the first finger on a multi-tap event\n      if (ev.maxPointers > 1) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n\n      // Clear last timer\n      clearTimeout(this._timer);\n      // Create time out for multi-taps.\n      this._timer = setTimeout(() => {\n        this.hasGestureFailed = true;\n        this.cancelEvent(ev);\n      }, this.maxDelayMs);\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      event: this.name,\n      taps: isnan(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n      interval: this.maxDelayMs,\n      time:\n        isnan(this.config.maxDurationMs) || this.config.maxDurationMs == null\n          ? 250\n          : this.config.maxDurationMs,\n    };\n  }\n\n  updateGestureConfig({\n    shouldCancelWhenOutside = true,\n    maxDeltaX = Number.NaN,\n    maxDeltaY = Number.NaN,\n    numberOfTaps = 1,\n    minDurationMs = 525,\n    maxDelayMs = Number.NaN,\n    maxDurationMs = Number.NaN,\n    maxDist = 2,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldCancelWhenOutside,\n      numberOfTaps,\n      maxDeltaX,\n      maxDeltaY,\n      minDurationMs,\n      maxDelayMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  onGestureEnded(...props) {\n    clearTimeout(this._timer);\n    super.onGestureEnded(...props);\n  }\n\n  onWaitingEnded(gesture) {\n    if (this._shouldFireEndEvent) {\n      this.onSuccessfulTap(this._shouldFireEndEvent);\n      this._shouldFireEndEvent = null;\n    }\n  }\n}\nexport default TapGestureHandler;\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import PropTypes from 'prop-types';\n\n// If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nexport default GestureHandlerPropTypes;\n","import PropTypes from 'prop-types';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  ...GestureHandlerPropTypes,\n\n  // If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\n\nexport default NativeViewGestureHandler;\n","import React from 'react';\n\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  'id',\n  'minPointers',\n  'enabled',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onGestureEvent',\n  'onHandlerStateChange',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'shouldActivateOnStart',\n  'disallowInterruption',\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n];\n\nexport default function createNativeWrapper(Component, config = {}) {\n  const ComponentWrapper = React.forwardRef((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    return (\n      <NativeViewGestureHandler {...gestureHandlerProps}>\n        <Component {...props} ref={ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.propTypes = {\n    ...Component.propTypes,\n  };\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n","import RNGestureHandlerModule from './RNGestureHandlerModule';\n\nexport default RNGestureHandlerModule.Direction;\n","import React from 'react';\nimport { View } from 'react-native';\n\nexport default View;\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC(\n  Component,\n  containerStyles = undefined\n) {\n  function Wrapper(props) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName ||\n    Component.name})`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n","import React from 'react';\nimport { View } from 'react-native';\n\nexport default React.forwardRef((props, ref) => (\n  <View ref={ref} accessibilityRole=\"button\" {...props} />\n));\n","import React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n} from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef((props, ref) => (\n  <RNFlatList\n    ref={ref}\n    {...props}\n    renderScrollComponent={scrollProps => <ScrollView {...scrollProps} />}\n  />\n));\n","export default {\n  get forceTouchAvailable() {\n    return false;\n  },\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\nimport PlatformConstants from './PlatformConstants';\n\nexport const TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nexport const FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport const ForceTouchGestureHandler =\n  PlatformConstants && PlatformConstants.forceTouchAvailable\n    ? createHandler(\n        'ForceTouchGestureHandler',\n        {\n          ...GestureHandlerPropTypes,\n          minForce: PropTypes.number,\n          maxForce: PropTypes.number,\n          feedbackOnActivation: PropTypes.bool,\n        },\n        {}\n      )\n    : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  (PlatformConstants && PlatformConstants.forceTouchAvailable) || false;\n\nexport const LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport const PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nexport const PinchGestureHandler = createHandler(\n  'PinchGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\nexport const RotationGestureHandler = createHandler(\n  'RotationGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\n","// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View, I18nManager } from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  overshootFriction: number,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: Object,\n  containerStyle?: Object,\n  childrenContainerStyle?: Object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?Animated.Event;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation | ?Animated.Value;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation | ?Animated.Value;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, overshootFriction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View\n          onLayout={this._onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this._transX }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL? 'row-reverse': 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n","// @flow\n\n// This component is based on RN's DrawerLayoutAndroid API\n//\n// It perhaps deserves to be put in a separate repo, but since it relies\n// on react-native-gesture-handler library which isn't very popular at the\n// moment I decided to keep it here for the time being. It will allow us\n// to move faster and fix issues that may arise in gesture handler library\n// that could be found when using the drawer component\n\nimport React, { Component } from 'react';\nimport invariant from 'invariant';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  Keyboard,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nconst IDLE = 'Idle';\nconst DRAGGING = 'Dragging';\nconst SETTLING = 'Settling';\n\nexport type PropType = {\n  children: any,\n  drawerBackgroundColor?: string,\n  drawerPosition: 'left' | 'right',\n  drawerLockMode?: 'unlocked' | 'locked-closed' | 'locked-open',\n  drawerWidth: number,\n  keyboardDismissMode?: 'none' | 'on-drag',\n  onDrawerClose?: Function,\n  onDrawerOpen?: Function,\n  onDrawerStateChanged?: Function,\n  renderNavigationView: (progressAnimatedValue: any) => any,\n  useNativeAnimations: boolean,\n\n  // brand new properties\n  drawerType: 'front' | 'back' | 'slide',\n  edgeWidth: number,\n  minSwipeDistance: number,\n  hideStatusBar?: boolean,\n  statusBarAnimation?: 'slide' | 'none' | 'fade',\n  overlayColor: string,\n  drawerContainerStyle?: any,\n  contentContainerStyle?: any,\n  onGestureRef?: Function,\n\n  // Properties not yet supported\n  // onDrawerSlide?: Function\n};\n\nexport type StateType = {\n  dragX: any,\n  touchX: any,\n  drawerTranslation: any,\n  containerWidth: number,\n};\n\nexport type EventType = {\n  stopPropagation: Function,\n};\n\nexport type DrawerMovementOptionType = {\n  velocity?: number,\n};\n\nexport default class DrawerLayout extends Component<PropType, StateType> {\n  static defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n  };\n\n  static positions = {\n    Left: 'left',\n    Right: 'right',\n  };\n  _openValue: ?Animated.Interpolation;\n  _onGestureEvent: ?Animated.Event;\n  _accessibilityIsModalView = React.createRef();\n  _pointerEventsView = React.createRef();\n  _panGestureHandler = React.createRef();\n  _drawerShown = false;\n\n  constructor(props: PropType, context: any) {\n    super(props, context);\n\n    const dragX = new Animated.Value(0);\n    const touchX = new Animated.Value(0);\n    const drawerTranslation = new Animated.Value(0);\n\n    this.state = {\n      dragX,\n      touchX,\n      drawerTranslation,\n      containerWidth: 0,\n    };\n\n    this._updateAnimatedEvent(props, this.state);\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.drawerPosition !== props.drawerPosition ||\n      this.props.drawerWidth !== props.drawerWidth ||\n      this.props.drawerType !== props.drawerType ||\n      this.state.containerWidth !== state.containerWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    // Event definition is based on\n    const { drawerPosition, drawerWidth, drawerType } = props;\n    const {\n      dragX: dragXValue,\n      touchX: touchXValue,\n      drawerTranslation,\n      containerWidth,\n    } = state;\n\n    let dragX = dragXValue;\n    let touchX = touchXValue;\n\n    if (drawerPosition !== 'left') {\n      // Most of the code is written in a way to handle left-side drawer.\n      // In order to handle right-side drawer the only thing we need to\n      // do is to reverse events coming from gesture handler in a way they\n      // emulate left-side drawer gestures. E.g. dragX is simply -dragX, and\n      // touchX is calulcated by subtracing real touchX from the width of the\n      // container (such that when touch happens at the right edge the value\n      // is simply 0)\n      dragX = Animated.multiply(new Animated.Value(-1), dragXValue);\n      touchX = Animated.add(\n        new Animated.Value(containerWidth),\n        Animated.multiply(new Animated.Value(-1), touchXValue)\n      );\n      touchXValue.setValue(containerWidth);\n    } else {\n      touchXValue.setValue(0);\n    }\n\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the dragX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    //\n    let translationX = dragX;\n    if (drawerType === 'front') {\n      const startPositionX = Animated.add(\n        touchX,\n        Animated.multiply(new Animated.Value(-1), dragX)\n      );\n\n      const dragOffsetFromOnStartPosition = startPositionX.interpolate({\n        inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n        outputRange: [0, 0, 1],\n      });\n      translationX = Animated.add(dragX, dragOffsetFromOnStartPosition);\n    }\n\n    this._openValue = Animated.add(translationX, drawerTranslation).interpolate(\n      {\n        inputRange: [0, drawerWidth],\n        outputRange: [0, 1],\n        extrapolate: 'clamp',\n      }\n    );\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragXValue, x: touchXValue } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  };\n\n  _handleContainerLayout = ({ nativeEvent }) => {\n    this.setState({ containerWidth: nativeEvent.layout.width });\n  };\n\n  _emitStateChanged = (newState: string, drawerWillShow: boolean) => {\n    this.props.onDrawerStateChanged &&\n      this.props.onDrawerStateChanged(newState, drawerWillShow);\n  };\n\n  _openingHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    } else if (nativeEvent.state === State.ACTIVE) {\n      this._emitStateChanged(DRAGGING, false);\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n      if (this.props.hideStatusBar) {\n        StatusBar.setHidden(true, this.props.statusBarAnimation || 'slide');\n      }\n    }\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (\n      this._drawerShown &&\n      nativeEvent.oldState === State.ACTIVE &&\n      this.props.drawerLockMode !== 'locked-open'\n    ) {\n      this.closeDrawer();\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { drawerWidth, drawerPosition, drawerType } = this.props;\n    const { containerWidth } = this.state;\n    let { translationX: dragX, velocityX, x: touchX } = nativeEvent;\n\n    if (drawerPosition !== 'left') {\n      // See description in _updateAnimatedEvent about why events are flipped\n      // for right-side drawer\n      dragX = -dragX;\n      touchX = containerWidth - touchX;\n      velocityX = -velocityX;\n    }\n\n    const gestureStartX = touchX - dragX;\n    let dragOffsetBasedOnStart = 0;\n\n    if (drawerType === 'front') {\n      dragOffsetBasedOnStart =\n        gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n    }\n\n    const startOffsetX =\n      dragX + dragOffsetBasedOnStart + (this._drawerShown ? drawerWidth : 0);\n    const projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n\n    const shouldOpen = projOffsetX > drawerWidth / 2;\n\n    if (shouldOpen) {\n      this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n    } else {\n      this._animateDrawer(startOffsetX, 0, velocityX);\n    }\n  };\n\n  _updateShowing = (showing: boolean) => {\n    this._drawerShown = showing;\n    this._accessibilityIsModalView.current &&\n      this._accessibilityIsModalView.current.setNativeProps({\n        accessibilityViewIsModal: showing,\n      });\n    this._pointerEventsView.current &&\n      this._pointerEventsView.current.setNativeProps({\n        pointerEvents: showing ? 'auto' : 'none',\n      });\n    const { drawerPosition, minSwipeDistance, edgeWidth } = this.props;\n    const fromLeft = drawerPosition === 'left';\n    // gestureOrientation is 1 if the expected gesture is from left to right and -1 otherwise\n    // e.g. when drawer is on the left and is closed we expect left to right gesture, thus\n    // orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n    // When drawer is closed we want the hitSlop to be horizontally shorter\n    // than the container size by the value of SLOP. This will make it only\n    // activate when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: showing ? undefined : edgeWidth }\n      : { right: 0, width: showing ? undefined : edgeWidth };\n    this._panGestureHandler.current &&\n      this._panGestureHandler.current.setNativeProps({\n        hitSlop,\n        activeOffsetX: gestureOrientation * minSwipeDistance,\n      });\n  };\n\n  _animateDrawer = (fromValue: ?number, toValue: number, velocity: number) => {\n    this.state.dragX.setValue(0);\n    this.state.touchX.setValue(\n      this.props.drawerPosition === 'left' ? 0 : this.state.containerWidth\n    );\n\n    if (fromValue != null) {\n      let nextFramePosition = fromValue;\n      if (this.props.useNativeAnimations) {\n        // When using native driver, we predict the next position of the animation\n        // because it takes one frame of a roundtrip to pass RELEASE event from\n        // native driver to JS before we can start animating. Without it, it is more\n        // noticable that the frame is dropped.\n        if (fromValue < toValue && velocity > 0) {\n          nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n        } else if (fromValue > toValue && velocity < 0) {\n          nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n        }\n      }\n      this.state.drawerTranslation.setValue(nextFramePosition);\n    }\n\n    const willShow = toValue !== 0;\n    this._updateShowing(willShow);\n    this._emitStateChanged(SETTLING, willShow);\n    if (this.props.hideStatusBar) {\n      StatusBar.setHidden(willShow, this.props.statusBarAnimation || 'slide');\n    }\n    Animated.spring(this.state.drawerTranslation, {\n      velocity,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n    }).start(({ finished }) => {\n      if (finished) {\n        this._emitStateChanged(IDLE, willShow);\n        if (willShow) {\n          this.props.onDrawerOpen && this.props.onDrawerOpen();\n        } else {\n          this.props.onDrawerClose && this.props.onDrawerClose();\n        }\n      }\n    });\n  };\n\n  openDrawer = (options: DrawerMovementOptionType = {}) => {\n    this._animateDrawer(\n      undefined,\n      this.props.drawerWidth,\n      options.velocity ? options.velocity : 0\n    );\n\n    // We need to force the update, otherwise the overlay is not rerendered and it would not be clickable\n    this.forceUpdate();\n  };\n\n  closeDrawer = (options: DrawerMovementOptionType = {}) => {\n    this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n    // We need to force the update, otherwise the overlay is not rerendered and it would be still clickable\n    this.forceUpdate();\n  };\n\n  _renderOverlay = () => {\n    /* Overlay styles */\n    invariant(this._openValue, 'should be set');\n    const overlayOpacity = this._openValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    });\n    const dynamicOverlayStyles = {\n      opacity: overlayOpacity,\n      backgroundColor: this.props.overlayColor,\n    };\n\n    return (\n      <TapGestureHandler onHandlerStateChange={this._onTapHandlerStateChange}>\n        <Animated.View\n          pointerEvents={this._drawerShown ? 'auto' : 'none'}\n          ref={this._pointerEventsView}\n          style={[styles.overlay, dynamicOverlayStyles]}\n        />\n      </TapGestureHandler>\n    );\n  };\n\n  _renderDrawer = () => {\n    const {\n      drawerBackgroundColor,\n      drawerWidth,\n      drawerPosition,\n      drawerType,\n      drawerContainerStyle,\n      contentContainerStyle,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n    const drawerSlide = drawerType !== 'back';\n    const containerSlide = drawerType !== 'front';\n\n    // we rely on row and row-reverse flex directions to position the drawer\n    // properly. Apparently for RTL these are flipped which requires us to use\n    // the opposite setting for the drawer to appear from left or right according\n    // to the drawerPosition prop\n    const reverseContentDirection = I18nManager.isRTL ? fromLeft : !fromLeft;\n\n    const dynamicDrawerStyles = {\n      backgroundColor: drawerBackgroundColor,\n      width: drawerWidth,\n    };\n    const openValue = this._openValue;\n    invariant(openValue, 'should be set');\n\n    let containerStyles;\n    if (containerSlide) {\n      const containerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n        extrapolate: 'clamp',\n      });\n      containerStyles = {\n        transform: [{ translateX: containerTranslateX }],\n      };\n    }\n\n    let drawerTranslateX = 0;\n    if (drawerSlide) {\n      const closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n      drawerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [closedDrawerOffset, 0],\n        extrapolate: 'clamp',\n      });\n    }\n    const drawerStyles = {\n      transform: [{ translateX: drawerTranslateX }],\n      flexDirection: reverseContentDirection ? 'row-reverse' : 'row',\n    };\n\n    return (\n      <Animated.View style={styles.main} onLayout={this._handleContainerLayout}>\n        <Animated.View\n          style={[\n            drawerType === 'front'\n              ? styles.containerOnBack\n              : styles.containerInFront,\n            containerStyles,\n            contentContainerStyle,\n          ]}\n          importantForAccessibility={\n            this._drawerShown ? 'no-hide-descendants' : 'yes'\n          }>\n          {typeof this.props.children === 'function'\n            ? this.props.children(this._openValue)\n            : this.props.children}\n          {this._renderOverlay()}\n        </Animated.View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          ref={this._accessibilityIsModalView}\n          accessibilityViewIsModal={this._drawerShown}\n          style={[styles.drawerContainer, drawerStyles, drawerContainerStyle]}>\n          <View style={dynamicDrawerStyles}>\n            {this.props.renderNavigationView(this._openValue)}\n          </View>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  _setPanGestureRef = ref => {\n    this._panGestureHandler.current = ref;\n    this.props.onGestureRef && this.props.onGestureRef(ref);\n  };\n\n  render() {\n    const {\n      drawerPosition,\n      drawerLockMode,\n      edgeWidth,\n      minSwipeDistance,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n\n    // gestureOrientation is 1 if the expected gesture is from left to right and -1 otherwise\n    // e.g. when drawer is on the left and is closed we expect left to right gesture, thus\n    // orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n\n    // When drawer is closed we want the hitSlop to be horizontally shorter\n    // than the container size by the value of SLOP. This will make it only\n    // activate when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: this._drawerShown ? undefined : edgeWidth }\n      : { right: 0, width: this._drawerShown ? undefined : edgeWidth };\n\n    return (\n      <PanGestureHandler\n        ref={this._setPanGestureRef}\n        hitSlop={hitSlop}\n        activeOffsetX={gestureOrientation * minSwipeDistance}\n        failOffsetY={[-15, 15]}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._openingHandlerStateChange}\n        enabled={\n          drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open'\n        }>\n        {this._renderDrawer()}\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  drawerContainer: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1001,\n    flexDirection: 'row',\n  },\n  containerInFront: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1002,\n  },\n  containerOnBack: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  main: {\n    flex: 1,\n    zIndex: 0,\n    overflow: 'hidden',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1000,\n  },\n});\n","import { TouchableNativeFeedback } from 'react-native';\n\nexport default TouchableNativeFeedback;\n","import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          this.props.disabled ? null : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n","import React from 'react';\nimport GenericTouchable from './GenericTouchable';\n\nconst TouchableWithoutFeedback = React.forwardRef((props, ref) => (\n  <GenericTouchable ref={ref} {...props} />\n));\n\nTouchableWithoutFeedback.defaultProps = GenericTouchable.defaultProps;\n\nTouchableWithoutFeedback.propTypes = GenericTouchable.publicPropTypes;\n\nexport default TouchableWithoutFeedback;\n","import { Animated, Easing, StyleSheet, View } from 'react-native';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    style: PropTypes.any,\n    activeOpacity: PropTypes.number,\n  };\n\n  // opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null ? 1 : childStyle.opacity;\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value, duration) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: this.opacity,\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    activeOpacity: PropTypes.number,\n    underlayColor: PropTypes.string,\n    style: PropTypes.any,\n    onShowUnderlay: PropTypes.func,\n    onHideUnderlay: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay && this.props.onHideUnderlay();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(\n        child.props.style,\n        this.state.extraChildStyle\n      ),\n    });\n  }\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"sourceRoot":""}