{"version":3,"sources":["DataTableCell.tsx","DataTableHeader.tsx","DataTableTitle.tsx","DataTablePagination.tsx","DataTableRow.tsx","DataTable.tsx","node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","node_modules/react-native-gesture-handler/State.js","node_modules/date-fns/esm/_lib/toInteger/index.js","node_modules/@babel/runtime/helpers/get.js","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/react-native-gesture-handler/createHandler.js","../../../../.config/yarn/global/node_modules/timers-browserify/main.js","node_modules/@egjs/hammerjs/dist/hammer.esm.js","node_modules/react-native-gesture-handler/web/constants.js","node_modules/react-native-gesture-handler/web/Errors.js","node_modules/react-native-gesture-handler/web/NodeManager.js","node_modules/react-native-gesture-handler/web/GestureHandler.js","node_modules/react-native-gesture-handler/web/DraggingGestureHandler.js","node_modules/react-native-gesture-handler/web/utils.js","node_modules/react-native-gesture-handler/web/FlingGestureHandler.js","node_modules/react-native-gesture-handler/web/DiscreteGestureHandler.js","node_modules/react-native-gesture-handler/web/PressGestureHandler.js","node_modules/react-native-gesture-handler/web/LongPressGestureHandler.js","node_modules/react-native-gesture-handler/web/NativeViewGestureHandler.js","node_modules/react-native-gesture-handler/web/PanGestureHandler.js","node_modules/react-native-gesture-handler/web/IndiscreteGestureHandler.js","node_modules/react-native-gesture-handler/web/PinchGestureHandler.js","node_modules/react-native-gesture-handler/RNGestureHandlerModule.web.js","node_modules/react-native-gesture-handler/web/RotationGestureHandler.js","node_modules/react-native-gesture-handler/web/TapGestureHandler.js","../../../../.config/yarn/global/node_modules/setimmediate/setImmediate.js","node_modules/fbjs/lib/areEqual.js","node_modules/@babel/runtime/helpers/superPropBase.js","node_modules/date-fns/esm/addMinutes/index.js","node_modules/react-native-gesture-handler/GestureHandlerPropTypes.js","node_modules/react-native-gesture-handler/NativeViewGestureHandler.js","node_modules/react-native-gesture-handler/createNativeWrapper.js","node_modules/react-native-gesture-handler/Directions.js","node_modules/react-native-gesture-handler/GestureHandlerRootView.js","node_modules/react-native-gesture-handler/gestureHandlerRootHOC.js","node_modules/react-native-gesture-handler/GestureButtons.js","node_modules/react-native-gesture-handler/GestureHandlerButton.web.js","node_modules/react-native-gesture-handler/GestureComponents.web.js","node_modules/react-native-gesture-handler/PlatformConstants.web.js","node_modules/react-native-gesture-handler/Gestures.js","node_modules/react-native-gesture-handler/Swipeable.js","node_modules/react-native-gesture-handler/DrawerLayout.js","node_modules/react-native-gesture-handler/touchables/TouchableNativeFeedback.js","node_modules/react-native-gesture-handler/touchables/GenericTouchable.js","node_modules/react-native-gesture-handler/touchables/TouchableWithoutFeedback.js","node_modules/react-native-gesture-handler/touchables/TouchableOpacity.js","node_modules/react-native-gesture-handler/touchables/TouchableHighlight.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","node_modules/date-fns/esm/startOfDay/index.js"],"names":["DataTableCell","rest","style","styles","numeric","numberOfLines","StyleSheet","container","flex","flexDirection","alignItems","right","justifyContent","DataTableHeader","borderBottomColor","color","theme","header","height","paddingHorizontal","borderBottomWidth","withTheme","DataTableTitle","spinAnim","React","Animated","sortDirection","current","toValue","duration","useNativeDriver","textColor","spin","inputRange","outputRange","icon","transform","rotate","name","size","direction","I18nManager","disabled","onPress","alignContent","paddingVertical","cell","lineHeight","fontSize","fontWeight","sorted","marginLeft","DataTablePagination","labelColor","page","onPageChange","numberOfPages","paddingLeft","label","marginRight","borderStyle","minHeight","content","pointerEvents","DataTable","width","requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","State","UNDETERMINED","FAILED","BEGAN","CANCELLED","ACTIVE","END","state","keys","i","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","superPropBase","_get","target","property","receiver","Reflect","get","module","exports","__esModule","base","desc","getOwnPropertyDescriptor","value","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","findNodeHandle","node","Platform","OS","findNodeHandleRN","NativeModules","UIManager","customGHEventsConfig","onGestureHandlerEvent","registrationName","onGestureHandlerStateChange","genericDirectEventTypes","getConstants","setJSResponder","oldSetJSResponder","clearJSResponder","oldClearJSResponder","tag","blockNativeResponder","RNGestureHandlerModule","handleSetJSResponder","handleClearJSResponder","handlerTag","handlerIDToTag","isConfigParam","param","undefined","filterConfig","props","validProps","defaults","res","forEach","key","transformIntoHandlerTags","top","left","bottom","handlerIDs","Array","isArray","map","filter","handle","handlerID","_handlerTag","hasUnresolvedRefs","extract","refs","some","r","stateToPropMappings","createHandler","handlerName","propTypes","config","transformProps","customNativeProps","Handler","_onGestureHandlerEvent","event","nativeEvent","onGestureEvent","_onGestureHandlerStateChange","onHandlerStateChange","stateEventName","_refHandler","_viewNode","ref","Children","only","children","_createGestureHandler","newConfig","_config","createGestureHandler","_attachGestureHandler","newViewTag","_viewTag","attachGestureHandler","_updateGestureHandler","updateGestureHandler","id","dropGestureHandler","this","_updateEnqueued","clearImmediate","setImmediate","_update","constructor","viewTag","deepEqual","updates","mergedProps","gestureEventHandler","gestureStateEventHandler","child","grandChildren","Touchable","TOUCH_TARGET_DEBUG","type","displayName","toArray","push","renderDebugView","hitSlop","cloneElement","collapsable","Component","self","window","apply","Function","Timeout","clearFn","_id","_clearFn","setTimeout","scope","clearTimeout","setInterval","clearInterval","timeout","close","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","global","_extends","assign","source","hasOwnProperty","_inheritsLoose","subClass","superClass","create","__proto__","_assertThisInitialized","ReferenceError","win","assign$1","output","index","nextKey","VENDOR_PREFIXES","TEST_ELEMENT","document","createElement","round","abs","now","prefixed","obj","prefix","prop","camelProp","toUpperCase","slice","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","val","getTouchActionProps","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","PROPS_XY","PROPS_CLIENT_XY","each","iterator","context","boolOrFn","inStr","str","find","indexOf","TouchAction","manager","set","_proto","compute","element","actions","toLowerCase","trim","update","options","touchAction","recognizers","recognizer","enable","concat","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","input","srcEvent","offsetDirection","session","prevented","preventDefault","hasNone","isTapPointer","pointers","isTapMovement","distance","isTapTouchTime","deltaTime","DIRECTION_LEFT","DIRECTION_UP","preventSrc","hasParent","parent","parentNode","getCenter","pointersLength","x","clientX","y","clientY","simpleCloneInputData","timeStamp","center","deltaX","deltaY","getDistance","p1","p2","sqrt","getAngle","atan2","PI","getVelocity","computeInputData","firstInput","firstMultiple","offsetCenter","angle","offset","offsetDelta","prevDelta","prevInput","eventType","computeDeltaXY","start","end","overallVelocity","overallVelocityX","overallVelocityY","scale","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","last","lastInterval","v","computeIntervalInputData","srcEventTarget","composedPath","path","inputHandler","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","emit","recognize","splitStr","split","addEventListeners","types","handler","addEventListener","removeEventListeners","removeEventListener","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","callback","inputTarget","domHandler","ev","init","evEl","evTarget","evWin","destroy","inArray","src","findByKey","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","PointerEventInput","_Input","_this","proto","store","removePointer","eventTypeNormalized","replace","pointerType","isTouch","storeIndex","pointerId","button","splice","uniqueArray","sort","results","values","a","b","TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TouchInput","targetIds","touches","getTouches","targetTouches","allTouches","identifier","changedTouches","changedTargetTouches","touch","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MouseInput","pressed","which","setLastTouch","eventData","primaryTouch","lastTouch","lts","lastTouches","recordTouches","isSyntheticEvent","t","dx","dy","TouchMouseInput","_manager","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","mouse","invokeArrayArg","arg","fn","_uniqueId","getRecognizerByNameIfManager","otherRecognizer","stateStr","Recognizer","simultaneous","requireFail","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","TapRecognizer","_Recognizer","taps","interval","time","threshold","posThreshold","pTime","pCenter","_timer","_input","count","_this2","validPointers","validMovement","validTouchTime","failTimeout","validInterval","validMultiTap","_this3","tapCount","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","directionStr","PanRecognizer","_AttrRecognizer","DIRECTION_HORIZONTAL","pX","pY","directionTest","hasMoved","SwipeRecognizer","PinchRecognizer","inOut","RotateRecognizer","PressRecognizer","validTime","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","preset","toggleCssProps","add","oldCssProps","Manager","handlers","createInputInstance","stop","force","stopped","curRecognizer","existing","remove","targetRecognizer","on","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","SINGLE_TOUCH_INPUT_MAP","SingleTouchInput","started","normalizeSingleTouches","all","changed","deprecate","method","message","deprecationMessage","e","log","extend","dest","merge","inherit","properties","childP","baseP","_super","bindFn","Hammer","VERSION","DIRECTION_ALL","DIRECTION_DOWN","DIRECTION_RIGHT","DIRECTION_VERTICAL","DIRECTION_NONE","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press","DEG_RAD","EventMap","Direction","RIGHT","LEFT","UP","DOWN","GesturePropError","expectedType","gestures","getHandler","getNodes","_gestureInstances","invokeNullableMethod","__getHandler","argMapping","__nodeConfig","nativeValue","setValue","GestureHandler","isGestureRunning","hasGestureFailed","view","hammer","pendingGestures","oldState","previousState","lastSentState","clearSelfAsPending","waitFor","removePendingGesture","isPointInView","rect","getBoundingClientRect","sendEvent","transformEventData","sync","params","getHammerConfig","enabled","shouldEnableGestureOnSetup","isDiscrete","_stillWaiting","_getPendingGestures","_hasCustomActivationCriteria","deltaRotation","initialRotation","isGestureEnabledForEvent","getConfig","success","failed","simulateCancelEvent","_gestureInstance","minDist","minDistSq","minVelocity","minVelocitySq","maxDist","maxDistSq","NodeManager","ensureConfig","updateHasCustomActivationCriteria","addPendingGesture","numberOfPointers","changedTouch","pointerInside","getState","transformNativeEvent","cancelEvent","onWaitingEnded","cancelPendingGestures","notifyPendingGestures","onGestureEnded","NativeGestureClass","onRawEvent","setupEvents","onStart","onGestureActivated","__initialX","__initialY","minPointers","DraggingGestureHandler","ratio","PixelRatio","translationX","translationY","absoluteX","absoluteY","isnan","isValidNumber","TEST_MIN_IF_NOT_NAN","limit","VEC_LEN_SQ","TEST_MAX_IF_NOT_NAN","max","fireAfterInterval","FlingGestureHandler","getDirection","directions","Set","pointerLength","maxDeltaX","maxDeltaY","shouldCancelWhenOutside","validPointerCount","DiscreteGestureHandler","shouldFailUnderCustomCriteria","PressGestureHandler","shouldDelayTouches","minDurationMs","onGestureStart","visualFeedbackTimer","initialEvent","sendGestureStartedEvent","shouldDelayTouchForEvent","shouldActivateOnStart","disallowInterruption","LongPressGestureHandler","NativeViewGestureHandler","contains","forceInvalidate","PanGestureHandler","nextState","activeOffsetXStart","activeOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","horizontalDirections","verticalDirections","criteria","failOffsetXStart","failOffsetXEnd","failOffsetYStart","failOffsetYEnd","minVelocityX","minVelocityY","deltaScale","absDeltaRotation","shouldActivateUnderCustomCriteria","shouldMultiFingerPanFail","IndiscreteGestureHandler","PinchGestureHandler","focalX","focalY","Gestures","RotationGestureHandler","anchorX","anchorY","TapGestureHandler","onSuccessfulTap","_shouldFireEndEvent","maxDelayMs","_multiTapTimer","numberOfTaps","maxDurationMs","GestureClass","newView","setView","updateGestureConfig","getGestureHandlerNode","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","getPrototypeOf","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","random","onGlobalMessage","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","task","run","aStackPool","bStackPool","aStack","pop","bStack","result","eq","objToStr","className","String","multiline","ignoreCase","valueOf","object","addMinutes","GestureHandlerPropTypes","PropTypes","string","bool","oneOfType","arrayOf","simultaneousHandlers","shape","vertical","horizontal","func","onBegan","onFailed","onCancelled","onActivated","onEnded","NATIVE_WRAPPER_PROPS_FILTER","createNativeWrapper","ComponentWrapper","forwardRef","gestureHandlerProps","reduce","View","RawButton","accessibilityRole","BaseButton","_handleEvent","_lastActive","onActiveStateChange","_onHandlerStateChange","_onGestureEvent","rippleColor","processColor","AnimatedBaseButton","createAnimatedComponent","btnStyles","underlay","position","RectButton","_onActiveStateChange","_opacity","activeOpacity","Value","resolvedStyle","flatten","opacity","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","defaultProps","BorderlessButton","borderless","ScrollView","RNScrollView","RNSwitch","RNTextInput","RNDrawerLayoutAndroid","positions","FlatList","renderScrollComponent","scrollProps","ForceTouchFallback","PlatformConstants","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","activeOffsetY","activeOffsetX","failOffsetY","failOffsetX","avgTouches","minDeltaX","minOffsetX","minDeltaY","minOffsetY","transformPanGestureHandlerProps","_updateAnimatedEvent","friction","overshootFriction","dragX","useNativeAnimations","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","overshootLeft","overshootRight","transX","interpolate","_transX","_showLeftAction","_leftActionTranslate","MIN_VALUE","extrapolate","_showRightAction","_rightActionTranslate","_onTapHandlerStateChange","_handleRelease","rowState","leftThreshold","rightThreshold","startOffsetX","_currentOffset","_animateRow","fromValue","setState","sign","spring","restSpeedThreshold","restDisplacementThreshold","bounciness","animationOptions","finished","onSwipeableLeftOpen","onSwipeableRightOpen","onSwipeableClose","onSwipeableOpen","onSwipeableLeftWillOpen","onSwipeableRightWillOpen","onSwipeableWillClose","onSwipeableWillOpen","_onRowLayout","layout","openLeft","openRight","renderLeftActions","renderRightActions","leftActions","translateX","onLayout","rightActions","containerStyle","childrenContainerStyle","overflow","absoluteFillObject","isRTL","DrawerLayout","_accessibilityIsModalView","createRef","_pointerEventsView","_panGestureHandler","_drawerShown","drawerPosition","drawerWidth","drawerType","dragXValue","touchXValue","touchX","drawerTranslation","containerWidth","multiply","dragOffsetFromOnStartPosition","_openValue","_handleContainerLayout","_emitStateChanged","newState","drawerWillShow","onDrawerStateChanged","_openingHandlerStateChange","keyboardDismissMode","Keyboard","dismiss","hideStatusBar","StatusBar","setHidden","statusBarAnimation","drawerLockMode","closeDrawer","gestureStartX","dragOffsetBasedOnStart","_animateDrawer","_updateShowing","showing","setNativeProps","accessibilityViewIsModal","minSwipeDistance","edgeWidth","fromLeft","gestureOrientation","nextFramePosition","min","willShow","onDrawerOpen","onDrawerClose","openDrawer","forceUpdate","_renderOverlay","invariant","dynamicOverlayStyles","overlayColor","overlay","_renderDrawer","containerStyles","drawerBackgroundColor","drawerContainerStyle","contentContainerStyle","drawerSlide","containerSlide","reverseContentDirection","dynamicDrawerStyles","openValue","drawerTranslateX","closedDrawerOffset","drawerStyles","main","containerOnBack","containerInFront","importantForAccessibility","drawerContainer","renderNavigationView","_setPanGestureRef","onGestureRef","Left","Right","zIndex","TOUCHABLE_STATE","PublicPropTypes","accessible","accessibilityLabel","accessibilityHint","onPressIn","onPressOut","onLongPress","nativeID","testID","delayPressIn","delayPressOut","delayLongPress","InternalPropTypes","extraButtonProps","onStateChange","GenericTouchable","longPressDetected","STATE","onMoveIn","onMoveOut","moveToState","handlePressIn","shouldCallOnPress","pressOutTimeout","handleGoToUndetermined","onLongPressDetected","pressInTimeout","longPressTimeout","handleMoveOutside","coreProps","accessibilityComponentType","accessibilityStates","accessibilityTraits","publicPropTypes","internalPropTypes","TouchableWithoutFeedback","TouchableOpacity","getChildStyleOpacityWithDefault","childStyle","setOpacityTo","timing","easing","Easing","quad","from","to","any","TouchableHighlight","showUnderlay","hasPressHandler","extraChildStyle","extraUnderlayStyle","onShowUnderlay","hideUnderlay","onHideUnderlay","compose","renderChildren","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","differenceInMinutes","diff","startOfDay","date","setHours"],"mappings":"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","file":"static/js/6.41f84af8.chunk.js","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableCell`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a single cell inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * If you want to support multiline text, please use View instead, as multiline text doesn't comply with\n * MD Guidelines (https://github.com/callstack/react-native-paper/issues/2381).\n */\n\nconst DataTableCell = ({ children, style, numeric, ...rest }: Props) => (\n  <TouchableRipple\n    {...rest}\n    style={[styles.container, numeric && styles.right, style]}\n  >\n    <Text numberOfLines={1}>{children}</Text>\n  </TouchableRipple>\n);\n\nDataTableCell.displayName = 'DataTable.Cell';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n});\n\nexport default DataTableCell;\n","import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTableHeader`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableHeader = ({ children, style, theme, ...rest }: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <View {...rest} style={[styles.header, { borderBottomColor }, style]}>\n      {children}\n    </View>\n  );\n};\n\nDataTableHeader.displayName = 'DataTable.Header';\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    height: 48,\n    paddingHorizontal: 16,\n    borderBottomWidth: StyleSheet.hairlineWidth * 2,\n  },\n});\n\nexport default withTheme(DataTableHeader);\n\n// @component-docs ignore-next-line\nexport { DataTableHeader };\n","import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n","import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const itemsPerPage = 2;\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const from = page * itemsPerPage;\n *   const to = (page + 1) * itemsPerPage;\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.floor(items.length / itemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTablePagination = ({\n  label,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  return (\n    <View {...rest} style={[styles.container, style]}>\n      <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n        {label}\n      </Text>\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        color={theme.colors.text}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n      />\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n","import * as React from 'react';\nimport color from 'color';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  ViewProps,\n} from 'react-native';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * `pointerEvents` passed to the `View` container, which is wrapping children within `TouchableRipple`.\n   */\n  pointerEvents?: ViewProps['pointerEvents'];\n};\n\n/**\n * A component to show a single row inside of a table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-row-cell.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *      <DataTable.Row>\n *        <DataTable.Cell numeric>1</DataTable.Cell>\n *        <DataTable.Cell numeric>2</DataTable.Cell>\n *        <DataTable.Cell numeric>3</DataTable.Cell>\n *        <DataTable.Cell numeric>4</DataTable.Cell>\n *      </DataTable.Row>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableRow = ({\n  onPress,\n  style,\n  theme,\n  children,\n  pointerEvents,\n  ...rest\n}: Props) => {\n  const borderBottomColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      onPress={onPress}\n      style={[styles.container, { borderBottomColor }, style]}\n    >\n      <View style={styles.content} pointerEvents={pointerEvents}>\n        {children}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n","import * as React from 'react';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport DataTableCell from './DataTableCell';\nimport DataTableHeader, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableHeader as _DataTableHeader,\n} from './DataTableHeader';\nimport DataTableTitle, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTableTitle as _DataTableTitle,\n} from './DataTableTitle';\nimport DataTablePagination, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  DataTablePagination as _DataTablePagination,\n} from './DataTablePagination';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport DataTableRow, { DataTableRow as _DataTableRow } from './DataTableRow';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DataTable`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * Data tables allow displaying sets of data.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/data-table.png\" />\n *     <figcaption>Data table</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <DataTable>\n *     <DataTable.Header>\n *       <DataTable.Title>Dessert</DataTable.Title>\n *       <DataTable.Title numeric>Calories</DataTable.Title>\n *       <DataTable.Title numeric>Fat</DataTable.Title>\n *     </DataTable.Header>\n *\n *     <DataTable.Row>\n *       <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n *       <DataTable.Cell numeric>159</DataTable.Cell>\n *       <DataTable.Cell numeric>6.0</DataTable.Cell>\n *     </DataTable.Row>\n *\n *     <DataTable.Row>\n *       <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n *       <DataTable.Cell numeric>237</DataTable.Cell>\n *       <DataTable.Cell numeric>8.0</DataTable.Cell>\n *     </DataTable.Row>\n *\n *     <DataTable.Pagination\n *       page={1}\n *       numberOfPages={3}\n *       onPageChange={page => {\n *         console.log(page);\n *       }}\n *       label=\"1-2 of 6\"\n *     />\n *   </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst DataTable = ({ children, style, ...rest }: Props) => (\n  <View {...rest} style={[styles.container, style]}>\n    {children}\n  </View>\n);\n\n// @component ./DataTableHeader.tsx\nDataTable.Header = DataTableHeader;\n\n// @component ./DataTableTitle.tsx\nDataTable.Title = DataTableTitle;\n\n// @component ./DataTableRow.tsx\nDataTable.Row = DataTableRow;\n\n// @component ./DataTableCell.tsx\nDataTable.Cell = DataTableCell;\n\n// @component ./DataTablePagination.tsx\nDataTable.Pagination = DataTablePagination;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n});\n\nexport default DataTable;\n","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","const State = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n};\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nexport default State;\n","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import React from 'react';\nimport {\n  findNodeHandle as findNodeHandleRN,\n  NativeModules,\n  Touchable,\n  Platform,\n} from 'react-native';\nimport deepEqual from 'fbjs/lib/areEqual';\nimport RNGestureHandlerModule from './RNGestureHandlerModule';\nimport State from './State';\n\nfunction findNodeHandle(node) {\n  if (Platform.OS === 'web') return node;\n  return findNodeHandleRN(node);\n}\n\nconst { UIManager = {} } = NativeModules;\n\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: { registrationName: 'onGestureHandlerEvent' },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange',\n  },\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManager.genericDirectEventTypes = {\n  ...UIManager.genericDirectEventTypes,\n  ...customGHEventsConfig,\n};\n// In newer versions of RN the `genericDirectEventTypes` is located in the object\n// returned by UIManager.getConstants(), we need to add it there as well to make\n// it compatible with RN 61+\nif (UIManager.getConstants) {\n  UIManager.getConstants().genericDirectEventTypes = {\n    ...UIManager.getConstants().genericDirectEventTypes,\n    ...customGHEventsConfig,\n  };\n}\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {},\n  clearJSResponder: oldClearJSResponder = () => {},\n} = UIManager;\nUIManager.setJSResponder = (tag, blockNativeResponder) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManager.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\n\nlet handlerTag = 1;\nconst handlerIDToTag = {};\n\nfunction isConfigParam(param, name) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) || !('__isNative' in param)) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nfunction filterConfig(props, validProps, defaults = {}) {\n  const res = { ...defaults };\n  Object.keys(validProps).forEach(key => {\n    const value = props[key];\n    if (isConfigParam(value, key)) {\n      let value = props[key];\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop') {\n        if (typeof value !== 'object') {\n          value = { top: value, left: value, bottom: value, right: value };\n        }\n      }\n      res[key] = value;\n    }\n  });\n  return res;\n}\n\nfunction transformIntoHandlerTags(handlerIDs) {\n  if (!Array.isArray(handlerIDs)) {\n    handlerIDs = [handlerIDs];\n  }\n\n  if (Platform.OS === 'web') {\n    return handlerIDs.map(({ current }) => current).filter(handle => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      handlerID =>\n        handlerIDToTag[handlerID] ||\n        (handlerID.current && handlerID.current._handlerTag) ||\n        -1\n    )\n    .filter(handlerTag => handlerTag > 0);\n}\n\nfunction hasUnresolvedRefs(props) {\n  const extract = refs => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\n\nconst stateToPropMappings = {\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded',\n};\n\nexport default function createHandler(\n  handlerName,\n  propTypes = {},\n  config = {},\n  transformProps,\n  customNativeProps = {}\n) {\n  class Handler extends React.Component {\n    static displayName = handlerName;\n\n    static propTypes = propTypes;\n\n    constructor(props) {\n      super(props);\n      this._handlerTag = handlerTag++;\n      this._config = {};\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this._handlerTag;\n      }\n    }\n\n    _onGestureHandlerEvent = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onGestureEvent && this.props.onGestureEvent(event);\n      } else {\n        this.props.onGestureHandlerEvent &&\n          this.props.onGestureHandlerEvent(event);\n      }\n    };\n\n    _onGestureHandlerStateChange = event => {\n      if (event.nativeEvent.handlerTag === this._handlerTag) {\n        this.props.onHandlerStateChange &&\n          this.props.onHandlerStateChange(event);\n\n        const stateEventName = stateToPropMappings[event.nativeEvent.state];\n        if (typeof this.props[stateEventName] === 'function') {\n          this.props[stateEventName](event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange &&\n          this.props.onGestureHandlerStateChange(event);\n      }\n    };\n\n    _refHandler = node => {\n      this._viewNode = node;\n\n      const child = React.Children.only(this.props.children);\n      const { ref } = child;\n      if (ref !== null) {\n        if (typeof ref === 'function') {\n          ref(node);\n        } else {\n          ref.current = node;\n        }\n      }\n    };\n\n    _createGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.createGestureHandler(\n        handlerName,\n        this._handlerTag,\n        newConfig\n      );\n    };\n\n    _attachGestureHandler = newViewTag => {\n      this._viewTag = newViewTag;\n\n      RNGestureHandlerModule.attachGestureHandler(this._handlerTag, newViewTag);\n    };\n\n    _updateGestureHandler = newConfig => {\n      this._config = newConfig;\n\n      RNGestureHandlerModule.updateGestureHandler(this._handlerTag, newConfig);\n    };\n\n    componentWillUnmount() {\n      RNGestureHandlerModule.dropGestureHandler(this._handlerTag);\n      if (this._updateEnqueued) {\n        clearImmediate(this._updateEnqueued);\n      }\n      if (this.props.id) {\n        delete handlerIDToTag[this.props.id];\n      }\n    }\n\n    componentDidMount() {\n      if (hasUnresolvedRefs(this.props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // setImmediate. This makes it so _update function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        this._updateEnqueued = setImmediate(() => {\n          this._updateEnqueued = null;\n          this._update();\n        });\n      }\n\n      this._createGestureHandler(\n        filterConfig(\n          transformProps ? transformProps(this.props) : this.props,\n          { ...this.constructor.propTypes, ...customNativeProps },\n          config\n        )\n      );\n      this._attachGestureHandler(findNodeHandle(this._viewNode));\n    }\n\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this._viewNode);\n      if (this._viewTag !== viewTag) {\n        this._attachGestureHandler(viewTag);\n      }\n      this._update();\n    }\n\n    _update() {\n      const newConfig = filterConfig(\n        transformProps ? transformProps(this.props) : this.props,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      if (!deepEqual(this._config, newConfig)) {\n        this._updateGestureHandler(newConfig);\n      }\n    }\n\n    setNativeProps(updates) {\n      const mergedProps = { ...this.props, ...updates };\n      const newConfig = filterConfig(\n        transformProps ? transformProps(mergedProps) : mergedProps,\n        { ...this.constructor.propTypes, ...customNativeProps },\n        config\n      );\n      this._updateGestureHandler(newConfig);\n    }\n\n    render() {\n      let gestureEventHandler = this._onGestureHandlerEvent;\n      const { onGestureEvent, onGestureHandlerEvent } = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureEventHandler = this.props.onGestureEvent;\n      } else {\n        if (\n          onGestureHandlerEvent &&\n          typeof onGestureHandlerEvent !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      let gestureStateEventHandler = this._onGestureHandlerStateChange;\n      const { onHandlerStateChange, onGestureHandlerStateChange } = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n        gestureStateEventHandler = this.props.onHandlerStateChange;\n      } else {\n        if (\n          onGestureHandlerStateChange &&\n          typeof onGestureHandlerStateChange !== 'function'\n        ) {\n          throw new Error(\n            'Nesting touch handlers with native animated driver is not supported yet'\n          );\n        }\n      }\n\n      const child = React.Children.only(this.props.children);\n      let grandChildren = child.props.children;\n      if (\n        Touchable.TOUCH_TARGET_DEBUG &&\n        child.type &&\n        (child.type === 'RNGestureHandlerButton' ||\n          child.type.name === 'View' ||\n          child.type.displayName === 'View')\n      ) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(\n          Touchable.renderDebugView({\n            color: 'mediumspringgreen',\n            hitSlop: child.props.hitSlop,\n          })\n        );\n      }\n      return React.cloneElement(\n        child,\n        {\n          ref: this._refHandler,\n          collapsable: false,\n          onGestureHandlerEvent: gestureEventHandler,\n          onGestureHandlerStateChange: gestureStateEventHandler,\n        },\n        grandChildren\n      );\n    }\n  }\n  return Handler;\n}\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","/*! Hammer.JS - v2.0.17-rc - 2019-12-16\n * http://naver.github.io/egjs\n *\n * Forked By Naver egjs\n * Copyright (c) hammerjs\n * Licensed under the MIT license */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\n\nif (typeof Object.assign !== 'function') {\n  assign = function assign(target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey];\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n} else {\n  assign = Object.assign;\n}\n\nvar assign$1 = assign;\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = typeof document === \"undefined\" ? {\n  style: {}\n} : document.createElement('div');\nvar TYPE_FUNCTION = 'function';\nvar round = Math.round,\n    abs = Math.abs;\nvar now = Date.now;\n\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\n\nfunction prefixed(obj, property) {\n  var prefix;\n  var prop;\n  var camelProp = property[0].toUpperCase() + property.slice(1);\n  var i = 0;\n\n  while (i < VENDOR_PREFIXES.length) {\n    prefix = VENDOR_PREFIXES[i];\n    prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n\n    i++;\n  }\n\n  return undefined;\n}\n\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win;\n\nif (typeof window === \"undefined\") {\n  // window is undefined in node.js\n  win = {};\n} else {\n  win = window;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\nfunction getTouchActionProps() {\n  if (!NATIVE_TOUCH_ACTION) {\n    return false;\n  }\n\n  var touchMap = {};\n  var cssSupports = win.CSS && win.CSS.supports;\n  ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n    // If css.supports is not supported but there is native touch-action assume it supports\n    // all values. This is the case for IE 10 and 11.\n    return touchMap[val] = cssSupports ? win.CSS.supports('touch-action', val) : true;\n  });\n  return touchMap;\n}\n\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\nvar SUPPORT_TOUCH = 'ontouchstart' in win;\nvar SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\nvar COMPUTE_INTERVAL = 25;\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * @private\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n  var i;\n\n  if (!obj) {\n    return;\n  }\n\n  if (obj.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length !== undefined) {\n    i = 0;\n\n    while (i < obj.length) {\n      iterator.call(context, obj[i], i, obj);\n      i++;\n    }\n  } else {\n    for (i in obj) {\n      obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n    }\n  }\n}\n\n/**\n * @private\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\n\nfunction boolOrFn(val, args) {\n  if (typeof val === TYPE_FUNCTION) {\n    return val.apply(args ? args[0] || undefined : undefined, args);\n  }\n\n  return val;\n}\n\n/**\n * @private\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n  return str.indexOf(find) > -1;\n}\n\n/**\n * @private\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\n\nfunction cleanTouchActions(actions) {\n  // none\n  if (inStr(actions, TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n  var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  } // pan-x OR pan-y\n\n\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  } // manipulation\n\n\n  if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n\n  return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\n\nvar TouchAction =\n/*#__PURE__*/\nfunction () {\n  function TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n  }\n  /**\n   * @private\n   * set the touchAction value on the element or enable the polyfill\n   * @param {String} value\n   */\n\n\n  var _proto = TouchAction.prototype;\n\n  _proto.set = function set(value) {\n    // find out the touch-action by the event handlers\n    if (value === TOUCH_ACTION_COMPUTE) {\n      value = this.compute();\n    }\n\n    if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n      this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n    }\n\n    this.actions = value.toLowerCase().trim();\n  };\n  /**\n   * @private\n   * just re-set the touchAction value\n   */\n\n\n  _proto.update = function update() {\n    this.set(this.manager.options.touchAction);\n  };\n  /**\n   * @private\n   * compute the value for the touchAction property based on the recognizer's settings\n   * @returns {String} value\n   */\n\n\n  _proto.compute = function compute() {\n    var actions = [];\n    each(this.manager.recognizers, function (recognizer) {\n      if (boolOrFn(recognizer.options.enable, [recognizer])) {\n        actions = actions.concat(recognizer.getTouchAction());\n      }\n    });\n    return cleanTouchActions(actions.join(' '));\n  };\n  /**\n   * @private\n   * this method is called on each input cycle and provides the preventing of the browser behavior\n   * @param {Object} input\n   */\n\n\n  _proto.preventDefaults = function preventDefaults(input) {\n    var srcEvent = input.srcEvent;\n    var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n    if (this.manager.session.prevented) {\n      srcEvent.preventDefault();\n      return;\n    }\n\n    var actions = this.actions;\n    var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n    if (hasNone) {\n      // do not prevent defaults if this is a tap gesture\n      var isTapPointer = input.pointers.length === 1;\n      var isTapMovement = input.distance < 2;\n      var isTapTouchTime = input.deltaTime < 250;\n\n      if (isTapPointer && isTapMovement && isTapTouchTime) {\n        return;\n      }\n    }\n\n    if (hasPanX && hasPanY) {\n      // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n      return;\n    }\n\n    if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n      return this.preventSrc(srcEvent);\n    }\n  };\n  /**\n   * @private\n   * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n   * @param {Object} srcEvent\n   */\n\n\n  _proto.preventSrc = function preventSrc(srcEvent) {\n    this.manager.session.prevented = true;\n    srcEvent.preventDefault();\n  };\n\n  return TouchAction;\n}();\n\n/**\n * @private\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n  while (node) {\n    if (node === parent) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * @private\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\n\nfunction getCenter(pointers) {\n  var pointersLength = pointers.length; // no need to loop when only one touch\n\n  if (pointersLength === 1) {\n    return {\n      x: round(pointers[0].clientX),\n      y: round(pointers[0].clientY)\n    };\n  }\n\n  var x = 0;\n  var y = 0;\n  var i = 0;\n\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: round(x / pointersLength),\n    y: round(y / pointersLength)\n  };\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\n\nfunction simpleCloneInputData(input) {\n  // make a simple copy of the pointers because we will get a reference if we don't\n  // we only need clientXY for the calculations\n  var pointers = [];\n  var i = 0;\n\n  while (i < input.pointers.length) {\n    pointers[i] = {\n      clientX: round(input.pointers[i].clientX),\n      clientY: round(input.pointers[i].clientY)\n    };\n    i++;\n  }\n\n  return {\n    timeStamp: now(),\n    pointers: pointers,\n    center: getCenter(pointers),\n    deltaX: input.deltaX,\n    deltaY: input.deltaY\n  };\n}\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\n\nfunction getDistance(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\n\nfunction getAngle(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * @private\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\n\nfunction getDirection(x, y) {\n  if (x === y) {\n    return DIRECTION_NONE;\n  }\n\n  if (abs(x) >= abs(y)) {\n    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n\n  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\nfunction computeDeltaXY(session, input) {\n  var center = input.center; // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n  // jscs throwing error on defalut destructured values and without defaults tests fail\n\n  var offset = session.offsetDelta || {};\n  var prevDelta = session.prevDelta || {};\n  var prevInput = session.prevInput || {};\n\n  if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n    prevDelta = session.prevDelta = {\n      x: prevInput.deltaX || 0,\n      y: prevInput.deltaY || 0\n    };\n    offset = session.offsetDelta = {\n      x: center.x,\n      y: center.y\n    };\n  }\n\n  input.deltaX = prevDelta.x + (center.x - offset.x);\n  input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n  return {\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n  };\n}\n\n/**\n * @private\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\n\nfunction getScale(start, end) {\n  return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\n\nfunction getRotation(start, end) {\n  return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\n\nfunction computeIntervalInputData(session, input) {\n  var last = session.lastInterval || input;\n  var deltaTime = input.timeStamp - last.timeStamp;\n  var velocity;\n  var velocityX;\n  var velocityY;\n  var direction;\n\n  if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n    var deltaX = input.deltaX - last.deltaX;\n    var deltaY = input.deltaY - last.deltaY;\n    var v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n\n/**\n* @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\n\nfunction computeInputData(manager, input) {\n  var session = manager.session;\n  var pointers = input.pointers;\n  var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n  if (!session.firstInput) {\n    session.firstInput = simpleCloneInputData(input);\n  } // to compute scale and rotation we need to store the multiple touches\n\n\n  if (pointersLength > 1 && !session.firstMultiple) {\n    session.firstMultiple = simpleCloneInputData(input);\n  } else if (pointersLength === 1) {\n    session.firstMultiple = false;\n  }\n\n  var firstInput = session.firstInput,\n      firstMultiple = session.firstMultiple;\n  var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n  var center = input.center = getCenter(pointers);\n  input.timeStamp = now();\n  input.deltaTime = input.timeStamp - firstInput.timeStamp;\n  input.angle = getAngle(offsetCenter, center);\n  input.distance = getDistance(offsetCenter, center);\n  computeDeltaXY(session, input);\n  input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n  var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n  input.overallVelocityX = overallVelocity.x;\n  input.overallVelocityY = overallVelocity.y;\n  input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n  input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n  input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n  input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n  computeIntervalInputData(session, input); // find the correct target\n\n  var target = manager.element;\n  var srcEvent = input.srcEvent;\n  var srcEventTarget;\n\n  if (srcEvent.composedPath) {\n    srcEventTarget = srcEvent.composedPath()[0];\n  } else if (srcEvent.path) {\n    srcEventTarget = srcEvent.path[0];\n  } else {\n    srcEventTarget = srcEvent.target;\n  }\n\n  if (hasParent(srcEventTarget, target)) {\n    target = srcEventTarget;\n  }\n\n  input.target = target;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\n\nfunction inputHandler(manager, eventType, input) {\n  var pointersLen = input.pointers.length;\n  var changedPointersLen = input.changedPointers.length;\n  var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n  var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n  input.isFirst = !!isFirst;\n  input.isFinal = !!isFinal;\n\n  if (isFirst) {\n    manager.session = {};\n  } // source event is the normalized value of the domEvents\n  // like 'touchstart, mouseup, pointerdown'\n\n\n  input.eventType = eventType; // compute scale, rotation etc\n\n  computeInputData(manager, input); // emit secret event\n\n  manager.emit('hammer.input', input);\n  manager.recognize(input);\n  manager.session.prevInput = input;\n}\n\n/**\n * @private\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n  return str.trim().split(/\\s+/g);\n}\n\n/**\n * @private\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction addEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.addEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction removeEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.removeEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n  var doc = element.ownerDocument || element;\n  return doc.defaultView || doc.parentWindow || window;\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\n\nvar Input =\n/*#__PURE__*/\nfunction () {\n  function Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n  /**\n   * @private\n   * should handle the inputEvent data and trigger the callback\n   * @virtual\n   */\n\n\n  var _proto = Input.prototype;\n\n  _proto.handler = function handler() {};\n  /**\n   * @private\n   * bind the events\n   */\n\n\n  _proto.init = function init() {\n    this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n  /**\n   * @private\n   * unbind the events\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n\n  return Input;\n}();\n\n/**\n * @private\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n  if (src.indexOf && !findByKey) {\n    return src.indexOf(find);\n  } else {\n    var i = 0;\n\n    while (i < src.length) {\n      if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n        // do not use === here, test fails\n        return i;\n      }\n\n      i++;\n    }\n\n    return -1;\n  }\n}\n\nvar POINTER_INPUT_MAP = {\n  pointerdown: INPUT_START,\n  pointermove: INPUT_MOVE,\n  pointerup: INPUT_END,\n  pointercancel: INPUT_CANCEL,\n  pointerout: INPUT_CANCEL\n}; // in IE10 the pointer types is defined as an enum\n\nvar IE10_POINTER_TYPE_ENUM = {\n  2: INPUT_TYPE_TOUCH,\n  3: INPUT_TYPE_PEN,\n  4: INPUT_TYPE_MOUSE,\n  5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n};\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\nif (win.MSPointerEvent && !win.PointerEvent) {\n  POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n  POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\n\n\nvar PointerEventInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(PointerEventInput, _Input);\n\n  function PointerEventInput() {\n    var _this;\n\n    var proto = PointerEventInput.prototype;\n    proto.evEl = POINTER_ELEMENT_EVENTS;\n    proto.evWin = POINTER_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.store = _this.manager.session.pointerEvents = [];\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = PointerEventInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var store = this.store;\n    var removePointer = false;\n    var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n    var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n    var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n    var isTouch = pointerType === INPUT_TYPE_TOUCH; // get index of the event in the store\n\n    var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n    if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n      if (storeIndex < 0) {\n        store.push(ev);\n        storeIndex = store.length - 1;\n      }\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      removePointer = true;\n    } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n    if (storeIndex < 0) {\n      return;\n    } // update the event in the store\n\n\n    store[storeIndex] = ev;\n    this.callback(this.manager, eventType, {\n      pointers: store,\n      changedPointers: [ev],\n      pointerType: pointerType,\n      srcEvent: ev\n    });\n\n    if (removePointer) {\n      // remove from the store\n      store.splice(storeIndex, 1);\n    }\n  };\n\n  return PointerEventInput;\n}(Input);\n\n/**\n * @private\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n  return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * @private\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\n\nfunction uniqueArray(src, key, sort) {\n  var results = [];\n  var values = [];\n  var i = 0;\n\n  while (i < src.length) {\n    var val = key ? src[i][key] : src[i];\n\n    if (inArray(values, val) < 0) {\n      results.push(src[i]);\n    }\n\n    values[i] = val;\n    i++;\n  }\n\n  if (sort) {\n    if (!key) {\n      results = results.sort();\n    } else {\n      results = results.sort(function (a, b) {\n        return a[key] > b[key];\n      });\n    }\n  }\n\n  return results;\n}\n\nvar TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\n\nvar TouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(TouchInput, _Input);\n\n  function TouchInput() {\n    var _this;\n\n    TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.targetIds = {}; // this.evTarget = TOUCH_TARGET_EVENTS;\n\n    return _this;\n  }\n\n  var _proto = TouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = TOUCH_INPUT_MAP[ev.type];\n    var touches = getTouches.call(this, ev, type);\n\n    if (!touches) {\n      return;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return TouchInput;\n}(Input);\n\nfunction getTouches(ev, type) {\n  var allTouches = toArray(ev.touches);\n  var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n  if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n    targetIds[allTouches[0].identifier] = true;\n    return [allTouches, allTouches];\n  }\n\n  var i;\n  var targetTouches;\n  var changedTouches = toArray(ev.changedTouches);\n  var changedTargetTouches = [];\n  var target = this.target; // get target touches from touches\n\n  targetTouches = allTouches.filter(function (touch) {\n    return hasParent(touch.target, target);\n  }); // collect touches\n\n  if (type === INPUT_START) {\n    i = 0;\n\n    while (i < targetTouches.length) {\n      targetIds[targetTouches[i].identifier] = true;\n      i++;\n    }\n  } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n  i = 0;\n\n  while (i < changedTouches.length) {\n    if (targetIds[changedTouches[i].identifier]) {\n      changedTargetTouches.push(changedTouches[i]);\n    } // cleanup removed touches\n\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      delete targetIds[changedTouches[i].identifier];\n    }\n\n    i++;\n  }\n\n  if (!changedTargetTouches.length) {\n    return;\n  }\n\n  return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n  uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n}\n\nvar MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\n\nvar MouseInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(MouseInput, _Input);\n\n  function MouseInput() {\n    var _this;\n\n    var proto = MouseInput.prototype;\n    proto.evEl = MOUSE_ELEMENT_EVENTS;\n    proto.evWin = MOUSE_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.pressed = false; // mousedown state\n\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = MouseInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n    if (eventType & INPUT_START && ev.button === 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which !== 1) {\n      eventType = INPUT_END;\n    } // mouse must be down\n\n\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: INPUT_TYPE_MOUSE,\n      srcEvent: ev\n    });\n  };\n\n  return MouseInput;\n}(Input);\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction setLastTouch(eventData) {\n  var _eventData$changedPoi = eventData.changedPointers,\n      touch = _eventData$changedPoi[0];\n\n  if (touch.identifier === this.primaryTouch) {\n    var lastTouch = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    var lts = this.lastTouches;\n    this.lastTouches.push(lastTouch);\n\n    var removeLastTouch = function removeLastTouch() {\n      var i = lts.indexOf(lastTouch);\n\n      if (i > -1) {\n        lts.splice(i, 1);\n      }\n    };\n\n    setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n  }\n}\n\nfunction recordTouches(eventType, eventData) {\n  if (eventType & INPUT_START) {\n    this.primaryTouch = eventData.changedPointers[0].identifier;\n    setLastTouch.call(this, eventData);\n  } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n    setLastTouch.call(this, eventData);\n  }\n}\n\nfunction isSyntheticEvent(eventData) {\n  var x = eventData.srcEvent.clientX;\n  var y = eventData.srcEvent.clientY;\n\n  for (var i = 0; i < this.lastTouches.length; i++) {\n    var t = this.lastTouches[i];\n    var dx = Math.abs(x - t.x);\n    var dy = Math.abs(y - t.y);\n\n    if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar TouchMouseInput =\n/*#__PURE__*/\nfunction () {\n  var TouchMouseInput =\n  /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(TouchMouseInput, _Input);\n\n    function TouchMouseInput(_manager, callback) {\n      var _this;\n\n      _this = _Input.call(this, _manager, callback) || this;\n\n      _this.handler = function (manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n        var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n          return;\n        } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n        if (isTouch) {\n          recordTouches.call(_assertThisInitialized(_assertThisInitialized(_this)), inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized(_assertThisInitialized(_this)), inputData)) {\n          return;\n        }\n\n        _this.callback(manager, inputEvent, inputData);\n      };\n\n      _this.touch = new TouchInput(_this.manager, _this.handler);\n      _this.mouse = new MouseInput(_this.manager, _this.handler);\n      _this.primaryTouch = null;\n      _this.lastTouches = [];\n      return _this;\n    }\n    /**\n     * @private\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n\n\n    var _proto = TouchMouseInput.prototype;\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n    _proto.destroy = function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    };\n\n    return TouchMouseInput;\n  }(Input);\n\n  return TouchMouseInput;\n}();\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\n\nfunction createInputInstance(manager) {\n  var Type; // let inputClass = manager.options.inputClass;\n\n  var inputClass = manager.options.inputClass;\n\n  if (inputClass) {\n    Type = inputClass;\n  } else if (SUPPORT_POINTER_EVENTS) {\n    Type = PointerEventInput;\n  } else if (SUPPORT_ONLY_TOUCH) {\n    Type = TouchInput;\n  } else if (!SUPPORT_TOUCH) {\n    Type = MouseInput;\n  } else {\n    Type = TouchMouseInput;\n  }\n\n  return new Type(manager, inputHandler);\n}\n\n/**\n * @private\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\n\nfunction invokeArrayArg(arg, fn, context) {\n  if (Array.isArray(arg)) {\n    each(arg, context[fn], context);\n    return true;\n  }\n\n  return false;\n}\n\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n  return _uniqueId++;\n}\n\n/**\n * @private\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n  var manager = recognizer.manager;\n\n  if (manager) {\n    return manager.get(otherRecognizer);\n  }\n\n  return otherRecognizer;\n}\n\n/**\n * @private\n * get a usable string, used as event postfix\n * @param {constant} state\n * @returns {String} state\n */\n\nfunction stateStr(state) {\n  if (state & STATE_CANCELLED) {\n    return 'cancel';\n  } else if (state & STATE_ENDED) {\n    return 'end';\n  } else if (state & STATE_CHANGED) {\n    return 'move';\n  } else if (state & STATE_BEGAN) {\n    return 'start';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\n\nvar Recognizer =\n/*#__PURE__*/\nfunction () {\n  function Recognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = _extends({\n      enable: true\n    }, options);\n    this.id = uniqueId();\n    this.manager = null; // default is enable true\n\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @return {Recognizer}\n   */\n\n\n  var _proto = Recognizer.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n    this.manager && this.manager.touchAction.update();\n    return this;\n  };\n  /**\n   * @private\n   * recognize simultaneous with an other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.recognizeWith = function recognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n      return this;\n    }\n\n    var simultaneous = this.simultaneous;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (!simultaneous[otherRecognizer.id]) {\n      simultaneous[otherRecognizer.id] = otherRecognizer;\n      otherRecognizer.recognizeWith(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    delete this.simultaneous[otherRecognizer.id];\n    return this;\n  };\n  /**\n   * @private\n   * recognizer can only run when an other is failing\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.requireFailure = function requireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n      return this;\n    }\n\n    var requireFail = this.requireFail;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (inArray(requireFail, otherRecognizer) === -1) {\n      requireFail.push(otherRecognizer);\n      otherRecognizer.requireFailure(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the requireFailure link. it does not remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    var index = inArray(this.requireFail, otherRecognizer);\n\n    if (index > -1) {\n      this.requireFail.splice(index, 1);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * has require failures boolean\n   * @returns {boolean}\n   */\n\n\n  _proto.hasRequireFailures = function hasRequireFailures() {\n    return this.requireFail.length > 0;\n  };\n  /**\n   * @private\n   * if the recognizer can recognize simultaneous with an other recognizer\n   * @param {Recognizer} otherRecognizer\n   * @returns {Boolean}\n   */\n\n\n  _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {\n    return !!this.simultaneous[otherRecognizer.id];\n  };\n  /**\n   * @private\n   * You should use `tryEmit` instead of `emit` directly to check\n   * that all the needed recognizers has failed before emitting.\n   * @param {Object} input\n   */\n\n\n  _proto.emit = function emit(input) {\n    var self = this;\n    var state = this.state;\n\n    function emit(event) {\n      self.manager.emit(event, input);\n    } // 'panstart' and 'panmove'\n\n\n    if (state < STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n\n    emit(self.options.event); // simple 'eventName' events\n\n    if (input.additionalEvent) {\n      // additional event(panleft, panright, pinchin, pinchout...)\n      emit(input.additionalEvent);\n    } // panend and pancancel\n\n\n    if (state >= STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n  };\n  /**\n   * @private\n   * Check that all the require failure recognizers has failed,\n   * if true, it emits a gesture event,\n   * otherwise, setup the state to FAILED.\n   * @param {Object} input\n   */\n\n\n  _proto.tryEmit = function tryEmit(input) {\n    if (this.canEmit()) {\n      return this.emit(input);\n    } // it's failing anyway\n\n\n    this.state = STATE_FAILED;\n  };\n  /**\n   * @private\n   * can we emit?\n   * @returns {boolean}\n   */\n\n\n  _proto.canEmit = function canEmit() {\n    var i = 0;\n\n    while (i < this.requireFail.length) {\n      if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * update the recognizer\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    // make a new copy of the inputData\n    // so we can change the inputData without messing up the other recognizers\n    var inputDataClone = assign$1({}, inputData); // is is enabled and allow recognizing?\n\n    if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n      this.reset();\n      this.state = STATE_FAILED;\n      return;\n    } // reset when we've reached the end\n\n\n    if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n      this.state = STATE_POSSIBLE;\n    }\n\n    this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n    // so trigger an event\n\n    if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n      this.tryEmit(inputDataClone);\n    }\n  };\n  /**\n   * @private\n   * return the state of the recognizer\n   * the actual recognizing happens in this method\n   * @virtual\n   * @param {Object} inputData\n   * @returns {constant} STATE\n   */\n\n  /* jshint ignore:start */\n\n\n  _proto.process = function process(inputData) {};\n  /* jshint ignore:end */\n\n  /**\n   * @private\n   * return the preferred touch-action\n   * @virtual\n   * @returns {Array}\n   */\n\n\n  _proto.getTouchAction = function getTouchAction() {};\n  /**\n   * @private\n   * called when the gesture isn't allowed to recognize\n   * like when another is being recognized or it is disabled\n   * @virtual\n   */\n\n\n  _proto.reset = function reset() {};\n\n  return Recognizer;\n}();\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\n\nvar TapRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(TapRecognizer, _Recognizer);\n\n  function TapRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      // max time between the multi-tap taps\n      time: 250,\n      // max time of the pointer to be down (like finger on the screen)\n      threshold: 9,\n      // a minimal movement is ok, but keep it low\n      posThreshold: 10\n    }, options)) || this; // previous time and center,\n    // used for tap counting\n\n    _this.pTime = false;\n    _this.pCenter = false;\n    _this._timer = null;\n    _this._input = null;\n    _this.count = 0;\n    return _this;\n  }\n\n  var _proto = TapRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_MANIPULATION];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTouchTime = input.deltaTime < options.time;\n    this.reset();\n\n    if (input.eventType & INPUT_START && this.count === 0) {\n      return this.failTimeout();\n    } // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n\n    if (validMovement && validTouchTime && validPointers) {\n      if (input.eventType !== INPUT_END) {\n        return this.failTimeout();\n      }\n\n      var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n      var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n      this.pTime = input.timeStamp;\n      this.pCenter = input.center;\n\n      if (!validMultiTap || !validInterval) {\n        this.count = 1;\n      } else {\n        this.count += 1;\n      }\n\n      this._input = input; // if tap count matches we have recognized it,\n      // else it has began recognizing...\n\n      var tapCount = this.count % options.taps;\n\n      if (tapCount === 0) {\n        // no failing requirements, immediately trigger the tap event\n        // or wait as long as the multitap interval to trigger\n        if (!this.hasRequireFailures()) {\n          return STATE_RECOGNIZED;\n        } else {\n          this._timer = setTimeout(function () {\n            _this2.state = STATE_RECOGNIZED;\n\n            _this2.tryEmit();\n          }, options.interval);\n          return STATE_BEGAN;\n        }\n      }\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.failTimeout = function failTimeout() {\n    var _this3 = this;\n\n    this._timer = setTimeout(function () {\n      _this3.state = STATE_FAILED;\n    }, this.options.interval);\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit() {\n    if (this.state === STATE_RECOGNIZED) {\n      this._input.tapCount = this.count;\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return TapRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\n\nvar AttrRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(AttrRecognizer, _Recognizer);\n\n  function AttrRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _Recognizer.call(this, _extends({\n      pointers: 1\n    }, options)) || this;\n  }\n  /**\n   * @private\n   * Used to check if it the recognizer receives valid input, like input.distance > 10.\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {Boolean} recognized\n   */\n\n\n  var _proto = AttrRecognizer.prototype;\n\n  _proto.attrTest = function attrTest(input) {\n    var optionPointers = this.options.pointers;\n    return optionPointers === 0 || input.pointers.length === optionPointers;\n  };\n  /**\n   * @private\n   * Process the input and return the state for the recognizer\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {*} State\n   */\n\n\n  _proto.process = function process(input) {\n    var state = this.state;\n    var eventType = input.eventType;\n    var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n    var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n    if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n      return state | STATE_CANCELLED;\n    } else if (isRecognized || isValid) {\n      if (eventType & INPUT_END) {\n        return state | STATE_ENDED;\n      } else if (!(state & STATE_BEGAN)) {\n        return STATE_BEGAN;\n      }\n\n      return state | STATE_CHANGED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  return AttrRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\n\nfunction directionStr(direction) {\n  if (direction === DIRECTION_DOWN) {\n    return 'down';\n  } else if (direction === DIRECTION_UP) {\n    return 'up';\n  } else if (direction === DIRECTION_LEFT) {\n    return 'left';\n  } else if (direction === DIRECTION_RIGHT) {\n    return 'right';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PanRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PanRecognizer, _AttrRecognizer);\n\n  function PanRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _AttrRecognizer.call(this, _extends({\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: DIRECTION_ALL\n    }, options)) || this;\n    _this.pX = null;\n    _this.pY = null;\n    return _this;\n  }\n\n  var _proto = PanRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    var direction = this.options.direction;\n    var actions = [];\n\n    if (direction & DIRECTION_HORIZONTAL) {\n      actions.push(TOUCH_ACTION_PAN_Y);\n    }\n\n    if (direction & DIRECTION_VERTICAL) {\n      actions.push(TOUCH_ACTION_PAN_X);\n    }\n\n    return actions;\n  };\n\n  _proto.directionTest = function directionTest(input) {\n    var options = this.options;\n    var hasMoved = true;\n    var distance = input.distance;\n    var direction = input.direction;\n    var x = input.deltaX;\n    var y = input.deltaY; // lock to axis?\n\n    if (!(direction & options.direction)) {\n      if (options.direction & DIRECTION_HORIZONTAL) {\n        direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        hasMoved = x !== this.pX;\n        distance = Math.abs(input.deltaX);\n      } else {\n        direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n        hasMoved = y !== this.pY;\n        distance = Math.abs(input.deltaY);\n      }\n    }\n\n    input.direction = direction;\n    return hasMoved && distance > options.threshold && direction & options.direction;\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return AttrRecognizer.prototype.attrTest.call(this, input) && ( // replace with a super call\n    this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n  };\n\n  _proto.emit = function emit(input) {\n    this.pX = input.deltaX;\n    this.pY = input.deltaY;\n    var direction = directionStr(input.direction);\n\n    if (direction) {\n      input.additionalEvent = this.options.event + direction;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PanRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar SwipeRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(SwipeRecognizer, _AttrRecognizer);\n\n  function SwipeRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'swipe',\n      threshold: 10,\n      velocity: 0.3,\n      direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n      pointers: 1\n    }, options)) || this;\n  }\n\n  var _proto = SwipeRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return PanRecognizer.prototype.getTouchAction.call(this);\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    var direction = this.options.direction;\n    var velocity;\n\n    if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n      velocity = input.overallVelocity;\n    } else if (direction & DIRECTION_HORIZONTAL) {\n      velocity = input.overallVelocityX;\n    } else if (direction & DIRECTION_VERTICAL) {\n      velocity = input.overallVelocityY;\n    }\n\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n  };\n\n  _proto.emit = function emit(input) {\n    var direction = directionStr(input.offsetDirection);\n\n    if (direction) {\n      this.manager.emit(this.options.event + direction, input);\n    }\n\n    this.manager.emit(this.options.event, input);\n  };\n\n  return SwipeRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PinchRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PinchRecognizer, _AttrRecognizer);\n\n  function PinchRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = PinchRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  _proto.emit = function emit(input) {\n    if (input.scale !== 1) {\n      var inOut = input.scale < 1 ? 'in' : 'out';\n      input.additionalEvent = this.options.event + inOut;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PinchRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar RotateRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(RotateRecognizer, _AttrRecognizer);\n\n  function RotateRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = RotateRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  return RotateRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\n\nvar PressRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(PressRecognizer, _Recognizer);\n\n  function PressRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      // minimal time of the pointer to be pressed\n      threshold: 9\n    }, options)) || this;\n    _this._timer = null;\n    _this._input = null;\n    return _this;\n  }\n\n  var _proto = PressRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_AUTO];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTime = input.deltaTime > options.time;\n    this._input = input; // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n    if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n      this.reset();\n    } else if (input.eventType & INPUT_START) {\n      this.reset();\n      this._timer = setTimeout(function () {\n        _this2.state = STATE_RECOGNIZED;\n\n        _this2.tryEmit();\n      }, options.time);\n    } else if (input.eventType & INPUT_END) {\n      return STATE_RECOGNIZED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit(input) {\n    if (this.state !== STATE_RECOGNIZED) {\n      return;\n    }\n\n    if (input && input.eventType & INPUT_END) {\n      this.manager.emit(this.options.event + \"up\", input);\n    } else {\n      this._input.timeStamp = now();\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return PressRecognizer;\n}(Recognizer);\n\nvar defaults = {\n  /**\n   * @private\n   * set if DOM events are being triggered.\n   * But this is slower and unused by simple implementations, so disabled by default.\n   * @type {Boolean}\n   * @default false\n   */\n  domEvents: false,\n\n  /**\n   * @private\n   * The value for the touchAction property/fallback.\n   * When set to `compute` it will magically set the correct value based on the added recognizers.\n   * @type {String}\n   * @default compute\n   */\n  touchAction: TOUCH_ACTION_COMPUTE,\n\n  /**\n   * @private\n   * @type {Boolean}\n   * @default true\n   */\n  enable: true,\n\n  /**\n   * @private\n   * EXPERIMENTAL FEATURE -- can be removed/changed\n   * Change the parent input target element.\n   * If Null, then it is being set the to main element.\n   * @type {Null|EventTarget}\n   * @default null\n   */\n  inputTarget: null,\n\n  /**\n   * @private\n   * force an input class\n   * @type {Null|Function}\n   * @default null\n   */\n  inputClass: null,\n\n  /**\n   * @private\n   * Some CSS properties can be used to improve the working of Hammer.\n   * Add them to this method and they will be set when creating a new Manager.\n   * @namespace\n   */\n  cssProps: {\n    /**\n     * @private\n     * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userSelect: \"none\",\n\n    /**\n     * @private\n     * Disable the Windows Phone grippers when pressing an element.\n     * @type {String}\n     * @default 'none'\n     */\n    touchSelect: \"none\",\n\n    /**\n     * @private\n     * Disables the default callout shown when you touch and hold a touch target.\n     * On iOS, when you touch and hold a touch target such as a link, Safari displays\n     * a callout containing information about the link. This property allows you to disable that callout.\n     * @type {String}\n     * @default 'none'\n     */\n    touchCallout: \"none\",\n\n    /**\n     * @private\n     * Specifies whether zooming is enabled. Used by IE10>\n     * @type {String}\n     * @default 'none'\n     */\n    contentZooming: \"none\",\n\n    /**\n     * @private\n     * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userDrag: \"none\",\n\n    /**\n     * @private\n     * Overrides the highlight color shown when the user taps a link or a JavaScript\n     * clickable element in iOS. This property obeys the alpha value, if specified.\n     * @type {String}\n     * @default 'rgba(0,0,0,0)'\n     */\n    tapHighlightColor: \"rgba(0,0,0,0)\"\n  }\n};\n/**\n * @private\n * Default recognizer setup when calling `Hammer()`\n * When creating a new Manager these will be skipped.\n * This is separated with other defaults because of tree-shaking.\n * @type {Array}\n */\n\nvar preset = [[RotateRecognizer, {\n  enable: false\n}], [PinchRecognizer, {\n  enable: false\n}, ['rotate']], [SwipeRecognizer, {\n  direction: DIRECTION_HORIZONTAL\n}], [PanRecognizer, {\n  direction: DIRECTION_HORIZONTAL\n}, ['swipe']], [TapRecognizer], [TapRecognizer, {\n  event: 'doubletap',\n  taps: 2\n}, ['tap']], [PressRecognizer]];\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n/**\n * @private\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\n\nfunction toggleCssProps(manager, add) {\n  var element = manager.element;\n\n  if (!element.style) {\n    return;\n  }\n\n  var prop;\n  each(manager.options.cssProps, function (value, name) {\n    prop = prefixed(element.style, name);\n\n    if (add) {\n      manager.oldCssProps[prop] = element.style[prop];\n      element.style[prop] = value;\n    } else {\n      element.style[prop] = manager.oldCssProps[prop] || \"\";\n    }\n  });\n\n  if (!add) {\n    manager.oldCssProps = {};\n  }\n}\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\n\n\nfunction triggerDomEvent(event, data) {\n  var gestureEvent = document.createEvent(\"Event\");\n  gestureEvent.initEvent(event, true, true);\n  gestureEvent.gesture = data;\n  data.target.dispatchEvent(gestureEvent);\n}\n/**\n* @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\n\nvar Manager =\n/*#__PURE__*/\nfunction () {\n  function Manager(element, options) {\n    var _this = this;\n\n    this.options = assign$1({}, defaults, options || {});\n    this.options.inputTarget = this.options.inputTarget || element;\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n    toggleCssProps(this, true);\n    each(this.options.recognizers, function (item) {\n      var recognizer = _this.add(new item[0](item[1]));\n\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @returns {Manager}\n   */\n\n\n  var _proto = Manager.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // Options that need a little more setup\n\n    if (options.touchAction) {\n      this.touchAction.update();\n    }\n\n    if (options.inputTarget) {\n      // Clean up existing event listeners and reinitialize\n      this.input.destroy();\n      this.input.target = options.inputTarget;\n      this.input.init();\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * stop recognizing for this session.\n   * This session will be discarded, when a new [input]start event is fired.\n   * When forced, the recognizer cycle is stopped immediately.\n   * @param {Boolean} [force]\n   */\n\n\n  _proto.stop = function stop(force) {\n    this.session.stopped = force ? FORCED_STOP : STOP;\n  };\n  /**\n   * @private\n   * run the recognizers!\n   * called by the inputHandler function on every movement of the pointers (touches)\n   * it walks through all the recognizers and tries to detect the gesture that is being made\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    var session = this.session;\n\n    if (session.stopped) {\n      return;\n    } // run the touch-action polyfill\n\n\n    this.touchAction.preventDefaults(inputData);\n    var recognizer;\n    var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n    // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n    // if no recognizer is detecting a thing, it is set to `null`\n\n    var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n    // or when we're in a new session\n\n    if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n      session.curRecognizer = null;\n      curRecognizer = null;\n    }\n\n    var i = 0;\n\n    while (i < recognizers.length) {\n      recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n      // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n      // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n      //      that is being recognized.\n      // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n      //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n      if (session.stopped !== FORCED_STOP && ( // 1\n      !curRecognizer || recognizer === curRecognizer || // 2\n      recognizer.canRecognizeWith(curRecognizer))) {\n        // 3\n        recognizer.recognize(inputData);\n      } else {\n        recognizer.reset();\n      } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n      // current active recognizer. but only if we don't already have an active recognizer\n\n\n      if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n        session.curRecognizer = recognizer;\n        curRecognizer = recognizer;\n      }\n\n      i++;\n    }\n  };\n  /**\n   * @private\n   * get a recognizer by its event name.\n   * @param {Recognizer|String} recognizer\n   * @returns {Recognizer|Null}\n   */\n\n\n  _proto.get = function get(recognizer) {\n    if (recognizer instanceof Recognizer) {\n      return recognizer;\n    }\n\n    var recognizers = this.recognizers;\n\n    for (var i = 0; i < recognizers.length; i++) {\n      if (recognizers[i].options.event === recognizer) {\n        return recognizers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @private add a recognizer to the manager\n   * existing recognizers with the same event name will be removed\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer|Manager}\n   */\n\n\n  _proto.add = function add(recognizer) {\n    if (invokeArrayArg(recognizer, \"add\", this)) {\n      return this;\n    } // remove existing\n\n\n    var existing = this.get(recognizer.options.event);\n\n    if (existing) {\n      this.remove(existing);\n    }\n\n    this.recognizers.push(recognizer);\n    recognizer.manager = this;\n    this.touchAction.update();\n    return recognizer;\n  };\n  /**\n   * @private\n   * remove a recognizer by name or instance\n   * @param {Recognizer|String} recognizer\n   * @returns {Manager}\n   */\n\n\n  _proto.remove = function remove(recognizer) {\n    if (invokeArrayArg(recognizer, \"remove\", this)) {\n      return this;\n    }\n\n    var targetRecognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n    if (recognizer) {\n      var recognizers = this.recognizers;\n      var index = inArray(recognizers, targetRecognizer);\n\n      if (index !== -1) {\n        recognizers.splice(index, 1);\n        this.touchAction.update();\n      }\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * bind event\n   * @param {String} events\n   * @param {Function} handler\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.on = function on(events, handler) {\n    if (events === undefined || handler === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    });\n    return this;\n  };\n  /**\n   * @private unbind event, leave emit blank to remove all handlers\n   * @param {String} events\n   * @param {Function} [handler]\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.off = function off(events, handler) {\n    if (events === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      if (!handler) {\n        delete handlers[event];\n      } else {\n        handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n      }\n    });\n    return this;\n  };\n  /**\n   * @private emit event to the listeners\n   * @param {String} event\n   * @param {Object} data\n   */\n\n\n  _proto.emit = function emit(event, data) {\n    // we also want to trigger dom events\n    if (this.options.domEvents) {\n      triggerDomEvent(event, data);\n    } // no handlers, so skip it all\n\n\n    var handlers = this.handlers[event] && this.handlers[event].slice();\n\n    if (!handlers || !handlers.length) {\n      return;\n    }\n\n    data.type = event;\n\n    data.preventDefault = function () {\n      data.srcEvent.preventDefault();\n    };\n\n    var i = 0;\n\n    while (i < handlers.length) {\n      handlers[i](data);\n      i++;\n    }\n  };\n  /**\n   * @private\n   * destroy the manager and unbinds all events\n   * it doesn't unbind dom events, that is the user own responsibility\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.element && toggleCssProps(this, false);\n    this.handlers = {};\n    this.session = {};\n    this.input.destroy();\n    this.element = null;\n  };\n\n  return Manager;\n}();\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Touch events input\n * @constructor\n * @extends Input\n */\n\nvar SingleTouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(SingleTouchInput, _Input);\n\n  function SingleTouchInput() {\n    var _this;\n\n    var proto = SingleTouchInput.prototype;\n    proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.started = false;\n    return _this;\n  }\n\n  var _proto = SingleTouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n    if (type === INPUT_START) {\n      this.started = true;\n    }\n\n    if (!this.started) {\n      return;\n    }\n\n    var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n    if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n      this.started = false;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return SingleTouchInput;\n}(Input);\n\nfunction normalizeSingleTouches(ev, type) {\n  var all = toArray(ev.touches);\n  var changed = toArray(ev.changedTouches);\n\n  if (type & (INPUT_END | INPUT_CANCEL)) {\n    all = uniqueArray(all.concat(changed), 'identifier', true);\n  }\n\n  return [all, changed];\n}\n\n/**\n * @private\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n  var deprecationMessage = \"DEPRECATED METHOD: \" + name + \"\\n\" + message + \" AT \\n\";\n  return function () {\n    var e = new Error('get-stack-trace');\n    var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n    var log = window.console && (window.console.warn || window.console.log);\n\n    if (log) {\n      log.call(window.console, deprecationMessage, stack);\n    }\n\n    return method.apply(this, arguments);\n  };\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\n\nvar extend = deprecate(function (dest, src, merge) {\n  var keys = Object.keys(src);\n  var i = 0;\n\n  while (i < keys.length) {\n    if (!merge || merge && dest[keys[i]] === undefined) {\n      dest[keys[i]] = src[keys[i]];\n    }\n\n    i++;\n  }\n\n  return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * @private\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\n\nvar merge = deprecate(function (dest, src) {\n  return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * @private\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\n\nfunction inherit(child, base, properties) {\n  var baseP = base.prototype;\n  var childP;\n  childP = child.prototype = Object.create(baseP);\n  childP.constructor = child;\n  childP._super = baseP;\n\n  if (properties) {\n    assign$1(childP, properties);\n  }\n}\n\n/**\n * @private\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n  return function boundFn() {\n    return fn.apply(context, arguments);\n  };\n}\n\n/**\n * @private\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\nvar Hammer =\n/*#__PURE__*/\nfunction () {\n  var Hammer =\n  /**\n    * @private\n    * @const {string}\n    */\n  function Hammer(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Manager(element, _extends({\n      recognizers: preset.concat()\n    }, options));\n  };\n\n  Hammer.VERSION = \"2.0.17-rc\";\n  Hammer.DIRECTION_ALL = DIRECTION_ALL;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.DIRECTION_LEFT = DIRECTION_LEFT;\n  Hammer.DIRECTION_RIGHT = DIRECTION_RIGHT;\n  Hammer.DIRECTION_UP = DIRECTION_UP;\n  Hammer.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n  Hammer.DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n  Hammer.DIRECTION_NONE = DIRECTION_NONE;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.INPUT_START = INPUT_START;\n  Hammer.INPUT_MOVE = INPUT_MOVE;\n  Hammer.INPUT_END = INPUT_END;\n  Hammer.INPUT_CANCEL = INPUT_CANCEL;\n  Hammer.STATE_POSSIBLE = STATE_POSSIBLE;\n  Hammer.STATE_BEGAN = STATE_BEGAN;\n  Hammer.STATE_CHANGED = STATE_CHANGED;\n  Hammer.STATE_ENDED = STATE_ENDED;\n  Hammer.STATE_RECOGNIZED = STATE_RECOGNIZED;\n  Hammer.STATE_CANCELLED = STATE_CANCELLED;\n  Hammer.STATE_FAILED = STATE_FAILED;\n  Hammer.Manager = Manager;\n  Hammer.Input = Input;\n  Hammer.TouchAction = TouchAction;\n  Hammer.TouchInput = TouchInput;\n  Hammer.MouseInput = MouseInput;\n  Hammer.PointerEventInput = PointerEventInput;\n  Hammer.TouchMouseInput = TouchMouseInput;\n  Hammer.SingleTouchInput = SingleTouchInput;\n  Hammer.Recognizer = Recognizer;\n  Hammer.AttrRecognizer = AttrRecognizer;\n  Hammer.Tap = TapRecognizer;\n  Hammer.Pan = PanRecognizer;\n  Hammer.Swipe = SwipeRecognizer;\n  Hammer.Pinch = PinchRecognizer;\n  Hammer.Rotate = RotateRecognizer;\n  Hammer.Press = PressRecognizer;\n  Hammer.on = addEventListeners;\n  Hammer.off = removeEventListeners;\n  Hammer.each = each;\n  Hammer.merge = merge;\n  Hammer.extend = extend;\n  Hammer.bindFn = bindFn;\n  Hammer.assign = assign$1;\n  Hammer.inherit = inherit;\n  Hammer.bindFn = bindFn;\n  Hammer.prefixed = prefixed;\n  Hammer.toArray = toArray;\n  Hammer.inArray = inArray;\n  Hammer.uniqueArray = uniqueArray;\n  Hammer.splitStr = splitStr;\n  Hammer.boolOrFn = boolOrFn;\n  Hammer.hasParent = hasParent;\n  Hammer.addEventListeners = addEventListeners;\n  Hammer.removeEventListeners = removeEventListeners;\n  Hammer.defaults = assign$1({}, defaults, {\n    preset: preset\n  });\n  return Hammer;\n}();\n\n//  style loader but by script tag, not by the loader.\n\nvar defaults$1 = Hammer.defaults;\n\nexport default Hammer;\nexport { INPUT_START, INPUT_MOVE, INPUT_END, INPUT_CANCEL, STATE_POSSIBLE, STATE_BEGAN, STATE_CHANGED, STATE_ENDED, STATE_RECOGNIZED, STATE_CANCELLED, STATE_FAILED, DIRECTION_NONE, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, DIRECTION_DOWN, DIRECTION_HORIZONTAL, DIRECTION_VERTICAL, DIRECTION_ALL, Manager, Input, TouchAction, TouchInput, MouseInput, PointerEventInput, TouchMouseInput, SingleTouchInput, Recognizer, AttrRecognizer, TapRecognizer as Tap, PanRecognizer as Pan, SwipeRecognizer as Swipe, PinchRecognizer as Pinch, RotateRecognizer as Rotate, PressRecognizer as Press, addEventListeners as on, removeEventListeners as off, each, merge, extend, assign$1 as assign, inherit, bindFn, prefixed, toArray, inArray, uniqueArray, splitStr, boolOrFn, hasParent, addEventListeners, removeEventListeners, defaults$1 as defaults };\n//# sourceMappingURL=hammer.esm.js.map\n","import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\n\nexport const CONTENT_TOUCHES_DELAY = 240;\nexport const CONTENT_TOUCHES_QUICK_TAP_END_DELAY = 50;\nexport const MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD = 0.1;\nexport const MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD = 7;\nexport const DEG_RAD = Math.PI / 180;\n\n// Map Hammer values to RNGH\nexport const EventMap = {\n  [Hammer.INPUT_START]: State.BEGAN,\n  [Hammer.INPUT_MOVE]: State.ACTIVE,\n  [Hammer.INPUT_END]: State.END,\n  [Hammer.INPUT_CANCEL]: State.FAILED,\n};\n\nexport const Direction = {\n  RIGHT: 1,\n  LEFT: 2,\n  UP: 4,\n  DOWN: 8,\n};\n\nexport const DirectionMap = {\n  [Hammer.DIRECTION_RIGHT]: Direction.RIGHT,\n  [Hammer.DIRECTION_LEFT]: Direction.LEFT,\n  [Hammer.DIRECTION_UP]: Direction.UP,\n  [Hammer.DIRECTION_DOWN]: Direction.DOWN,\n};\n\nexport const HammerInputNames = {\n  [Hammer.INPUT_START]: 'START',\n  [Hammer.INPUT_MOVE]: 'MOVE',\n  [Hammer.INPUT_END]: 'END',\n  [Hammer.INPUT_CANCEL]: 'CANCEL',\n};\nexport const HammerDirectionNames = {\n  [Hammer.DIRECTION_HORIZONTAL]: 'HORIZONTAL',\n  [Hammer.DIRECTION_UP]: 'UP',\n  [Hammer.DIRECTION_DOWN]: 'DOWN',\n  [Hammer.DIRECTION_VERTICAL]: 'VERTICAL',\n  [Hammer.DIRECTION_NONE]: 'NONE',\n  [Hammer.DIRECTION_ALL]: 'ALL',\n  [Hammer.DIRECTION_RIGHT]: 'RIGHT',\n  [Hammer.DIRECTION_LEFT]: 'LEFT',\n};\n","export class GesturePropError extends Error {\n  constructor(name, value, expectedType) {\n    super(`Invalid property \\`${name}: ${value}\\` expected \\`${expectedType}\\``);\n  }\n}\n","let gestures = {};\n\nexport function getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n\n  throw new Error('No handler for tag ' + tag);\n}\n\nexport function createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error('Handler with tag ' + handlerTag + ' already exists');\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag) {\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n","import Hammer from '@egjs/hammerjs';\nimport { findNodeHandle } from 'react-native';\n\nimport State from '../State';\nimport { EventMap } from './constants';\nimport * as NodeManager from './NodeManager';\n\nlet _gestureInstances = 0;\n\nclass GestureHandler {\n  isGestureRunning = false;\n  hasGestureFailed = false;\n  view = null;\n  config = {};\n  hammer = null;\n  pendingGestures = {};\n  oldState = State.UNDETERMINED;\n  previousState = State.UNDETERMINED;\n  lastSentState = null;\n\n  get id() {\n    return `${this.name}${this._gestureInstance}`;\n  }\n\n  get isDiscrete() {\n    return false;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  constructor() {\n    this._gestureInstance = _gestureInstances++;\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  onWaitingEnded(gesture) {}\n\n  removePendingGesture(id) {\n    delete this.pendingGestures[id];\n  }\n\n  addPendingGesture(gesture) {\n    this.pendingGestures[gesture.id] = gesture;\n  }\n\n  isGestureEnabledForEvent() {\n    return { success: true };\n  }\n\n  parseNativeEvent(nativeEvent) {\n    return nativeEvent;\n  }\n\n  get NativeGestureClass() {\n    throw new Error('Must override GestureHandler.NativeGestureClass');\n  }\n\n  updateHasCustomActivationCriteria(config) {\n    return true;\n  }\n\n  clearSelfAsPending = () => {\n    if (Array.isArray(this.config.waitFor)) {\n      for (const gesture of this.config.waitFor) {\n        gesture.removePendingGesture(this.id);\n      }\n    }\n  };\n\n  updateGestureConfig({ enabled = true, ...props }) {\n    this.clearSelfAsPending();\n\n    this.config = ensureConfig({ enabled, ...props });\n    this._hasCustomActivationCriteria = this.updateHasCustomActivationCriteria(\n      this.config\n    );\n    if (Array.isArray(this.config.waitFor)) {\n      for (const gesture of this.config.waitFor) {\n        gesture.addPendingGesture(this);\n      }\n    }\n\n    if (this.hammer) {\n      this.sync();\n    }\n    return this.config;\n  }\n\n  destroy = () => {\n    this.clearSelfAsPending();\n\n    if (this.hammer) {\n      this.hammer.stop();\n      this.hammer.destroy();\n    }\n    this.hammer = null;\n  };\n\n  isPointInView = ({ x, y }) => {\n    const rect = this.view.getBoundingClientRect();\n    const pointerInside =\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    return pointerInside;\n  };\n\n  getState(type) {\n    return EventMap[type];\n  }\n\n  transformEventData(event) {\n    const { eventType, maxPointers: numberOfPointers } = event;\n    // const direction = DirectionMap[ev.direction];\n    const changedTouch = event.changedPointers[0];\n    const pointerInside = this.isPointInView({\n      x: changedTouch.clientX,\n      y: changedTouch.clientY,\n    });\n\n    const state = this.getState(eventType);\n    if (state !== this.previousState) {\n      this.oldState = this.previousState;\n      this.previousState = state;\n    }\n\n    return {\n      nativeEvent: {\n        numberOfPointers,\n        state,\n        pointerInside,\n        ...this.transformNativeEvent(event),\n        // onHandlerStateChange only\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: this.oldState,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  transformNativeEvent(event) {\n    return {};\n  }\n\n  sendEvent = nativeEvent => {\n    const {\n      onGestureHandlerStateChange: onHandlerStateChange,\n      onGestureHandlerEvent: onGestureEvent,\n    } = this.ref.props;\n\n    const event = this.transformEventData(nativeEvent);\n\n    invokeNullableMethod('onGestureEvent', onGestureEvent, event);\n    if (this.lastSentState !== event.nativeEvent.state) {\n      this.lastSentState = event.nativeEvent.state;\n      invokeNullableMethod('onHandlerStateChange', onHandlerStateChange, event);\n    }\n  };\n\n  cancelPendingGestures(event) {\n    for (const gesture of Object.values(this.pendingGestures)) {\n      if (gesture && gesture.isGestureRunning) {\n        gesture.hasGestureFailed = true;\n        gesture.cancelEvent(event);\n      }\n    }\n  }\n\n  notifyPendingGestures() {\n    for (const gesture of Object.values(this.pendingGestures)) {\n      if (gesture) {\n        gesture.onWaitingEnded(this);\n      }\n    }\n  }\n\n  onGestureEnded(event) {\n    this.isGestureRunning = false;\n    this.cancelPendingGestures(event);\n  }\n\n  forceInvalidate(event) {\n    if (this.isGestureRunning) {\n      this.hasGestureFailed = true;\n      this.cancelEvent(event);\n    }\n  }\n\n  cancelEvent(event) {\n    this.notifyPendingGestures();\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_CANCEL,\n      isFinal: true,\n    });\n    this.onGestureEnded(event);\n  }\n\n  onRawEvent({ isFirst }) {\n    if (isFirst) {\n      this.hasGestureFailed = false;\n    }\n  }\n\n  setView(ref) {\n    if (ref == null) {\n      this.destroy();\n      this.view = null;\n      return;\n    }\n\n    this.ref = ref;\n\n    this.view = findNodeHandle(ref);\n    this.hammer = new Hammer.Manager(this.view);\n\n    this.oldState = State.UNDETERMINED;\n    this.previousState = State.UNDETERMINED;\n    this.lastSentState = null;\n\n    const { NativeGestureClass } = this;\n    const gesture = new NativeGestureClass(this.getHammerConfig());\n    this.hammer.add(gesture);\n\n    this.hammer.on('hammer.input', ev => {\n      if (!this.config.enabled) {\n        this.hasGestureFailed = false;\n        this.isGestureRunning = false;\n        return;\n      }\n\n      this.onRawEvent(ev);\n\n      // TODO: Bacon: Check against something other than null\n      // The isFirst value is not called when the first rotation is calculated.\n      if (this.initialRotation === null && ev.rotation !== 0) {\n        this.initialRotation = ev.rotation;\n      }\n      if (ev.isFinal) {\n        // in favor of a willFail otherwise the last frame of the gesture will be captured.\n        setTimeout(() => {\n          this.initialRotation = null;\n          this.hasGestureFailed = false;\n        });\n      }\n    });\n\n    this.setupEvents();\n    this.sync();\n  }\n\n  setupEvents() {\n    if (!this.isDiscrete) {\n      this.hammer.on(`${this.name}start`, event => this.onStart(event));\n      this.hammer.on(`${this.name}end ${this.name}cancel`, event =>\n        this.onGestureEnded(event)\n      );\n    }\n    this.hammer.on(this.name, ev => this.onGestureActivated(ev));\n  }\n\n  onStart({ deltaX, deltaY, rotation }) {\n    // Reset the state for the next gesture\n    this.oldState = State.UNDETERMINED;\n    this.previousState = State.UNDETERMINED;\n    this.lastSentState = null;\n\n    this.isGestureRunning = true;\n    this.__initialX = deltaX;\n    this.__initialY = deltaY;\n    this.initialRotation = rotation;\n  }\n\n  onGestureActivated(ev) {\n    this.sendEvent(ev);\n  }\n\n  onSuccess() {}\n\n  _getPendingGestures() {\n    if (Array.isArray(this.config.waitFor) && this.config.waitFor.length) {\n      // Get the list of gestures that this gesture is still waiting for.\n      // Use `=== false` in case a ref that isn't a gesture handler is used.\n      const stillWaiting = this.config.waitFor.filter(\n        ({ hasGestureFailed }) => hasGestureFailed === false\n      );\n      return stillWaiting;\n    }\n    return [];\n  }\n\n  getHammerConfig() {\n    const pointers =\n      this.config.minPointers === this.config.maxPointers\n        ? this.config.minPointers\n        : 0;\n    return {\n      pointers,\n    };\n  }\n\n  sync = () => {\n    const gesture = this.hammer.get(this.name);\n    if (!gesture) return;\n\n    const enable = (recognizer, inputData) => {\n      if (!this.config.enabled) {\n        this.isGestureRunning = false;\n        this.hasGestureFailed = false;\n        return false;\n      }\n\n      // Prevent events before the system is ready.\n      if (\n        !inputData ||\n        !recognizer.options ||\n        typeof inputData.maxPointers === 'undefined'\n      ) {\n        return this.shouldEnableGestureOnSetup;\n      }\n\n      if (this.hasGestureFailed) {\n        return false;\n      }\n\n      if (!this.isDiscrete) {\n        if (this.isGestureRunning) {\n          return true;\n        }\n        // The built-in hammer.js \"waitFor\" doesn't work across multiple views.\n        // Only process if there are views to wait for.\n        this._stillWaiting = this._getPendingGestures();\n        // This gesture should continue waiting.\n        if (this._stillWaiting.length) {\n          // Check to see if one of the gestures you're waiting for has started.\n          // If it has then the gesture should fail.\n          for (const gesture of this._stillWaiting) {\n            // When the target gesture has started, this gesture must force fail.\n            if (!gesture.isDiscrete && gesture.isGestureRunning) {\n              this.hasGestureFailed = true;\n              this.isGestureRunning = false;\n              return false;\n            }\n          }\n          // This gesture shouldn't start until the others have finished.\n          return false;\n        }\n      }\n\n      // Use default behaviour\n      if (!this._hasCustomActivationCriteria) {\n        return true;\n      }\n\n      const deltaRotation =\n        this.initialRotation == null\n          ? 0\n          : inputData.rotation - this.initialRotation;\n      const { success, failed } = this.isGestureEnabledForEvent(\n        this.getConfig(),\n        recognizer,\n        {\n          ...inputData,\n          deltaRotation,\n        }\n      );\n\n      if (failed) {\n        this.simulateCancelEvent(inputData);\n        this.hasGestureFailed = true;\n      }\n      return success;\n    };\n\n    const params = this.getHammerConfig();\n    gesture.set({ ...params, enable });\n  };\n\n  simulateCancelEvent(inputData) {}\n}\n\n// Used for sending data to a callback or AnimatedEvent\nfunction invokeNullableMethod(name, method, event) {\n  if (method) {\n    if (typeof method === 'function') {\n      method(event);\n    } else {\n      // For use with reanimated's AnimatedEvent\n      if (\n        '__getHandler' in method &&\n        typeof method.__getHandler === 'function'\n      ) {\n        const handler = method.__getHandler();\n        invokeNullableMethod(name, handler, event);\n      } else {\n        if ('__nodeConfig' in method) {\n          const { argMapping } = method.__nodeConfig;\n          if (Array.isArray(argMapping)) {\n            for (const index in argMapping) {\n              const [key, value] = argMapping[index];\n              if (key in event.nativeEvent) {\n                const nativeValue = event.nativeEvent[key];\n                if (value && value.setValue) {\n                  // Reanimated API\n                  value.setValue(nativeValue);\n                } else {\n                  // RN Animated API\n                  method.__nodeConfig.argMapping[index] = [key, nativeValue];\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\n// Validate the props\nfunction ensureConfig(config) {\n  const props = { ...config };\n\n  if ('minDist' in config) {\n    props.minDist = config.minDist;\n    props.minDistSq = props.minDist * props.minDist;\n  }\n  if ('minVelocity' in config) {\n    props.minVelocity = config.minVelocity;\n    props.minVelocitySq = props.minVelocity * props.minVelocity;\n  }\n  if ('maxDist' in config) {\n    props.maxDist = config.maxDist;\n    props.maxDistSq = config.maxDist * config.maxDist;\n  }\n  if ('waitFor' in config) {\n    props.waitFor = asArray(config.waitFor)\n      .map(({ _handlerTag }) => NodeManager.getHandler(_handlerTag))\n      .filter(v => v);\n  } else {\n    props.waitFor = null;\n  }\n\n  [\n    'minPointers',\n    'maxPointers',\n    'minDist',\n    'maxDist',\n    'maxDistSq',\n    'minVelocitySq',\n    'minDistSq',\n    'minVelocity',\n    'failOffsetXStart',\n    'failOffsetYStart',\n    'failOffsetXEnd',\n    'failOffsetYEnd',\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n  ].forEach(prop => {\n    if (typeof props[prop] === 'undefined') {\n      props[prop] = Number.NaN;\n    }\n  });\n  return props;\n}\n\nfunction asArray(value) {\n  return value == null ? [] : Array.isArray(value) ? value : [value];\n}\n\nexport default GestureHandler;\n","import GestureHandler from './GestureHandler';\nimport { PixelRatio } from 'react-native';\n\nclass DraggingGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  transformNativeEvent({\n    deltaX,\n    deltaY,\n    velocityX,\n    velocityY,\n    center: { x, y },\n  }) {\n    const rect = this.view.getBoundingClientRect();\n    const ratio = PixelRatio.get();\n    return {\n      translationX: deltaX - (this.__initialX || 0),\n      translationY: deltaY - (this.__initialY || 0),\n      absoluteX: x,\n      absoluteY: y,\n      velocityX: velocityX * ratio,\n      velocityY: velocityY * ratio,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n}\n\nexport default DraggingGestureHandler;\n","export const isnan = v => Number.isNaN(v);\n\nexport const isValidNumber = v => typeof v === 'number' && !Number.isNaN(v);\n\nexport const TEST_MIN_IF_NOT_NAN = (value, limit) =>\n  !isnan(limit) &&\n  ((limit < 0 && value <= limit) || (limit >= 0 && value >= limit));\nexport const VEC_LEN_SQ = ({ x = 0, y = 0 } = {}) => x * x + y * y;\nexport const TEST_MAX_IF_NOT_NAN = (value, max) =>\n  !isnan(max) && ((max < 0 && value < max) || (max >= 0 && value > max));\n\nexport function fireAfterInterval(method, interval) {\n  if (!interval) {\n    method();\n    return null;\n  }\n  return setTimeout(() => method(), interval);\n}\n","import Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    {\n      minPointers,\n      maxPointers,\n      numberOfPointers,\n      maxDist,\n      maxDeltaX,\n      maxDeltaY,\n      maxDistSq,\n      shouldCancelWhenOutside,\n    },\n    recognizer,\n    { maxPointers: pointerLength, deltaX: dx, deltaY: dy, ...props }\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n","import GestureHandler from './GestureHandler';\nimport { TEST_MAX_IF_NOT_NAN } from './utils';\n\nclass DiscreteGestureHandler extends GestureHandler {\n  get isDiscrete() {\n    return true;\n  }\n\n  get shouldEnableGestureOnSetup() {\n    return true;\n  }\n\n  shouldFailUnderCustomCriteria(\n    { x, y, deltaX, deltaY },\n    { maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside }\n  ) {\n    if (shouldCancelWhenOutside) {\n      if (!this.isPointInView({ x, y })) {\n        return true;\n      }\n    }\n    return (\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaX), maxDeltaX) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY), maxDeltaY) ||\n      TEST_MAX_IF_NOT_NAN(Math.abs(deltaY * deltaY + deltaX * deltaX), maxDistSq)\n    );\n  }\n\n  transformNativeEvent({ center: { x, y } }) {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      absoluteX: x,\n      absoluteY: y,\n      x: x - rect.left,\n      y: y - rect.top,\n    };\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers, maxDist, maxDeltaX, maxDeltaY, maxDistSq, shouldCancelWhenOutside },\n    recognizer,\n    { maxPointers: pointerLength, center, deltaX, deltaY, ...props }\n  ) {\n    const validPointerCount = pointerLength >= minPointers && pointerLength <= maxPointers;\n\n    if (\n      this.shouldFailUnderCustomCriteria(\n        { ...center, deltaX, deltaY },\n        {\n          maxDeltaX,\n          maxDeltaY,\n          maxDistSq,\n          shouldCancelWhenOutside,\n        }\n      ) ||\n      // A user probably won't land a multi-pointer tap on the first tick (so we cannot just cancel each time)\n      // but if the gesture is running and the user adds or subtracts another pointer then it should fail.\n      (!validPointerCount && this.isGestureRunning)\n    ) {\n      return { failed: true };\n    }\n\n    return { success: validPointerCount };\n  }\n}\n\nexport default DiscreteGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport {\n  CONTENT_TOUCHES_DELAY,\n  CONTENT_TOUCHES_QUICK_TAP_END_DELAY,\n} from './constants';\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { fireAfterInterval, isValidNumber, isnan } from './utils';\n\nclass PressGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'press';\n  }\n\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 5 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Press;\n  }\n\n  shouldDelayTouches = true;\n\n  simulateCancelEvent(inputData) {\n    // Long press never starts so we can't rely on the running event boolean.\n    this.hasGestureFailed = true;\n    this.cancelEvent(inputData);\n  }\n\n  updateHasCustomActivationCriteria({ shouldCancelWhenOutside, maxDistSq }) {\n    return shouldCancelWhenOutside || !isValidNumber(maxDistSq);\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.BEGAN,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.CANCELLED,\n    }[type];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  onGestureActivated(ev) {\n    this.onGestureStart(ev);\n  }\n\n  shouldDelayTouchForEvent({ pointerType }) {\n    // Don't disable event for mouse input\n    return this.shouldDelayTouches && pointerType === 'touch';\n  }\n\n  onGestureStart(ev) {\n    this.isGestureRunning = true;\n    clearTimeout(this.visualFeedbackTimer);\n    this.initialEvent = ev;\n    this.visualFeedbackTimer = fireAfterInterval(() => {\n      this.sendGestureStartedEvent(this.initialEvent);\n      this.initialEvent = null;\n    }, this.shouldDelayTouchForEvent(ev) && CONTENT_TOUCHES_DELAY);\n  }\n\n  sendGestureStartedEvent(ev) {\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.sendEvent({\n      ...ev,\n      eventType: Hammer.INPUT_MOVE,\n      isFirst: true,\n    });\n  }\n\n  forceInvalidate(event) {\n    super.forceInvalidate(event);\n    clearTimeout(this.visualFeedbackTimer);\n    this.visualFeedbackTimer = null;\n    this.initialEvent = null;\n  }\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (ev.isFinal && this.isGestureRunning) {\n      let timeout;\n      if (this.visualFeedbackTimer) {\n        // Aesthetic timing for a quick tap.\n        // We haven't activated the tap right away to emulate iOS `delaysContentTouches`\n        // Now we must send the initial activation event and wait a set amount of time before firing the end event.\n        timeout = CONTENT_TOUCHES_QUICK_TAP_END_DELAY;\n        this.sendGestureStartedEvent(this.initialEvent);\n        this.initialEvent = null;\n      }\n      fireAfterInterval(() => {\n        this.sendEvent({\n          ...ev,\n          eventType: Hammer.INPUT_END,\n          isFinal: true,\n        });\n        this.onGestureEnded();\n      }, timeout);\n    }\n  }\n\n  updateGestureConfig({\n    shouldActivateOnStart = false,\n    disallowInterruption = false,\n    shouldCancelWhenOutside = true,\n    minDurationMs = Number.NaN,\n    maxDist = Number.NaN,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldActivateOnStart,\n      disallowInterruption,\n      shouldCancelWhenOutside,\n      minDurationMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n}\nexport default PressGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport State from '../State';\nimport PressGestureHandler from './PressGestureHandler';\nimport { isnan, isValidNumber } from './utils';\n\nclass LongPressGestureHandler extends PressGestureHandler {\n  get minDurationMs() {\n    return isnan(this.config.minDurationMs) ? 251 : this.config.minDurationMs;\n  }\n\n  get maxDist() {\n    return isnan(this.config.maxDist) ? 9 : this.config.maxDist;\n  }\n\n  updateHasCustomActivationCriteria({ maxDistSq }) {\n    return !isValidNumber(maxDistSq);\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        shouldCancelWhenOutside: true,\n        maxDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      // threshold: this.maxDist,\n      time: this.minDurationMs,\n    };\n  }\n\n  getState(type) {\n    return {\n      [Hammer.INPUT_START]: State.ACTIVE,\n      [Hammer.INPUT_MOVE]: State.ACTIVE,\n      [Hammer.INPUT_END]: State.END,\n      [Hammer.INPUT_CANCEL]: State.FAILED,\n    }[type];\n  }\n}\n\nexport default LongPressGestureHandler;\n","import DiscreteGestureHandler from './DiscreteGestureHandler';\nimport * as NodeManager from './NodeManager';\nimport PressGestureHandler from './PressGestureHandler';\nimport { TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\n\nclass NativeViewGestureHandler extends PressGestureHandler {\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n    if (!ev.isFinal) {\n      // if (this.ref instanceof ScrollView) {\n      if (TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ({ x: ev.deltaX, y: ev.deltaY }), 10)) {\n        if (this.config.disallowInterruption) {\n          const gestures = Object.values(NodeManager.getNodes()).filter(gesture => {\n            const { handlerTag, view, isGestureRunning } = gesture;\n            return (\n              // Check if this gesture isn't self\n              handlerTag !== this.handlerTag &&\n              // Ensure the gesture needs to be cancelled\n              isGestureRunning &&\n              // ScrollView can cancel discrete gestures like taps and presses\n              gesture instanceof DiscreteGestureHandler &&\n              // Ensure a view exists and is a child of the current view\n              view &&\n              this.view.contains(view)\n            );\n          });\n          // Cancel all of the gestures that passed the filter\n          for (const gesture of gestures) {\n            // TODO: Bacon: Send some cached event.\n            gesture.forceInvalidate(ev);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default NativeViewGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport {\n  MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD,\n  MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD,\n} from './constants';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isValidNumber, isnan, TEST_MIN_IF_NOT_NAN, VEC_LEN_SQ } from './utils';\nimport State from '../State';\n\nclass PanGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'pan';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pan;\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      direction: this.getDirection(),\n    };\n  }\n\n  getState(type) {\n    const nextState = super.getState(type);\n    // Ensure that the first state sent is `BEGAN` and not `ACTIVE`\n    if (\n      this.previousState === State.UNDETERMINED &&\n      nextState === State.ACTIVE\n    ) {\n      return State.BEGAN;\n    }\n    return nextState;\n  }\n\n  getDirection() {\n    const config = this.getConfig();\n    const {\n      activeOffsetXStart,\n      activeOffsetXEnd,\n      activeOffsetYStart,\n      activeOffsetYEnd,\n      minDist,\n    } = config;\n    let directions = [];\n    let horizontalDirections = [];\n\n    if (!isnan(minDist)) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    if (!isnan(activeOffsetXStart))\n      horizontalDirections.push(Hammer.DIRECTION_LEFT);\n    if (!isnan(activeOffsetXEnd))\n      horizontalDirections.push(Hammer.DIRECTION_RIGHT);\n    if (horizontalDirections.length === 2)\n      horizontalDirections = [Hammer.DIRECTION_HORIZONTAL];\n\n    directions = directions.concat(horizontalDirections);\n    let verticalDirections = [];\n\n    if (!isnan(activeOffsetYStart))\n      verticalDirections.push(Hammer.DIRECTION_UP);\n    if (!isnan(activeOffsetYEnd))\n      verticalDirections.push(Hammer.DIRECTION_DOWN);\n\n    if (verticalDirections.length === 2)\n      verticalDirections = [Hammer.DIRECTION_VERTICAL];\n\n    directions = directions.concat(verticalDirections);\n\n    if (!directions.length) {\n      return Hammer.DIRECTION_NONE;\n    }\n    if (\n      directions[0] === Hammer.DIRECTION_HORIZONTAL &&\n      directions[1] === Hammer.DIRECTION_VERTICAL\n    ) {\n      return Hammer.DIRECTION_ALL;\n    }\n    if (horizontalDirections.length && verticalDirections.length) {\n      return Hammer.DIRECTION_ALL;\n    }\n\n    return directions[0];\n  }\n\n  getConfig() {\n    if (!this._hasCustomActivationCriteria) {\n      // Default config\n      // If no params have been defined then this config should emulate the native gesture as closely as possible.\n      return {\n        minDistSq: 10,\n      };\n    }\n    return this.config;\n  }\n\n  shouldFailUnderCustomCriteria({ deltaX, deltaY }, criteria) {\n    return (\n      (!isnan(criteria.failOffsetXStart) &&\n        deltaX < criteria.failOffsetXStart) ||\n      (!isnan(criteria.failOffsetXEnd) && deltaX > criteria.failOffsetXEnd) ||\n      (!isnan(criteria.failOffsetYStart) &&\n        deltaY < criteria.failOffsetYStart) ||\n      (!isnan(criteria.failOffsetYEnd) && deltaY > criteria.failOffsetYEnd)\n    );\n  }\n\n  shouldActivateUnderCustomCriteria({ deltaX, deltaY, velocity }, criteria) {\n    return (\n      (!isnan(criteria.activeOffsetXStart) &&\n        deltaX < criteria.activeOffsetXStart) ||\n      (!isnan(criteria.activeOffsetXEnd) &&\n        deltaX > criteria.activeOffsetXEnd) ||\n      (!isnan(criteria.activeOffsetYStart) &&\n        deltaY < criteria.activeOffsetYStart) ||\n      (!isnan(criteria.activeOffsetYEnd) &&\n        deltaY > criteria.activeOffsetYEnd) ||\n      TEST_MIN_IF_NOT_NAN(\n        VEC_LEN_SQ({ x: deltaX, y: deltaY }),\n        criteria.minDistSq\n      ) ||\n      TEST_MIN_IF_NOT_NAN(velocity.x, criteria.minVelocityX) ||\n      TEST_MIN_IF_NOT_NAN(velocity.y, criteria.minVelocityY) ||\n      TEST_MIN_IF_NOT_NAN(VEC_LEN_SQ(velocity), criteria.minVelocitySq)\n    );\n  }\n\n  shouldMultiFingerPanFail({ pointerLength, scale, deltaRotation }) {\n    if (pointerLength <= 1) {\n      return false;\n    }\n\n    // Test if the pan had too much pinching or rotating.\n    const deltaScale = Math.abs(scale - 1);\n    const absDeltaRotation = Math.abs(deltaRotation);\n    if (deltaScale > MULTI_FINGER_PAN_MAX_PINCH_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n    if (absDeltaRotation > MULTI_FINGER_PAN_MAX_ROTATION_THRESHOLD) {\n      // > If the threshold doesn't seem right.\n      // You can log the value which it failed at here:\n      return true;\n    }\n\n    return false;\n  }\n\n  updateHasCustomActivationCriteria(criteria) {\n    return (\n      isValidNumber(criteria.minDistSq) ||\n      isValidNumber(criteria.minVelocityX) ||\n      isValidNumber(criteria.minVelocityY) ||\n      isValidNumber(criteria.minVelocitySq) ||\n      isValidNumber(criteria.activeOffsetXStart) ||\n      isValidNumber(criteria.activeOffsetXEnd) ||\n      isValidNumber(criteria.activeOffsetYStart) ||\n      isValidNumber(criteria.activeOffsetYEnd)\n    );\n  }\n\n  isGestureEnabledForEvent(props, recognizer, inputData) {\n    if (this.shouldFailUnderCustomCriteria(inputData, props)) {\n      return { failed: true };\n    }\n\n    const velocity = { x: inputData.velocityX, y: inputData.velocityY };\n    if (\n      this._hasCustomActivationCriteria &&\n      this.shouldActivateUnderCustomCriteria(\n        { deltaX: inputData.deltaX, deltaY: inputData.deltaY, velocity },\n        props\n      )\n    ) {\n      if (\n        this.shouldMultiFingerPanFail({\n          pointerLength: inputData.maxPointers,\n          scale: inputData.scale,\n          deltaRotation: inputData.deltaRotation,\n        })\n      ) {\n        return {\n          failed: true,\n        };\n      }\n      return { success: true };\n    }\n    return { success: false };\n  }\n}\n\nfunction validateConfig(config = {}) {\n  const isNum = v => isnan(v) || typeof v === 'number';\n  const isBool = v => typeof v === 'boolean';\n\n  const valid = {\n    enabled: isBool,\n    minDistSq: isNum,\n    minVelocityX: isNum,\n    minVelocityY: isNum,\n    // TODO: Bacon: remove `minVelocity`\n    minVelocity: isNum,\n    minVelocitySq: isNum,\n    activeOffsetXStart: isNum,\n    activeOffsetXEnd: isNum,\n    failOffsetXStart: isNum,\n    failOffsetXEnd: isNum,\n    activeOffsetYStart: isNum,\n    activeOffsetYEnd: isNum,\n    failOffsetYStart: isNum,\n    failOffsetYEnd: isNum,\n    hasCustomActivationCriteria: isBool,\n    minPointers: isNum,\n    maxPointers: isNum,\n  };\n  const keys = Object.keys(valid);\n\n  let invalidKeys = [];\n  for (const key of Object.keys(config)) {\n    if (keys.includes(key)) {\n      if (valid[key](config[key])) {\n        console.warn('Invalid type: ' + key + ': ' + config[key]);\n      }\n    } else {\n      invalidKeys.push(key);\n    }\n  }\n\n  if (invalidKeys.length) {\n    throw new Error('Invalid config props found: ' + invalidKeys.join(', '));\n  }\n  return config;\n}\n\nexport default PanGestureHandler;\n","import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers },\n    recognizer,\n    { maxPointers: pointerLength }\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass PinchGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'pinch';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Pinch;\n  }\n\n  transformNativeEvent({ scale, velocity, center }) {\n    return {\n      focalX: center.x,\n      focalY: center.y,\n      velocity,\n      scale,\n    };\n  }\n}\n\nexport default PinchGestureHandler;\n","import { Direction } from './web/constants';\nimport FlingGestureHandler from './web/FlingGestureHandler';\nimport LongPressGestureHandler from './web/LongPressGestureHandler';\nimport NativeViewGestureHandler from './web/NativeViewGestureHandler';\nimport * as NodeManager from './web/NodeManager';\nimport PanGestureHandler from './web/PanGestureHandler';\nimport PinchGestureHandler from './web/PinchGestureHandler';\nimport RotationGestureHandler from './web/RotationGestureHandler';\nimport TapGestureHandler from './web/TapGestureHandler';\n\nconst Gestures = {\n  PanGestureHandler,\n  RotationGestureHandler,\n  PinchGestureHandler,\n  TapGestureHandler,\n  NativeViewGestureHandler,\n  LongPressGestureHandler,\n  FlingGestureHandler,\n  // ForceTouchGestureHandler,\n};\n\nexport default {\n  Direction,\n  handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler(handlerName, handlerTag, config) {\n    if (!(handlerName in Gestures))\n      throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n    const GestureClass = Gestures[handlerName];\n    NodeManager.createGestureHandler(handlerTag, new GestureClass());\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler(handlerTag, newView) {\n    NodeManager.getHandler(handlerTag).setView(newView);\n  },\n  updateGestureHandler(handlerTag, newConfig) {\n    NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n  },\n  getGestureHandlerNode(handlerTag) {\n    return NodeManager.getHandler(handlerTag);\n  },\n  dropGestureHandler(handlerTag) {\n    NodeManager.dropGestureHandler(handlerTag);\n  },\n};\n","import Hammer from '@egjs/hammerjs';\n\nimport { DEG_RAD } from './constants';\nimport IndiscreteGestureHandler from './IndiscreteGestureHandler';\n\nclass RotationGestureHandler extends IndiscreteGestureHandler {\n  get name() {\n    return 'rotate';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Rotate;\n  }\n\n  transformNativeEvent({ rotation, velocity, center }) {\n    return {\n      rotation: (rotation - this.initialRotation) * DEG_RAD,\n      anchorX: center.x,\n      anchorY: center.y,\n      velocity,\n    };\n  }\n}\nexport default RotationGestureHandler;\n","import Hammer from '@egjs/hammerjs';\n\nimport DiscreteGestureHandler from './DiscreteGestureHandler';\nimport { isnan } from './utils';\n\nclass TapGestureHandler extends DiscreteGestureHandler {\n  get name() {\n    return 'tap';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Tap;\n  }\n\n  get maxDelayMs() {\n    return isnan(this.config.maxDelayMs) ? 300 : this.config.maxDelayMs;\n  }\n\n  simulateCancelEvent(inputData) {\n    if (this.isGestureRunning) {\n      this.cancelEvent(inputData);\n    }\n  }\n\n  onGestureActivated(ev) {\n    if (this.isGestureRunning) {\n      this.onSuccessfulTap(ev);\n    }\n  }\n\n  onSuccessfulTap = ev => {\n    if (this._getPendingGestures().length) {\n      this._shouldFireEndEvent = ev;\n      return;\n    }\n    if (ev.eventType === Hammer.INPUT_END) {\n      this.sendEvent({ ...ev, eventType: Hammer.INPUT_MOVE });\n    }\n    // When handler gets activated it will turn into State.END immediately.\n    this.sendEvent({ ...ev, isFinal: true });\n    this.onGestureEnded(ev);\n  };\n\n  onRawEvent(ev) {\n    super.onRawEvent(ev);\n\n    // Attempt to create a touch-down event by checking if a valid tap hasn't started yet, then validating the input.\n    if (\n      !this.hasGestureFailed &&\n      !this.isGestureRunning &&\n      // Prevent multi-pointer events from misfiring.\n      !ev.isFinal\n    ) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n    if (ev.isFinal && ev.maxPointers > 1) {\n      setTimeout(() => {\n        // Handle case where one finger presses slightly\n        // after the first finger on a multi-tap event\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    }\n\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      // Handle case where one finger presses slightly\n      // after the first finger on a multi-tap event\n      if (ev.maxPointers > 1) {\n        setTimeout(() => {\n          if (this.isGestureRunning) {\n            this.cancelEvent(ev);\n          }\n        });\n      }\n\n      // Clear last timer\n      clearTimeout(this._timer);\n      // Create time out for multi-taps.\n      this._timer = setTimeout(() => {\n        this.hasGestureFailed = true;\n        this.cancelEvent(ev);\n      }, this.maxDelayMs);\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer.get(this.name);\n      if (gesture.options.enable(gesture, ev)) {\n        clearTimeout(this._multiTapTimer);\n\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      ...super.getHammerConfig(),\n      event: this.name,\n      taps: isnan(this.config.numberOfTaps) ? 1 : this.config.numberOfTaps,\n      interval: this.maxDelayMs,\n      time:\n        isnan(this.config.maxDurationMs) || this.config.maxDurationMs == null\n          ? 250\n          : this.config.maxDurationMs,\n    };\n  }\n\n  updateGestureConfig({\n    shouldCancelWhenOutside = true,\n    maxDeltaX = Number.NaN,\n    maxDeltaY = Number.NaN,\n    numberOfTaps = 1,\n    minDurationMs = 525,\n    maxDelayMs = Number.NaN,\n    maxDurationMs = Number.NaN,\n    maxDist = 2,\n    minPointers = 1,\n    maxPointers = 1,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      shouldCancelWhenOutside,\n      numberOfTaps,\n      maxDeltaX,\n      maxDeltaY,\n      minDurationMs,\n      maxDelayMs,\n      maxDist,\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  onGestureEnded(...props) {\n    clearTimeout(this._timer);\n    super.onGestureEnded(...props);\n  }\n\n  onWaitingEnded(gesture) {\n    if (this._shouldFireEndEvent) {\n      this.onSuccessfulTap(this._shouldFireEndEvent);\n      this._shouldFireEndEvent = null;\n    }\n  }\n}\nexport default TapGestureHandler;\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import PropTypes from 'prop-types';\n\n// If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nexport default GestureHandlerPropTypes;\n","import PropTypes from 'prop-types';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  ...GestureHandlerPropTypes,\n\n  // If changed, add changes to NATIVE_WRAPPER_PROPS_FILTER as well\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\n\nexport default NativeViewGestureHandler;\n","import React from 'react';\n\nimport NativeViewGestureHandler from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  'id',\n  'minPointers',\n  'enabled',\n  'waitFor',\n  'simultaneousHandlers',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'onGestureEvent',\n  'onHandlerStateChange',\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'shouldActivateOnStart',\n  'disallowInterruption',\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n];\n\nexport default function createNativeWrapper(Component, config = {}) {\n  const ComponentWrapper = React.forwardRef((props, ref) => {\n    // filter out props that should be passed to gesture handler wrapper\n    const gestureHandlerProps = Object.keys(props).reduce(\n      (res, key) => {\n        if (NATIVE_WRAPPER_PROPS_FILTER.indexOf(key) !== -1) {\n          res[key] = props[key];\n        }\n        return res;\n      },\n      { ...config } // watch out not to modify config\n    );\n    return (\n      <NativeViewGestureHandler {...gestureHandlerProps}>\n        <Component {...props} ref={ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  ComponentWrapper.propTypes = {\n    ...Component.propTypes,\n  };\n  ComponentWrapper.displayName = Component.displayName || 'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n","import RNGestureHandlerModule from './RNGestureHandlerModule';\n\nexport default RNGestureHandlerModule.Direction;\n","import React from 'react';\nimport { View } from 'react-native';\n\nexport default View;\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC(\n  Component,\n  containerStyles = undefined\n) {\n  function Wrapper(props) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${Component.displayName ||\n    Component.name})`;\n\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n","import React from 'react';\nimport { View } from 'react-native';\n\nexport default React.forwardRef((props, ref) => (\n  <View ref={ref} accessibilityRole=\"button\" {...props} />\n));\n","import React from 'react';\nimport {\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n} from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: true,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = createNativeWrapper(RNDrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\nDrawerLayoutAndroid.positions = RNDrawerLayoutAndroid.positions;\n\nexport const FlatList = React.forwardRef((props, ref) => (\n  <RNFlatList\n    ref={ref}\n    {...props}\n    renderScrollComponent={scrollProps => <ScrollView {...scrollProps} />}\n  />\n));\n","export default {\n  get forceTouchAvailable() {\n    return false;\n  },\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createHandler from './createHandler';\nimport GestureHandlerPropTypes from './GestureHandlerPropTypes';\nimport PlatformConstants from './PlatformConstants';\n\nexport const TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nexport const FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport const ForceTouchGestureHandler =\n  PlatformConstants && PlatformConstants.forceTouchAvailable\n    ? createHandler(\n        'ForceTouchGestureHandler',\n        {\n          ...GestureHandlerPropTypes,\n          minForce: PropTypes.number,\n          maxForce: PropTypes.number,\n          feedbackOnActivation: PropTypes.bool,\n        },\n        {}\n      )\n    : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  (PlatformConstants && PlatformConstants.forceTouchAvailable) || false;\n\nexport const LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nexport const PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nexport const PinchGestureHandler = createHandler(\n  'PinchGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\nexport const RotationGestureHandler = createHandler(\n  'RotationGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\n","// @flow\n\n// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us\n// to move faster and fix possible issues quicker\n\nimport React, { Component } from 'react';\nimport { Animated, StyleSheet, View, I18nManager } from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nexport type PropType = {\n  children: any,\n  friction: number,\n  leftThreshold?: number,\n  rightThreshold?: number,\n  overshootLeft?: boolean,\n  overshootRight?: boolean,\n  overshootFriction: number,\n  onSwipeableLeftOpen?: Function,\n  onSwipeableRightOpen?: Function,\n  onSwipeableOpen?: Function,\n  onSwipeableClose?: Function,\n  onSwipeableLeftWillOpen?: Function,\n  onSwipeableRightWillOpen?: Function,\n  onSwipeableWillOpen?: Function,\n  onSwipeableWillClose?: Function,\n  renderLeftActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  renderRightActions?: (\n    progressAnimatedValue: any,\n    dragAnimatedValue: any\n  ) => any,\n  useNativeAnimations: boolean,\n  animationOptions?: Object,\n  containerStyle?: Object,\n  childrenContainerStyle?: Object,\n};\ntype StateType = {\n  dragX: Animated.Value,\n  rowTranslation: Animated.Value,\n  rowState: number,\n  leftWidth: number | typeof undefined,\n  rightOffset: number | typeof undefined,\n  rowWidth: number | typeof undefined,\n};\n\nexport default class Swipeable extends Component<PropType, StateType> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n  _onGestureEvent: ?Animated.Event;\n  _transX: ?Animated.Interpolation;\n  _showLeftAction: ?Animated.Interpolation | ?Animated.Value;\n  _leftActionTranslate: ?Animated.Interpolation;\n  _showRightAction: ?Animated.Interpolation | ?Animated.Value;\n  _rightActionTranslate: ?Animated.Interpolation;\n\n  constructor(props: PropType) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this._updateAnimatedEvent(props, this.state);\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    const { friction, overshootFriction, useNativeAnimations } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const {\n      overshootLeft = leftWidth > 0,\n      overshootRight = rightWidth > 0,\n    } = props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [\n        -rightWidth - (overshootRight ? 1 : overshootFriction),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 : overshootFriction),\n      ],\n      outputRange: [\n        -rightWidth - (overshootRight || overshootFriction > 1 ? 1 : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft || overshootFriction > 1 ? 1 : 0),\n      ],\n    });\n    this._transX = transX;\n    this._showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this._leftActionTranslate = this._showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this._showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this._rightActionTranslate = this._showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  _onHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { velocityX, translationX: dragX } = nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this._currentOffset() + dragX / friction;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this._animateRow(startOffsetX, toValue, velocityX / friction);\n  };\n\n  _animateRow = (fromValue, toValue, velocityX) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0 && this.props.onSwipeableLeftOpen) {\n          this.props.onSwipeableLeftOpen();\n        } else if (toValue < 0 && this.props.onSwipeableRightOpen) {\n          this.props.onSwipeableRightOpen();\n        }\n\n        if (toValue === 0) {\n          this.props.onSwipeableClose && this.props.onSwipeableClose();\n        } else {\n          this.props.onSwipeableOpen && this.props.onSwipeableOpen();\n        }\n      }\n    });\n    if (toValue > 0 && this.props.onSwipeableLeftWillOpen) {\n      this.props.onSwipeableLeftWillOpen();\n    } else if (toValue < 0 && this.props.onSwipeableRightWillOpen) {\n      this.props.onSwipeableRightWillOpen();\n    }\n\n    if (toValue === 0) {\n      this.props.onSwipeableWillClose && this.props.onSwipeableWillClose();\n    } else {\n      this.props.onSwipeableWillOpen && this.props.onSwipeableWillOpen();\n    }\n  };\n\n  _onRowLayout = ({ nativeEvent }) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  _currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this._animateRow(this._currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this._animateRow(this._currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this._animateRow(this._currentOffset(), -rightWidth);\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const { children, renderLeftActions, renderRightActions } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          { transform: [{ translateX: this._leftActionTranslate }] },\n        ]}>\n        {renderLeftActions(this._showLeftAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this._rightActionTranslate }] },\n        ]}>\n        {renderRightActions(this._showRightAction, this._transX)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-10, 10]}\n        {...this.props}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}>\n        <Animated.View\n          onLayout={this._onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            onHandlerStateChange={this._onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this._transX }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL? 'row-reverse': 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n","// @flow\n\n// This component is based on RN's DrawerLayoutAndroid API\n//\n// It perhaps deserves to be put in a separate repo, but since it relies\n// on react-native-gesture-handler library which isn't very popular at the\n// moment I decided to keep it here for the time being. It will allow us\n// to move faster and fix issues that may arise in gesture handler library\n// that could be found when using the drawer component\n\nimport React, { Component } from 'react';\nimport invariant from 'invariant';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  Keyboard,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { PanGestureHandler, TapGestureHandler, State } from './GestureHandler';\n\nconst DRAG_TOSS = 0.05;\n\nconst IDLE = 'Idle';\nconst DRAGGING = 'Dragging';\nconst SETTLING = 'Settling';\n\nexport type PropType = {\n  children: any,\n  drawerBackgroundColor?: string,\n  drawerPosition: 'left' | 'right',\n  drawerLockMode?: 'unlocked' | 'locked-closed' | 'locked-open',\n  drawerWidth: number,\n  keyboardDismissMode?: 'none' | 'on-drag',\n  onDrawerClose?: Function,\n  onDrawerOpen?: Function,\n  onDrawerStateChanged?: Function,\n  renderNavigationView: (progressAnimatedValue: any) => any,\n  useNativeAnimations: boolean,\n\n  // brand new properties\n  drawerType: 'front' | 'back' | 'slide',\n  edgeWidth: number,\n  minSwipeDistance: number,\n  hideStatusBar?: boolean,\n  statusBarAnimation?: 'slide' | 'none' | 'fade',\n  overlayColor: string,\n  drawerContainerStyle?: any,\n  contentContainerStyle?: any,\n  onGestureRef?: Function,\n\n  // Properties not yet supported\n  // onDrawerSlide?: Function\n};\n\nexport type StateType = {\n  dragX: any,\n  touchX: any,\n  drawerTranslation: any,\n  containerWidth: number,\n};\n\nexport type EventType = {\n  stopPropagation: Function,\n};\n\nexport type DrawerMovementOptionType = {\n  velocity?: number,\n};\n\nexport default class DrawerLayout extends Component<PropType, StateType> {\n  static defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n  };\n\n  static positions = {\n    Left: 'left',\n    Right: 'right',\n  };\n  _openValue: ?Animated.Interpolation;\n  _onGestureEvent: ?Animated.Event;\n  _accessibilityIsModalView = React.createRef();\n  _pointerEventsView = React.createRef();\n  _panGestureHandler = React.createRef();\n  _drawerShown = false;\n\n  constructor(props: PropType, context: any) {\n    super(props, context);\n\n    const dragX = new Animated.Value(0);\n    const touchX = new Animated.Value(0);\n    const drawerTranslation = new Animated.Value(0);\n\n    this.state = {\n      dragX,\n      touchX,\n      drawerTranslation,\n      containerWidth: 0,\n    };\n\n    this._updateAnimatedEvent(props, this.state);\n  }\n\n  UNSAFE_componentWillUpdate(props: PropType, state: StateType) {\n    if (\n      this.props.drawerPosition !== props.drawerPosition ||\n      this.props.drawerWidth !== props.drawerWidth ||\n      this.props.drawerType !== props.drawerType ||\n      this.state.containerWidth !== state.containerWidth\n    ) {\n      this._updateAnimatedEvent(props, state);\n    }\n  }\n\n  _updateAnimatedEvent = (props: PropType, state: StateType) => {\n    // Event definition is based on\n    const { drawerPosition, drawerWidth, drawerType } = props;\n    const {\n      dragX: dragXValue,\n      touchX: touchXValue,\n      drawerTranslation,\n      containerWidth,\n    } = state;\n\n    let dragX = dragXValue;\n    let touchX = touchXValue;\n\n    if (drawerPosition !== 'left') {\n      // Most of the code is written in a way to handle left-side drawer.\n      // In order to handle right-side drawer the only thing we need to\n      // do is to reverse events coming from gesture handler in a way they\n      // emulate left-side drawer gestures. E.g. dragX is simply -dragX, and\n      // touchX is calulcated by subtracing real touchX from the width of the\n      // container (such that when touch happens at the right edge the value\n      // is simply 0)\n      dragX = Animated.multiply(new Animated.Value(-1), dragXValue);\n      touchX = Animated.add(\n        new Animated.Value(containerWidth),\n        Animated.multiply(new Animated.Value(-1), touchXValue)\n      );\n      touchXValue.setValue(containerWidth);\n    } else {\n      touchXValue.setValue(0);\n    }\n\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep start position\n    // of the gesture. Then we use that value to calculate how much we need to subtract from\n    // the dragX. If the gesture started on the greyed out area we take the distance from the\n    // edge of the drawer to the start position. Otherwise we don't subtract at all and the\n    // drawer be pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    //\n    let translationX = dragX;\n    if (drawerType === 'front') {\n      const startPositionX = Animated.add(\n        touchX,\n        Animated.multiply(new Animated.Value(-1), dragX)\n      );\n\n      const dragOffsetFromOnStartPosition = startPositionX.interpolate({\n        inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n        outputRange: [0, 0, 1],\n      });\n      translationX = Animated.add(dragX, dragOffsetFromOnStartPosition);\n    }\n\n    this._openValue = Animated.add(translationX, drawerTranslation).interpolate(\n      {\n        inputRange: [0, drawerWidth],\n        outputRange: [0, 1],\n        extrapolate: 'clamp',\n      }\n    );\n\n    this._onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragXValue, x: touchXValue } }],\n      { useNativeDriver: props.useNativeAnimations }\n    );\n  };\n\n  _handleContainerLayout = ({ nativeEvent }) => {\n    this.setState({ containerWidth: nativeEvent.layout.width });\n  };\n\n  _emitStateChanged = (newState: string, drawerWillShow: boolean) => {\n    this.props.onDrawerStateChanged &&\n      this.props.onDrawerStateChanged(newState, drawerWillShow);\n  };\n\n  _openingHandlerStateChange = ({ nativeEvent }) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this._handleRelease(nativeEvent);\n    } else if (nativeEvent.state === State.ACTIVE) {\n      this._emitStateChanged(DRAGGING, false);\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n      if (this.props.hideStatusBar) {\n        StatusBar.setHidden(true, this.props.statusBarAnimation || 'slide');\n      }\n    }\n  };\n\n  _onTapHandlerStateChange = ({ nativeEvent }) => {\n    if (\n      this._drawerShown &&\n      nativeEvent.oldState === State.ACTIVE &&\n      this.props.drawerLockMode !== 'locked-open'\n    ) {\n      this.closeDrawer();\n    }\n  };\n\n  _handleRelease = nativeEvent => {\n    const { drawerWidth, drawerPosition, drawerType } = this.props;\n    const { containerWidth } = this.state;\n    let { translationX: dragX, velocityX, x: touchX } = nativeEvent;\n\n    if (drawerPosition !== 'left') {\n      // See description in _updateAnimatedEvent about why events are flipped\n      // for right-side drawer\n      dragX = -dragX;\n      touchX = containerWidth - touchX;\n      velocityX = -velocityX;\n    }\n\n    const gestureStartX = touchX - dragX;\n    let dragOffsetBasedOnStart = 0;\n\n    if (drawerType === 'front') {\n      dragOffsetBasedOnStart =\n        gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n    }\n\n    const startOffsetX =\n      dragX + dragOffsetBasedOnStart + (this._drawerShown ? drawerWidth : 0);\n    const projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n\n    const shouldOpen = projOffsetX > drawerWidth / 2;\n\n    if (shouldOpen) {\n      this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n    } else {\n      this._animateDrawer(startOffsetX, 0, velocityX);\n    }\n  };\n\n  _updateShowing = (showing: boolean) => {\n    this._drawerShown = showing;\n    this._accessibilityIsModalView.current &&\n      this._accessibilityIsModalView.current.setNativeProps({\n        accessibilityViewIsModal: showing,\n      });\n    this._pointerEventsView.current &&\n      this._pointerEventsView.current.setNativeProps({\n        pointerEvents: showing ? 'auto' : 'none',\n      });\n    const { drawerPosition, minSwipeDistance, edgeWidth } = this.props;\n    const fromLeft = drawerPosition === 'left';\n    // gestureOrientation is 1 if the expected gesture is from left to right and -1 otherwise\n    // e.g. when drawer is on the left and is closed we expect left to right gesture, thus\n    // orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n    // When drawer is closed we want the hitSlop to be horizontally shorter\n    // than the container size by the value of SLOP. This will make it only\n    // activate when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: showing ? undefined : edgeWidth }\n      : { right: 0, width: showing ? undefined : edgeWidth };\n    this._panGestureHandler.current &&\n      this._panGestureHandler.current.setNativeProps({\n        hitSlop,\n        activeOffsetX: gestureOrientation * minSwipeDistance,\n      });\n  };\n\n  _animateDrawer = (fromValue: ?number, toValue: number, velocity: number) => {\n    this.state.dragX.setValue(0);\n    this.state.touchX.setValue(\n      this.props.drawerPosition === 'left' ? 0 : this.state.containerWidth\n    );\n\n    if (fromValue != null) {\n      let nextFramePosition = fromValue;\n      if (this.props.useNativeAnimations) {\n        // When using native driver, we predict the next position of the animation\n        // because it takes one frame of a roundtrip to pass RELEASE event from\n        // native driver to JS before we can start animating. Without it, it is more\n        // noticable that the frame is dropped.\n        if (fromValue < toValue && velocity > 0) {\n          nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n        } else if (fromValue > toValue && velocity < 0) {\n          nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n        }\n      }\n      this.state.drawerTranslation.setValue(nextFramePosition);\n    }\n\n    const willShow = toValue !== 0;\n    this._updateShowing(willShow);\n    this._emitStateChanged(SETTLING, willShow);\n    if (this.props.hideStatusBar) {\n      StatusBar.setHidden(willShow, this.props.statusBarAnimation || 'slide');\n    }\n    Animated.spring(this.state.drawerTranslation, {\n      velocity,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations,\n    }).start(({ finished }) => {\n      if (finished) {\n        this._emitStateChanged(IDLE, willShow);\n        if (willShow) {\n          this.props.onDrawerOpen && this.props.onDrawerOpen();\n        } else {\n          this.props.onDrawerClose && this.props.onDrawerClose();\n        }\n      }\n    });\n  };\n\n  openDrawer = (options: DrawerMovementOptionType = {}) => {\n    this._animateDrawer(\n      undefined,\n      this.props.drawerWidth,\n      options.velocity ? options.velocity : 0\n    );\n\n    // We need to force the update, otherwise the overlay is not rerendered and it would not be clickable\n    this.forceUpdate();\n  };\n\n  closeDrawer = (options: DrawerMovementOptionType = {}) => {\n    this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n    // We need to force the update, otherwise the overlay is not rerendered and it would be still clickable\n    this.forceUpdate();\n  };\n\n  _renderOverlay = () => {\n    /* Overlay styles */\n    invariant(this._openValue, 'should be set');\n    const overlayOpacity = this._openValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    });\n    const dynamicOverlayStyles = {\n      opacity: overlayOpacity,\n      backgroundColor: this.props.overlayColor,\n    };\n\n    return (\n      <TapGestureHandler onHandlerStateChange={this._onTapHandlerStateChange}>\n        <Animated.View\n          pointerEvents={this._drawerShown ? 'auto' : 'none'}\n          ref={this._pointerEventsView}\n          style={[styles.overlay, dynamicOverlayStyles]}\n        />\n      </TapGestureHandler>\n    );\n  };\n\n  _renderDrawer = () => {\n    const {\n      drawerBackgroundColor,\n      drawerWidth,\n      drawerPosition,\n      drawerType,\n      drawerContainerStyle,\n      contentContainerStyle,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n    const drawerSlide = drawerType !== 'back';\n    const containerSlide = drawerType !== 'front';\n\n    // we rely on row and row-reverse flex directions to position the drawer\n    // properly. Apparently for RTL these are flipped which requires us to use\n    // the opposite setting for the drawer to appear from left or right according\n    // to the drawerPosition prop\n    const reverseContentDirection = I18nManager.isRTL ? fromLeft : !fromLeft;\n\n    const dynamicDrawerStyles = {\n      backgroundColor: drawerBackgroundColor,\n      width: drawerWidth,\n    };\n    const openValue = this._openValue;\n    invariant(openValue, 'should be set');\n\n    let containerStyles;\n    if (containerSlide) {\n      const containerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n        extrapolate: 'clamp',\n      });\n      containerStyles = {\n        transform: [{ translateX: containerTranslateX }],\n      };\n    }\n\n    let drawerTranslateX = 0;\n    if (drawerSlide) {\n      const closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n      drawerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: [closedDrawerOffset, 0],\n        extrapolate: 'clamp',\n      });\n    }\n    const drawerStyles = {\n      transform: [{ translateX: drawerTranslateX }],\n      flexDirection: reverseContentDirection ? 'row-reverse' : 'row',\n    };\n\n    return (\n      <Animated.View style={styles.main} onLayout={this._handleContainerLayout}>\n        <Animated.View\n          style={[\n            drawerType === 'front'\n              ? styles.containerOnBack\n              : styles.containerInFront,\n            containerStyles,\n            contentContainerStyle,\n          ]}\n          importantForAccessibility={\n            this._drawerShown ? 'no-hide-descendants' : 'yes'\n          }>\n          {typeof this.props.children === 'function'\n            ? this.props.children(this._openValue)\n            : this.props.children}\n          {this._renderOverlay()}\n        </Animated.View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          ref={this._accessibilityIsModalView}\n          accessibilityViewIsModal={this._drawerShown}\n          style={[styles.drawerContainer, drawerStyles, drawerContainerStyle]}>\n          <View style={dynamicDrawerStyles}>\n            {this.props.renderNavigationView(this._openValue)}\n          </View>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  _setPanGestureRef = ref => {\n    this._panGestureHandler.current = ref;\n    this.props.onGestureRef && this.props.onGestureRef(ref);\n  };\n\n  render() {\n    const {\n      drawerPosition,\n      drawerLockMode,\n      edgeWidth,\n      minSwipeDistance,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n\n    // gestureOrientation is 1 if the expected gesture is from left to right and -1 otherwise\n    // e.g. when drawer is on the left and is closed we expect left to right gesture, thus\n    // orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n\n    // When drawer is closed we want the hitSlop to be horizontally shorter\n    // than the container size by the value of SLOP. This will make it only\n    // activate when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: this._drawerShown ? undefined : edgeWidth }\n      : { right: 0, width: this._drawerShown ? undefined : edgeWidth };\n\n    return (\n      <PanGestureHandler\n        ref={this._setPanGestureRef}\n        hitSlop={hitSlop}\n        activeOffsetX={gestureOrientation * minSwipeDistance}\n        failOffsetY={[-15, 15]}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._openingHandlerStateChange}\n        enabled={\n          drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open'\n        }>\n        {this._renderDrawer()}\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  drawerContainer: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1001,\n    flexDirection: 'row',\n  },\n  containerInFront: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1002,\n  },\n  containerOnBack: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  main: {\n    flex: 1,\n    zIndex: 0,\n    overflow: 'hidden',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1000,\n  },\n});\n","import { TouchableNativeFeedback } from 'react-native';\n\nexport default TouchableNativeFeedback;\n","import React, { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { State, BaseButton } from '../GestureHandler';\nimport PropTypes from 'prop-types';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n};\n\nconst PublicPropTypes = {\n  // Decided to drop not used fields from RN's implementation.\n  // e.g. onBlur and onFocus as well as deprecated props.\n  accessible: PropTypes.bool,\n  accessibilityLabel: PropTypes.node,\n  accessibilityHint: PropTypes.string,\n  hitSlop: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    bottom: PropTypes.number,\n    right: PropTypes.number,\n  }),\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func,\n  onPressIn: PropTypes.func,\n  onPressOut: PropTypes.func,\n  onLayout: PropTypes.func,\n  onLongPress: PropTypes.func,\n  nativeID: PropTypes.string,\n  testID: PropTypes.string,\n  delayPressIn: PropTypes.number,\n  delayPressOut: PropTypes.number,\n  delayLongPress: PropTypes.number,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n};\n\nconst InternalPropTypes = {\n  extraButtonProps: PropTypes.object,\n  onStateChange: PropTypes.func,\n};\n\n/**\n * GenericTouchable is not intented to be used as it.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component {\n  static publicPropTypes = PublicPropTypes;\n  static internalPropTypes = InternalPropTypes;\n\n  // The prop type collections have to be outside of the class, as metro\n  // at this time does not compile `this.foo` correctly if HMR is enabled.\n  // https://github.com/software-mansion/react-native-gesture-handler/pull/406#issuecomment-453779977\n  static propTypes = {\n    ...InternalPropTypes,\n    ...PublicPropTypes,\n  };\n\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n    },\n  };\n\n  // timeout handlers\n  pressInTimeout;\n  pressOutTimeout;\n  longPressTimeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout);\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout);\n    clearTimeout(this.pressOutTimeout);\n    clearTimeout(this.longPressTimeout);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn && this.props.onPressIn();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut && this.props.onPressOut();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut && this.props.onPressOut();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange && this.props.onStateChange(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({ nativeEvent: { pointerInside } }) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({ nativeEvent }) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress && this.props.onPress();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress();\n  };\n\n  componentWillUnmount() {\n    // to prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // long press should no longer be detected\n    clearTimeout(this.longPressTimeout);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          this.props.disabled ? null : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={this.props.hitSlop}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n","import React from 'react';\nimport GenericTouchable from './GenericTouchable';\n\nconst TouchableWithoutFeedback = React.forwardRef((props, ref) => (\n  <GenericTouchable ref={ref} {...props} />\n));\n\nTouchableWithoutFeedback.defaultProps = GenericTouchable.defaultProps;\n\nTouchableWithoutFeedback.propTypes = GenericTouchable.publicPropTypes;\n\nexport default TouchableWithoutFeedback;\n","import { Animated, Easing, StyleSheet, View } from 'react-native';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    style: PropTypes.any,\n    activeOpacity: PropTypes.number,\n  };\n\n  // opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null ? 1 : childStyle.opacity;\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value, duration) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: this.opacity,\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    activeOpacity: PropTypes.number,\n    underlayColor: PropTypes.string,\n    style: PropTypes.any,\n    onShowUnderlay: PropTypes.func,\n    onHideUnderlay: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay && this.props.onHideUnderlay();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(\n        child.props.style,\n        this.state.extraChildStyle\n      ),\n    });\n  }\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"sourceRoot":""}