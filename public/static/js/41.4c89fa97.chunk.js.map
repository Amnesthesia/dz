{"version":3,"sources":["hooks/useRestriction.ts","navigation/Authenticated.tsx"],"names":["QUERY_PERMISSIONS","gql","useRestriction","permission","currentDropzone","useAppSelector","state","global","data","useQuery","variables","dropzoneId","Number","id","fetchPolicy","dropzone","currentUser","permissions","includes","ManifestTab","React","ProfileTab","SettingsTab","UsersTab","BottomTab","createBottomTabNavigator","AuthenticatedTabBar","theme","useTheme","canViewUsers","canManageDropzone","Navigator","initialRouteName","tabBarOptions","activeTintColor","inactiveBackgroundColor","colors","primary","activeBackgroundColor","inactiveTintColor","showLabel","Screen","name","component","options","tabBarIcon","focused","color","size","unmountOnBlur"],"mappings":"0KAIMA,EAAoBC,YAAH,8SAoBR,SAASC,EAAeC,GAA8B,IAAD,MAC1DC,EAAoBC,aAAe,SAAAC,GAAK,OAAIA,EAAMC,UAAlDH,gBACAI,EAASC,mBAAST,EAAmB,CAC3CU,UAAW,CACTC,WAAYC,OAAM,MAACR,OAAD,EAACA,EAAiBS,KAEtCC,YAAa,gBAJPN,KAOR,OAAW,MAAJA,GAAA,SAAAA,EAAMO,WAAN,WAAgBC,cAAhB,WAA6BC,kBAA7B,IAA0CC,SAASf,MAAsB,I,iCCjClF,6FAKMgB,EAAcC,QAAW,kBAAM,wDAE/BC,GADaD,QAAW,kBAAM,wDACjBA,QAAW,kBAAM,yDAC9BE,EAAcF,QAAW,kBAAM,wDAC/BG,EAAWH,QAAW,kBAAM,kCAa5BI,EAAYC,cAEH,SAASC,IACtB,IAAMC,EAAQC,cAERC,EAAe3B,YAAe,YAE9B4B,GADiB5B,YAAe,iBACZA,YAAe,mBAEzC,OACE,gBAACsB,EAAUO,UAAX,CACEC,iBAAiB,WACjBC,cAAe,CACbC,gBAAiB,UACjBC,wBAAyBR,EAAMS,OAAOC,QACtCC,sBAAuBX,EAAMS,OAAOC,QACpCE,kBAAmB,UACnBC,WAAW,IAGb,gBAAChB,EAAUiB,OAAX,CACEC,KAAK,WACLC,UAAWxB,EACXyB,QAAS,CACPC,WAAY,cAAGC,QAAH,IAAYC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,KAAnB,OAA8B,gBAAC,IAAD,CAAwBN,KAAK,WAAWK,MAAOA,EAAOC,KAAMA,KACtGC,eAAe,KAGnB,gBAACzB,EAAUiB,OAAX,CACEC,KAAK,UACLC,UAAWtB,EACXuB,QAAS,CACPC,WAAY,gBAAGG,EAAH,EAAGA,KAAMD,EAAT,EAASA,MAAT,EAAgBD,QAAhB,OAA8B,gBAAC,IAAD,CAA6BE,OAAMD,QAASL,KAAK,oBAC3FO,eAAe,MAGjB,EAUApB,GACA,gBAACL,EAAUiB,OAAX,CACEC,KAAK,QACLC,UAAWpB,EACXqB,QAAS,CACPC,WAAY,gBAAGG,EAAH,EAAGA,KAAMD,EAAT,EAASA,MAAT,EAAgBD,QAAhB,OAA8B,gBAAC,IAAD,CAA6BE,OAAMD,QAASL,KAAK,mBAC3FO,eAAe,KAKnBnB,GACA,gBAACN,EAAUiB,OAAX,CACEC,KAAK,WACLC,UAAWrB,EACXsB,QAAS,CACPC,WAAY,gBAAGG,EAAH,EAAGA,KAAMD,EAAT,EAASA,MAAT,EAAgBD,QAAhB,OAA8B,gBAAC,IAAD,CAA6BE,OAAMD,QAASL,KAAK","file":"static/js/41.4c89fa97.chunk.js","sourcesContent":["import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { useAppSelector } from \"../redux\";\n\nconst QUERY_PERMISSIONS = gql`\nquery QueryPermissions($dropzoneId: Int!) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n      primaryColor\n      secondaryColor\n      \n      currentUser {\n        id\n        role {\n          id\n          name\n        }\n        permissions\n      }\n\n    }\n  }`;\n\nexport default function useRestriction(permission: string): boolean {\n  const { currentDropzone } = useAppSelector(state => state.global);\n  const { data } = useQuery(QUERY_PERMISSIONS, {\n    variables: {\n      dropzoneId: Number(currentDropzone?.id)\n    },\n    fetchPolicy: \"cache-first\"\n  });\n\n  return data?.dropzone?.currentUser?.permissions?.includes(permission as any) || false;\n}","import { useTheme } from 'react-native-paper';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as React from 'react';\n\nconst ManifestTab = React.lazy(() => import(\"./tabs/manifest\"));\nconst PackingTab = React.lazy(() => import(\"./tabs/packing\"));\nconst ProfileTab = React.lazy(() => import(\"./tabs/profile\"));\nconst SettingsTab = React.lazy(() => import(\"./tabs/settings\"));\nconst UsersTab = React.lazy(() => import(\"./tabs/users\"));\n\nimport useRestriction from '../hooks/useRestriction';\n\nexport type IAuthenticatedTabParams = {\n  Manifest: undefined;\n  Profile: undefined;\n  Packing: undefined;\n  Users: undefined;\n  Settings: undefined;\n}\n\n\nconst BottomTab = createBottomTabNavigator<IAuthenticatedTabParams>();\n\nexport default function AuthenticatedTabBar() {\n  const theme = useTheme();\n\n  const canViewUsers = useRestriction(\"readUser\");\n  const canCreatePacks = useRestriction(\"createPackjob\");\n  const canManageDropzone = useRestriction(\"updateDropzone\");\n  \n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Manifest\"\n      tabBarOptions={{\n        activeTintColor: \"#FFFFFF\",\n        inactiveBackgroundColor: theme.colors.primary,\n        activeBackgroundColor: theme.colors.primary,\n        inactiveTintColor: \"#CCCCCC\",\n        showLabel: false,\n      }}\n    >\n      <BottomTab.Screen\n        name=\"Manifest\"\n        component={ManifestTab}\n        options={{\n          tabBarIcon: ({ focused, color, size }) => <MaterialCommunityIcons name=\"airplane\" color={color} size={size} />,\n          unmountOnBlur: true,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Profile\"\n        component={ProfileTab}\n        options={{\n          tabBarIcon: ({ size, color, focused }) => <MaterialCommunityIcons {...{size, color }} name=\"account-circle\" />,\n          unmountOnBlur: true,\n        }}\n      />\n      { false && canCreatePacks && (\n        <BottomTab.Screen\n          name=\"Packing\"\n          component={PackingTab}\n          options={{\n            tabBarIcon: ({ size, color, focused }) => <MaterialCommunityIcons {...{size, color }} name=\"parachute\" />,\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n      { canViewUsers && (\n        <BottomTab.Screen\n          name=\"Users\"\n          component={UsersTab}\n          options={{\n            tabBarIcon: ({ size, color, focused }) => <MaterialCommunityIcons {...{size, color }} name=\"account-group\" />,\n            unmountOnBlur: true,\n          }}\n        />\n      )}\n      \n      { canManageDropzone && (\n        <BottomTab.Screen\n          name=\"Settings\"\n          component={SettingsTab}\n          options={{\n            tabBarIcon: ({ size, color, focused }) => <MaterialCommunityIcons {...{size, color }} name=\"account-cog\" />\n          }}\n        />\n      )}\n    </BottomTab.Navigator>\n  );\n}\n\n"],"sourceRoot":""}