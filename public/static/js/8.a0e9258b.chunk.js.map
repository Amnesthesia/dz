{"version":3,"sources":["node_modules/date-fns/esm/_lib/requiredArgs/index.js","node_modules/date-fns/esm/toDate/index.js","components/NoResults.tsx","node_modules/date-fns/esm/_lib/toInteger/index.js","components/RigSelect.tsx","node_modules/date-fns/esm/addMilliseconds/index.js","node_modules/date-fns/esm/startOfDay/index.js","components/JumpTypeSelect.tsx","components/TicketTypeSelect.tsx","components/forms/slot/SlotForm.tsx","components/dialogs/ManifestUserDialog.tsx","screens/authenticated/manifest/GetStarted.tsx","node_modules/date-fns/esm/addMinutes/index.js","node_modules/date-fns/esm/differenceInMilliseconds/index.js","node_modules/date-fns/esm/differenceInMinutes/index.js","components/GcaChip.tsx","components/LoadMasterChip.tsx","components/PilotChip.tsx","components/PlaneChip.tsx","screens/authenticated/manifest/LoadCard.tsx","screens/authenticated/manifest/ManifestScreen.tsx"],"names":["requiredArgs","required","args","length","TypeError","toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","NoResults","title","subtitle","style","styles","empty","textAlign","StyleSheet","create","container","flex","padding","display","fab","position","margin","right","bottom","alignItems","justifyContent","width","height","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","QUERY_RIGS","gql","RigSelect","props","useState","isMenuOpen","setMenuOpen","globalState","useAppSelector","state","global","useLazyQuery","fetchRigs","data","useEffect","userId","dropzoneId","variables","currentDropzone","id","value","autoSelectFirst","dropzone","dropzoneUser","availableRigs","onSelect","JSON","stringify","onDismiss","visible","anchor","Item","onPress","make","model","canopySize","description","left","Icon","icon","map","rig","key","user","addMilliseconds","dirtyDate","dirtyAmount","timestamp","amount","startOfDay","date","setHours","QUERY_JUMP_TYPES","JumpTypeSelect","useQuery","allowedForUserId","loading","refetch","Subheader","Menu","name","jumpTypes","jumpType","QUERY_TICKET_TYPES","TicketTypeSelect","allowManifestingSelf","ticketTypes","ticketType","actions","slice","SlotForm","slotForm","dispatch","useAppDispatch","React","fields","exitWeight","setField","rigs","isEdit","original","allowedToManifestOthers","useRestriction","HelperText","type","error","extras","ScrollView","horizontal","ticketAddons","extra","Chip","selected","some","filter","cost","Divider","TextInput","field","mode","label","keyboardType","Affix","text","onChangeText","newValue","isTandem","passengerName","passengerExitWeight","marginBottom","MUTATION_CREATE_SLOT","ManifestUserDialog","useMutation","mutationCreateSlot","mutationData","validate","useCallback","hasErrors","setFieldError","onManifest","a","async","jumpTypeId","extraIds","loadId","load","rigId","ticketTypeId","result","createSlot","fieldErrors","message","errors","snackbarActions","showSnackbar","variant","onSuccess","Portal","Dialog","open","maxHeight","ProgressBar","indeterminate","color","theme","colors","accent","Title","ScrollArea","Actions","Button","reset","onClose","GetStarted","hasPlanes","hasTicketTypes","palette","isPublic","usePalette","separator","lightColor","darkColor","success","fontSize","fontWeight","marginVertical","addMinutes","differenceInMilliseconds","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","QUERY_DROPZONE_USERS","GCAChip","permissions","marginHorizontal","dropzoneUsers","edges","edge","node","LoadMasterChip","allowed","slots","slot","PilotChip","QUERY_PLANES","PlaneChip","planes","plane","QUERY_LOAD","MUTATION_UPDATE_LOAD","LoadCard","isExpanded","setExpanded","isDispatchOpen","setDispatchOpen","navigation","useNavigation","loadNumber","canManifest","mutationUpdateLoad","mutation","updatePilot","pilot","pilotId","updateGCA","gca","gcaId","updatePlane","planeId","updateLoadMaster","lm","loadMasterId","updateCall","minutes","dispatchTime","dispatchAt","onLanded","hasLanded","canUpdateLoad","canEditSelf","canEditOthers","maxSlots","Card","opacity","elevation","flexDirection","Text","flexGrow","IconButton","slotsMultipleForm","navigate","Content","undefined","overflow","loadMaster","DataTable","Header","numeric","slotGroup","groupNumber","Row","disabled","currentUser","onSlotGroupPress","onSlotPress","pointerEvents","Cell","Paragraph","slotText","altitude","Array","from","v","i","backgroundColor","diff","differenceInMinutes","marginLeft","Boolean","QUERY_DROPZONE","ManifestScreen","isDialogOpen","setDialogOpen","earliestTimestamp","fetchPolicy","isFocused","useIsFocused","isSetupComplete","globalActions","setDropzone","setUser","primaryColor","primary","setPrimaryColor","secondaryColor","canCreateLoad","hasLicense","hasMembership","hasRigInspection","hasReserveInDate","hasExitWeight","hasCredits","Dimensions","get","loads","contentContainerStyle","numColumns","refreshing","onRefresh","refreshControl","RefreshControl","renderItem","item","index","isOpen","isFull","setOriginal","setFromSlots","FAB","small"],"mappings":"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","file":"static/js/8.a0e9258b.chunk.js","sourcesContent":["export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Paragraph, Title } from \"react-native-paper\";\nimport { View } from \"./Themed\";\n\nexport default function NoResults({ title, subtitle }: { title: string, subtitle: string}) {\n  return (\n    <View style={styles.empty}>\n      <Title>{title}</Title>\n      <Paragraph style={{ textAlign: \"center\" }}>\n        {subtitle}\n      </Paragraph>\n    </View>\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 8,\n    display: \"flex\"\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n  empty: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: \"100%\"\n  }\n});","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import { useLazyQuery, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useEffect, useState } from \"react\";\nimport { List, Menu } from \"react-native-paper\";\nimport { Rig, Query } from \"../graphql/schema\";\nimport { useAppSelector } from \"../redux\";\n\ninterface IRigSelect {\n  dropzoneId?: number;\n  userId?: number;\n  value?: Rig | null;\n  required?: boolean;\n  autoSelectFirst?: boolean;\n  onSelect(rig: Rig): void;\n}\n\n\nconst QUERY_RIGS = gql`\n  query QueryAvailableRigs(\n    $dropzoneId: Int!\n    $userId: Int!\n  ) {\n    dropzone(id: $dropzoneId) {\n      id\n      dropzoneUser(userId: $userId) {\n        id\n        availableRigs {\n          id\n          make\n          model\n          canopySize\n          serial\n\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function RigSelect(props: IRigSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const globalState = useAppSelector(state => state.global);\n\n  const [fetchRigs, { data, }] = useLazyQuery<Query>(QUERY_RIGS);\n\n  useEffect(() => {\n    if (props.userId && props.dropzoneId) {\n      fetchRigs({\n        variables: {\n          dropzoneId: Number(globalState.currentDropzone?.id),\n          userId: Number(props.userId)\n        }\n      });\n    }\n  }, [props.userId, props.dropzoneId])\n\n  useEffect(() => {\n    if (!props.value && props.autoSelectFirst && data?.dropzone?.dropzoneUser?.availableRigs?.length) {\n      props.onSelect(data.dropzone.dropzoneUser.availableRigs[0]);\n    }\n  }, [props.autoSelectFirst, JSON.stringify(data?.dropzone?.dropzoneUser?.availableRigs)])\n  \n  return (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <List.Item\n          onPress={() => {\n            setMenuOpen(true);\n          }}\n          title={\n            props.value\n            ? `${props.value?.make} ${props.value?.model} (${props.value?.canopySize || \"?\"}sqft)`\n            : 'Select rig'\n          }\n          description={!props.required ? \"Optional\" : null}\n          left={() => <List.Icon icon=\"parachute\" />}\n        />\n      }>\n      {\n        data?.dropzone?.dropzoneUser?.availableRigs?.map((rig) => \n          <Menu.Item\n            key={`rig-select-${rig.id}`}\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(rig);\n            }}\n            title={\n              `${rig?.make} ${rig?.model} (${rig?.canopySize} sqft) ${!rig.user ? \"[DROPZONE RIG]\": \"\"}`\n            }\n          />\n        )\n      }\n    </Menu>\n  )\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\nimport { List, Menu } from \"react-native-paper\";\nimport { JumpType, Query } from \"../graphql/schema\";\nimport { useAppSelector } from \"../redux\";\n\n\ninterface IJumpTypeSelect {\n  value?: JumpType | null;\n  required?: boolean;\n  userId?: number | null;\n  onSelect(jt: JumpType): void;\n}\n\nconst QUERY_JUMP_TYPES = gql`\n  query JumpTypes($allowedForUserId: Int) {\n    jumpTypes(allowedForUserId: $allowedForUserId) {\n      id\n      name\n    }\n  }\n`;\n\nexport default function JumpTypeSelect(props: IJumpTypeSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_JUMP_TYPES, {\n    variables: {\n      allowedForUserId: props.userId,\n    }\n  });\n  return (\n    <>\n    <List.Subheader>\n      Jump type\n    </List.Subheader>\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <List.Item\n          onPress={() => {\n            setMenuOpen(true);\n          }}\n          title={\n            props.value?.name || \"Please select jump type\"\n          }\n          description={!props.required ? \"Optional\" : null}\n        />\n      }>\n      {\n        data?.jumpTypes?.map((jumpType) => \n          <Menu.Item\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(jumpType);\n            }}\n            title={\n              jumpType.name || \"-\"\n            }\n          />\n        )\n      }\n    </Menu>\n    </>\n  )\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\nimport { List, Menu } from \"react-native-paper\";\nimport { TicketType, Query } from \"../graphql/schema\";\nimport { useAppSelector } from \"../redux\";\n\n\ninterface ITicketTypeSelect {\n  value?: TicketType | null;\n  required?: boolean;\n  allowManifestingSelf?: boolean | null;\n  onSelect(jt: TicketType): void;\n}\n\nconst QUERY_TICKET_TYPES = gql`\n  query TicketTypes($allowManifestingSelf: Boolean, $dropzoneId: Int!) {\n    ticketTypes(allowManifestingSelf: $allowManifestingSelf, dropzoneId: $dropzoneId) {\n      id\n      name\n      isTandem\n      cost\n\n      extras {\n        id\n        name\n        cost\n      }\n    }\n  }\n`;\n\nexport default function TicketTypeSelect(props: ITicketTypeSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const globalState = useAppSelector(state => state.global);\n\n  const { data, loading, refetch } = useQuery<Query>(QUERY_TICKET_TYPES, {\n    variables: {\n      dropzoneId: Number(globalState.currentDropzone?.id),\n      allowManifestingSelf: props.allowManifestingSelf,\n    }\n  });\n\n  \n  return (\n    <>\n      <List.Subheader>\n        Ticket\n      </List.Subheader>\n      <Menu\n        onDismiss={() => setMenuOpen(false)}\n        visible={isMenuOpen}\n        anchor={\n          <List.Item\n            onPress={() => {\n              setMenuOpen(true);\n            }}\n            title={\n              props.value?.name || \"Please select ticket type\"\n            }\n            description={!props.required ? \"Optional\" : null}\n          />\n        }>\n        {\n          data?.ticketTypes?.map((ticketType) => \n            <Menu.Item\n              key={`ticket-type-select-${ticketType.id}`}\n              onPress={() => {\n                setMenuOpen(false);\n                props.onSelect(ticketType);\n              }}\n              title={\n                ticketType.name || \"-\"\n              }\n            />\n          )\n        }\n      </Menu>\n    </>\n  )\n}","import * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { TextInput, HelperText, Divider, Chip, List } from 'react-native-paper';\nimport { useAppSelector, useAppDispatch } from '../../../redux';\n\n\nimport slice from \"./slice\";\nimport JumpTypeSelect from '../../JumpTypeSelect';\nimport TicketTypeSelect from '../../TicketTypeSelect';\nimport useRestriction from '../../../hooks/useRestriction';\nimport RigSelect from '../../RigSelect';\n\nconst { actions } = slice;\nexport default function SlotForm() {\n  const state = useAppSelector(state => state.slotForm);\n  const dispatch = useAppDispatch();\n  const globalState = useAppSelector(state => state.global);\n\n  React.useEffect(() => {\n    if (state.fields.user?.value) {\n      if (!state.fields.exitWeight.value) {\n        dispatch(\n          actions.setField([\"exitWeight\", Number(state.fields.user.value.exitWeight || 60)])\n        );\n      }\n\n      if (!state.fields.rig.value && state.fields.user.value.rigs?.length) {\n        dispatch(\n          actions.setField([\"rig\", state.fields.user.value.rigs[0]])\n        );\n      }\n\n    }\n  }, [state.fields?.user?.value?.id]);\n\n  const isEdit = state?.original?.id;\n\n  const allowedToManifestOthers = useRestriction(\n    isEdit ? \"updateUserSlot\" : \"createUserSlot\"\n  )\n\n  return ( \n    <> \n      <JumpTypeSelect\n        value={state.fields.jumpType.value}\n        required\n        userId={Number(state?.fields?.user?.value?.id) || null}\n        onSelect={(value) => dispatch(actions.setField([\"jumpType\", value]))}\n      />\n      <HelperText type={!!state.fields.jumpType.error ? \"error\" : \"info\"}>\n        { state.fields.jumpType.error || \"\" }\n      </HelperText>\n\n      <TicketTypeSelect\n        value={state.fields.ticketType.value}\n        required\n        allowManifestingSelf={!allowedToManifestOthers}\n        onSelect={(value) => dispatch(actions.setField([\"ticketType\", value]))}\n      />\n      <HelperText type={!!state.fields.ticketType.error ? \"error\" : \"info\"}>\n        { state.fields.ticketType.error || \"\" }\n      </HelperText>\n\n      {\n        !state?.fields?.ticketType?.value?.extras?.length ? null:  (\n          <List.Subheader>\n            Ticket addons\n          </List.Subheader>\n        )\n      }\n      <ScrollView horizontal style={styles.ticketAddons}>\n        {state?.fields?.ticketType?.value?.extras?.map((extra) =>\n          <Chip\n            selected={state?.fields?.extras.value?.some(({id}) => id === extra.id)}\n            onPress={\n              state?.fields?.extras.value?.some(({id}) => id === extra.id)\n              ? () => dispatch(actions.setField([\"extras\", state?.fields?.extras.value?.filter(({ id }) => id !== extra.id)]))\n              : () => dispatch(actions.setField([\"extras\", [...(state?.fields?.extras?.value || []), extra]]))\n            }\n          >\n            {`${extra.name} ($${extra.cost})`}\n          </Chip>\n        )}\n      </ScrollView>\n      <HelperText type={!!state.fields.extras.error ? \"error\" : \"info\"}>\n        { state.fields.extras.error || \"\" }\n      </HelperText>\n      <Divider />\n      { !state.fields.user ? null : <RigSelect\n        value={state.fields.rig.value}\n        userId={Number(state.fields.user?.value?.id)}\n        dropzoneId={Number(globalState.currentDropzone?.id)}\n        onSelect={(value) => dispatch(actions.setField([\"jumpType\", value]))}\n      />}\n      <HelperText type={!!state.fields.rig.error ? \"error\" : \"info\"}>\n        { state.fields.rig.error || \"\" }\n      </HelperText>\n      <TextInput\n        style={styles.field}\n        mode=\"outlined\"\n        label=\"Exit weight\"\n        error={!!state.fields.exitWeight.error}\n        value={state.fields.exitWeight?.value?.toString() || \"\"}\n        keyboardType=\"numbers-and-punctuation\"\n        right={() => <TextInput.Affix text=\"kg\" />}\n        onChangeText={(newValue) => dispatch(actions.setField([\"exitWeight\", Number(newValue)]))}\n      />\n      \n      <HelperText type={!!state.fields.exitWeight.error ? \"error\" : \"info\"}>\n        { state.fields.exitWeight.error || \"\" }\n      </HelperText>\n\n      {\n        !state.fields.ticketType.value?.isTandem ? null : (\n          <>\n            <List.Subheader>Passenger</List.Subheader>\n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Passenger name\"\n              error={!!state.fields.passengerName.error}\n              value={state.fields.passengerName?.value?.toString() || \"\"}\n              onChangeText={(newValue) => dispatch(actions.setField([\"passengerName\", newValue]))}\n            />\n            \n            <TextInput\n              style={styles.field}\n              mode=\"outlined\"\n              label=\"Passenger exit weight\"\n              error={!!state.fields.passengerExitWeight.error}\n              value={state.fields.passengerExitWeight.value?.toString() || \"\"}\n              onChangeText={(newValue) => dispatch(actions.setField([\"passengerExitWeight\", Number(newValue)]))}\n            />\n          </>\n        )\n      }\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fields: {\n    flex: 1,\n    \n  },\n  field: {\n    marginBottom: 8,\n  },\n  ticketAddons: {\n    marginBottom: 8\n  }\n});\n","import { gql, useMutation } from \"@apollo/client\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { ScrollView } from \"react-native\";\nimport { Button, Dialog, Portal, ProgressBar } from \"react-native-paper\";\nimport { Load, Mutation, User } from \"../../graphql/schema\";\nimport usePalette from \"../../hooks/usePalette\";\nimport { slotForm, snackbarActions, useAppDispatch, useAppSelector } from \"../../redux\";\nimport SlotForm from \"../forms/slot/SlotForm\";\ninterface IManifestUserDialog {\n  open?: boolean;\n  onClose(): void;\n  onSuccess(): void;\n}\n\nconst MUTATION_CREATE_SLOT = gql`\n  mutation CreateSlot(\n    $jumpTypeId: Int\n    $extraIds: [Int!]\n    $loadId: Int\n    $rigId: Int\n    $ticketTypeId: Int\n    $userId: Int\n    $exitWeight: Float\n    $passengerName: String\n    $passengerExitWeight: Float\n  ) {\n    createSlot(\n      input: {\n        attributes: {\n          jumpTypeId: $jumpTypeId\n          extraIds: $extraIds\n          loadId: $loadId\n          rigId: $rigId\n          ticketTypeId: $ticketTypeId\n          userId: $userId\n          exitWeight: $exitWeight\n          passengerExitWeight: $passengerExitWeight\n          passengerName: $passengerName\n        }\n      }\n    ) {\n      errors\n      fieldErrors {\n        field\n        message\n      }\n      slot {\n        id\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n        exitWeight\n        load {\n          id\n          name\n          createdAt\n          dispatchAt\n          hasLanded\n          maxSlots\n          isFull\n          isOpen\n          plane {\n            id\n            name\n          }\n          gca {\n            id\n            user {\n              id\n              name\n            }\n          }\n          pilot {\n            id\n            user {\n              id\n              name\n            }\n          }\n          loadMaster {\n            id\n            user {\n              id\n              name\n            }\n          }\n          slots {\n            id\n            createdAt\n            user {\n              id\n              name\n            }\n            passengerName\n            passengerExitWeight\n            ticketType {\n              id\n              name\n              isTandem\n              altitude\n            }\n            jumpType {\n              id\n              name\n            }\n            extras {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function ManifestUserDialog(props: IManifestUserDialog) {\n  const dispatch = useAppDispatch();\n  const state = useAppSelector(state => state.slotForm);\n  const globalState = useAppSelector(state => state.global);\n  const [mutationCreateSlot, mutationData] = useMutation<Mutation>(MUTATION_CREATE_SLOT);\n\n  const validate = useCallback(() => {\n    let hasErrors = false;\n    if (!state.fields.jumpType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        slotForm.setFieldError([\"jumpType\", \"You must specify the type of jump\"])\n      );\n    }\n\n    if (!state.fields.ticketType.value?.id) {\n      hasErrors = true;\n      dispatch(\n        slotForm.setFieldError([\"ticketType\", \"You must select a ticket type to manifest\"])\n      );\n    }\n\n    return !hasErrors;\n  }, [JSON.stringify(state.fields)]);\n  const onManifest = useCallback(async () => {\n\n    if (!validate()) {\n      return;\n    }\n    try {\n      const result = await mutationCreateSlot({\n        variables: {\n          jumpTypeId: Number(state.fields.jumpType.value?.id),\n          extraIds: state.fields.extras?.value?.map(({ id }) => Number(id)),\n          loadId: Number(state.fields.load.value?.id),\n          rigId: !state.fields.rig.value?.id ? null : Number(state.fields.rig.value?.id),\n          ticketTypeId: Number(state.fields.ticketType?.value?.id),\n          userId: Number(state.fields.user?.value?.id),\n          exitWeight: state.fields.exitWeight.value,\n          ...!state.fields.ticketType.value?.isTandem\n            ? {}\n            : {\n                passengerName: state.fields.passengerName?.value,\n                passengerExitWeight: state.fields.passengerExitWeight?.value,\n              }\n        }\n      });\n\n      result.data?.createSlot?.fieldErrors?.map(({ field, message }) => {\n        switch (field) {\n          case \"jump_type\":\n            return dispatch(slotForm.setFieldError([\"jumpType\", message]));\n          case \"load\":\n            return dispatch(slotForm.setFieldError([\"load\", message]));\n          case \"credits\":\n          case \"extras\":\n          case \"extra_ids\":\n            return dispatch(slotForm.setFieldError([\"extras\", message]));\n          case \"ticket_type\":\n            return dispatch(slotForm.setFieldError([\"ticketType\", message]));\n          case \"rig\":\n            return dispatch(slotForm.setFieldError([\"rig\", message]));\n          case \"user\":\n            return dispatch(slotForm.setFieldError([\"user\", message]));\n          case \"exit_weight\":\n            return dispatch(slotForm.setFieldError([\"exitWeight\", message]));\n        }\n      });\n      if (result?.data?.createSlot?.errors?.length) {\n        return dispatch(snackbarActions.showSnackbar({ message: result?.data?.createSlot?.errors[0], variant: \"error\" }));\n      }\n      if (!result.data?.createSlot?.fieldErrors?.length) {\n        props.onSuccess();\n      }\n\n    } catch(error) {\n      dispatch(snackbarActions.showSnackbar({ message: error.message, variant: \"error\" }));\n    } \n  }, [JSON.stringify(state.fields), mutationCreateSlot, props.onSuccess])\n  \n  return (\n    <Portal>\n      <Dialog visible={!!props.open} style={{ maxHeight: 500 }}>\n        <ProgressBar indeterminate visible={mutationData.loading} color={globalState.theme.colors.accent} />\n        <Dialog.Title>\n          {`Manifest ${state?.fields?.user?.value?.name} on ${state.fields.load?.value?.name}`}\n        </Dialog.Title>\n        <Dialog.ScrollArea>\n          <ScrollView>\n            <SlotForm />\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions style={{ justifyContent: \"flex-end\"}}>\n          <Button\n            onPress={() => {\n              dispatch(slotForm.reset());\n              props.onClose();\n            }}\n          >\n            Cancel\n          </Button>\n          <Button onPress={onManifest}>\n            Manifest\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  )\n}","import { useQuery } from '@apollo/client';\nimport { Ionicons, MaterialIcons } from '@expo/vector-icons';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, Menu } from 'react-native-paper';\n\nimport { Text, View } from '../../../components/Themed';\nimport { Query } from '../../../graphql/schema';\nimport usePalette from '../../../hooks/usePalette';\nimport { useAppSelector } from '../../../redux';\n\n\ninterface IGetStartedProps {\n  hasPlanes: boolean;\n  hasTicketTypes: boolean;\n  isPublic: boolean;\n}\nexport default function GetStarted({\n  hasPlanes,\n  hasTicketTypes,\n  isPublic,\n}: IGetStartedProps) {\n  const palette = usePalette();\n\n  return (\n      <View style={{ width: \"70%\"}}>\n      <Text style={styles.title}>Set up dropzone</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n        <List.Item\n          title=\"Create dropzone\"\n          left={\n            () =>\n              <List.Icon\n                color={palette.success}\n                icon=\"check\"\n              />\n          }\n        >\n        </List.Item>\n        <List.Item\n          title=\"Add a plane\"\n          left={\n            () =>\n              !hasPlanes ?\n                <List.Icon\n                  color={palette.error}\n                  icon=\"close\"\n                /> :\n                <List.Icon\n                  color={palette.success}\n                  icon=\"check\"\n                />\n          }\n        />\n        <List.Item\n          title=\"Configure jump tickets\"\n          left={\n            () =>\n            !hasTicketTypes ?\n              <List.Icon\n                color={palette.error}\n                icon=\"close\"\n              /> :\n              <List.Icon\n                color={palette.success}\n                icon=\"check\"\n              />\n          }\n        />\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n});\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { values } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Chip, List, Menu } from \"react-native-paper\";\nimport { DropzoneUser, Plane, Query, User } from \"../graphql/schema\";\nimport useRestriction from \"../hooks/useRestriction\";\nimport { useAppSelector } from \"../redux\";\n\ninterface IGCAChipSelect {\n  dropzoneId: number;\n  value?: User | null;\n  onSelect(user: User): void;\n}\n\n\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers(\n    $dropzoneId: Int!\n    $permissions: [Permission!]\n  ) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function GCAChip(props: IGCAChipSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const globalState = useAppSelector(state => state.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(globalState.currentDropzone?.id),\n      permissions: [\"actAsGCA\"]\n    }\n  });\n  const allowed = useRestriction(\"updateLoad\");\n\n  return (\n    !allowed ?\n    <Chip mode=\"outlined\" icon=\"radio-handheld\">\n      {props.value?.name || \"No gca\"}\n    </Chip> : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"radio-handheld\"\n          style={{ marginHorizontal: 4 }}\n          onPress={() => setMenuOpen(true)}\n        >\n          {props.value?.id ? props.value?.name : \"No gca\"}\n        </Chip>\n      }>\n      {\n        data?.dropzone?.dropzoneUsers?.edges?.map((edge) => \n          <Menu.Item\n            key={`gca-chip-${edge?.node?.id}`}\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(edge?.node?.user as User);\n            }}\n            title={\n              edge?.node?.user?.name\n            }\n          />\n        )\n      }\n    </Menu>\n  ))\n}","import { values } from \"lodash\";\nimport React, { useState } from \"react\";\nimport { Chip, List, Menu } from \"react-native-paper\";\nimport { Slot, User } from \"../graphql/schema\";\nimport useRestriction from \"../hooks/useRestriction\";\n\ninterface ILoadMasterChipSelect {\n  dropzoneId: number;\n  value?: User | null;\n  slots: Slot[];\n  onSelect(user: User): void;\n}\n\n\n\n\nexport default function LoadMasterChip(props: ILoadMasterChipSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const allowed = useRestriction(\"updateLoad\");\n\n  return (\n    !allowed ?\n    <Chip mode=\"outlined\" icon=\"radio-handheld\">\n      {props.value?.name || \"No loadmaster\"}\n    </Chip> : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"parachute\"\n          style={{ marginHorizontal: 4 }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {props.value?.id ? props.value?.name : \"No loadmaster\"}\n        </Chip>\n      }>\n      {\n        props.slots?.map((slot) => \n          <Menu.Item\n            key={`lm-chip-${slot.id}`}\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(slot.user as User);\n            }}\n            title={\n              slot?.user?.name\n            }\n          />\n        )\n      }\n    </Menu>\n  ))\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\nimport { Chip, List, Menu } from \"react-native-paper\";\nimport { Query, User } from \"../graphql/schema\";\nimport useRestriction from \"../hooks/useRestriction\";\nimport { useAppSelector } from \"../redux\";\n\ninterface IPilotChipSelect {\n  dropzoneId: number;\n  value?: User | null;\n  onSelect(user: User): void;\n}\n\n\n\nconst QUERY_DROPZONE_USERS = gql`\n  query QueryDropzoneUsers(\n    $dropzoneId: Int!\n    $permissions: [Permission!]\n  ) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n\n      dropzoneUsers(permissions: $permissions) {\n        edges {\n          node {\n            id\n            role {\n              id\n              name\n            }\n            user {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function PilotChip(props: IPilotChipSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const globalState = useAppSelector(state => state.global);\n\n  const { data } = useQuery<Query>(QUERY_DROPZONE_USERS, {\n    variables: {\n      dropzoneId: Number(globalState.currentDropzone?.id),\n      permissions: [\"actAsPilot\"]\n    }\n  });\n  const allowed = useRestriction(\"updateLoad\");\n\n  return (\n    !allowed ?\n    <Chip mode=\"outlined\" icon=\"radio-handheld\">\n      {props.value?.name || \"No pilot\"}\n    </Chip> : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane-takeoff\"\n          style={{ marginHorizontal: 4 }}\n          onPress={() => setMenuOpen(true)}\n        >\n        {props.value?.id ? props.value?.name : \"No pilot\"}\n        </Chip>\n      }>\n      {\n        data?.dropzone?.dropzoneUsers?.edges?.map((edge) => \n          <Menu.Item\n            key={`pilot-select-${edge!.node!.id}`}\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(edge?.node?.user as User);\n            }}\n            title={\n              edge?.node?.user?.name\n            }\n          />\n        )\n      }\n    </Menu>\n  ))\n}","import { useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport React, { useState } from \"react\";\nimport { Chip, List, Menu } from \"react-native-paper\";\nimport { DropzoneUser, Plane, Query } from \"../graphql/schema\";\nimport useRestriction from \"../hooks/useRestriction\";\nimport { useAppSelector } from \"../redux\";\n\ninterface IPlaneChipSelect {\n  dropzoneId: number;\n  value?: Plane | null;\n  onSelect(dzUser: Plane): void;\n}\n\n\nconst QUERY_PLANES = gql`\n  query QueryPlanes(\n    $dropzoneId: Int!\n  ) {\n    planes(dropzoneId: $dropzoneId) {\n      id\n      name\n      registration\n      hours\n      minSlots\n      maxSlots\n      nextMaintenanceHours\n      createdAt\n    }\n  }\n`;\n\nexport default function PlaneChip(props: IPlaneChipSelect) {\n  const [isMenuOpen, setMenuOpen] = useState(false);\n  const globalState = useAppSelector(state => state.global);\n\n  const { data } = useQuery<Query>(QUERY_PLANES, {\n    variables: {\n      dropzoneId: Number(globalState.currentDropzone?.id),\n    }\n  });\n  const allowed = useRestriction(\"updateLoad\");\n\n  return (\n    !allowed ?\n    <Chip mode=\"outlined\" icon=\"airplane-takeoff\">\n      {props.value?.name || \"No plane\"}\n    </Chip> : (\n    <Menu\n      onDismiss={() => setMenuOpen(false)}\n      visible={isMenuOpen}\n      anchor={\n        <Chip\n          mode=\"outlined\"\n          icon=\"airplane\"\n          style={{ marginHorizontal: 4 }}\n          onPress={() => allowed && setMenuOpen(true)}\n        >\n          {props.value?.name || \"No plane\"}\n        </Chip>\n      }>\n      {\n        data?.planes?.map((plane) => \n          <Menu.Item\n            key={`lm-plane-chip-${plane.id}`}\n            onPress={() => {\n              setMenuOpen(false);\n              props.onSelect(plane as Plane);\n            }}\n            title={\n              plane.name\n            }\n          />\n        )\n      }\n    </Menu>\n  ))\n}","import { gql, useMutation, useQuery } from '@apollo/client';\nimport { useNavigation } from '@react-navigation/core';\nimport * as React from 'react';\nimport { ScrollView, StyleSheet } from 'react-native';\nimport { Badge, Button, Card, DataTable, IconButton, List, Menu, Paragraph, ProgressBar, Text } from 'react-native-paper';\nimport addMinutes from \"date-fns/addMinutes\";\nimport differenceInMinutes from \"date-fns/differenceInMinutes\";\n\nimport GCAChip from '../../../components/GcaChip';\nimport LoadMasterChip from '../../../components/LoadMasterChip';\nimport PilotChip from '../../../components/PilotChip';\nimport PlaneChip from '../../../components/PlaneChip';\n\nimport { View } from '../../../components/Themed';\nimport { Query, Load, Mutation, User, Plane, Slot } from '../../../graphql/schema';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { slotsMultipleForm, useAppDispatch, useAppSelector } from '../../../redux';\n\ninterface ILoadCard {\n  load: Load;\n  loadNumber: number;\n  canManifest: boolean;\n  onSlotGroupPress(slots: Slot[]): void;\n  onSlotPress(slot: Slot): void;\n  onSlotLongPress?(slot: Slot): void;\n  onManifest(): void;\n}\n\n\nconst QUERY_LOAD = gql`\n  query QueryLoad($id: Int!) {\n    load(id: $id) {\n      id\n      name\n      createdAt\n      dispatchAt\n      hasLanded\n      maxSlots\n      loadNumber\n      isFull\n      isOpen\n      plane {\n        id\n        name\n      }\n      gca {\n        id\n        user {\n          id\n          name\n        }\n      }\n      pilot {\n        id\n        user {\n          id\n          name\n        }\n      }\n      loadMaster {\n        id\n        user {\n          id\n          name\n        }\n      }\n      slots {\n        id\n        createdAt\n        exitWeight\n        passengerName\n        passengerExitWeight\n        user {\n          id\n          name\n        }\n        ticketType {\n          id\n          name\n          altitude\n          isTandem\n\n          extras {\n            id\n            name\n            cost\n          }\n        }\n        jumpType {\n          id\n          name\n        }\n        extras {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst MUTATION_UPDATE_LOAD = gql`\n  mutation UpdateLoad(\n    $id: Int!,\n    $pilotId: Int,\n    $gcaId: Int,\n    $planeId: Int,\n    $isOpen: Boolean,\n    $loadMasterId: Int,\n    $dispatchAt: Int,\n    $hasLanded: Boolean,\n  ){\n    updateLoad(input: {\n      id: $id\n      attributes: {\n        pilotId: $pilotId,\n        gcaId: $gcaId,\n        planeId: $planeId,\n        isOpen: $isOpen,\n        loadMasterId: $loadMasterId\n        dispatchAt: $dispatchAt\n        hasLanded: $hasLanded\n      }\n    }) {\n      load {\n        id\n        name\n        createdAt\n        loadNumber\n        dispatchAt\n        hasLanded\n        maxSlots\n        isFull\n        isOpen\n        plane {\n          id\n          name\n        }\n        gca {\n          id\n          user {\n            id\n            name\n          }\n        }\n        pilot {\n          id\n          user {\n            id\n            name\n          }\n        }\n        loadMaster {\n          id\n          user {\n            id\n            name\n          }\n        }\n        slots {\n          id\n          createdAt\n          exitWeight\n\n          passengerName\n          passengerExitWeight\n\n          user {\n            id\n            name\n          }\n          ticketType {\n            id\n            name\n            altitude\n            isTandem\n          }\n          jumpType {\n            id\n            name\n          }\n          extras {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\n\nexport default function LoadCard(props: ILoadCard) {\n  const state = useAppSelector(state => state.global);\n  const dispatch = useAppDispatch();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const [isDispatchOpen, setDispatchOpen] = React.useState(false);\n  const canManifestOthers = useRestriction(\"createUserSlot\");\n\n  const navigation = useNavigation();\n  const { load, loadNumber, onManifest, canManifest } = props;\n  const { data, loading } = useQuery<Query>(QUERY_LOAD, {\n    variables: {\n      id: Number(load.id),\n    },\n    // pollInterval: 30000,\n  });\n\n  const [mutationUpdateLoad, mutation] = useMutation<Mutation>(MUTATION_UPDATE_LOAD);\n  const updatePilot = React.useCallback(async (pilot: User) => {\n    try {\n      await mutationUpdateLoad({ variables: { id: Number(load.id), pilotId: Number(pilot.id) }});\n    } catch (e) {\n\n    }\n  }, [mutationUpdateLoad, JSON.stringify(load)]);\n\n  const updateGCA = React.useCallback(async (gca: User) => {\n    try {\n      await mutationUpdateLoad({ variables: { id: Number(load.id), gcaId: Number(gca.id) }});\n    } catch (e) {\n\n    }\n  }, [mutationUpdateLoad, JSON.stringify(load)]);\n\n  const updatePlane = React.useCallback(async (plane: Plane) => {\n    try {\n      await mutationUpdateLoad({ variables: { id: Number(load.id), planeId: Number(plane.id) }});\n    } catch (e) {\n\n    }\n  }, [mutationUpdateLoad, JSON.stringify(load)]);\n\n  const updateLoadMaster = React.useCallback(async (lm: User) => {\n    try {\n      await mutationUpdateLoad({ variables: { id: Number(load.id), loadMasterId: Number(lm.id) }});\n    } catch (e) {\n\n    }\n  }, [mutationUpdateLoad, JSON.stringify(load)]);\n\n  const updateCall = React.useCallback(async (minutes: number | null) => {\n    const dispatchTime = !minutes ? null : addMinutes(new Date(), minutes).getTime() / 1000;\n\n    try {\n      await mutationUpdateLoad({\n        variables: {\n          id: Number(load.id),\n          dispatchAt: dispatchTime ? Math.ceil(dispatchTime) : null\n        }\n      });\n    } catch (e) {\n\n    }\n  }, [mutationUpdateLoad, JSON.stringify(load)]);\n\n  const onLanded = React.useCallback(async () => {\n    try {\n      await mutationUpdateLoad({\n        variables: {\n          id: Number(load.id),\n          hasLanded: true,\n        }\n      });\n    } catch (e) {\n\n    }\n  }, [mutationUpdateLoad, JSON.stringify(load)]);\n\n  const canUpdateLoad = useRestriction(\"updateLoad\");\n  const canEditSelf = useRestriction(\"updateSlot\");\n  const canEditOthers = useRestriction(\"updateUserSlot\");\n\n  \n\n  React.useEffect(() => {\n    if (data?.load?.maxSlots && data?.load?.maxSlots < 5 && !isExpanded) {\n      setExpanded(true);\n    }\n  }, [data?.load?.maxSlots]);\n\n  \n\n  return (\n  <Card style={{ margin: 16, opacity: data?.load?.hasLanded ? 0.5 : 1.0 }} elevation={3}>\n    <Card.Title\n      style={{ justifyContent: \"space-between\"}}\n      title={\n        <View style={{ width: \"100%\", flex: 1, flexDirection: \"row\", alignItems: \"center\", justifyContent: \"space-between\" }}>\n          <Text>{`Load ${data?.load?.loadNumber || 0}`}</Text>\n          <View style={{ flexGrow: 1 }} />\n          { !data?.load?.hasLanded && (!data?.load?.dispatchAt || data?.load.dispatchAt > (new Date().getTime() / 1000)) && (\n            <IconButton\n              icon=\"account-group\"\n              onPress={() => {\n                dispatch(slotsMultipleForm.reset());\n                dispatch(slotsMultipleForm.setField([\"load\", load]));\n                navigation.navigate(\"ManifestGroupUserSelectScreen\", { loadId: data?.load?.id });\n              }}\n            />\n          )}\n        </View>\n      }\n      subtitle={load.name}\n    />\n    <ProgressBar\n      visible={loading || mutation.loading}\n      color={state.theme.colors.accent}\n    />\n    <Card.Content style={{ marginVertical: 8, height: isExpanded ? undefined : 300, overflow: \"hidden\" }}>\n      <View style={{ flexDirection: \"row\"}}>\n        <ScrollView horizontal>\n          <PlaneChip\n            dropzoneId={Number(state.currentDropzone?.id)}\n            value={data?.load?.plane}\n            onSelect={updatePlane}\n          />\n          <GCAChip\n            dropzoneId={Number(state.currentDropzone?.id)}\n            value={data?.load?.gca?.user}\n            onSelect={updateGCA}\n          />\n          <PilotChip\n            dropzoneId={Number(state.currentDropzone?.id)}\n            value={data?.load?.pilot?.user}\n            onSelect={updatePilot}\n          />\n          <LoadMasterChip\n            dropzoneId={Number(state.currentDropzone?.id)}\n            value={data?.load?.loadMaster?.user}\n            slots={data?.load.slots || []}\n            onSelect={updateLoadMaster}\n          />\n        </ScrollView>\n      </View>\n      <DataTable>\n        <DataTable.Header style={{ width: \"100%\"}}>\n          <DataTable.Title>Name</DataTable.Title>\n          <DataTable.Title numeric>Jump type</DataTable.Title>\n          <DataTable.Title numeric>Altitude</DataTable.Title>\n        </DataTable.Header>\n          {\n            data?.load?.slots?.map(slot => {\n              const slotGroup = data?.load?.slots?.filter(({ groupNumber }) => groupNumber && groupNumber === slot.groupNumber);\n\n              return (\n                <DataTable.Row\n                  key={`slot-${slot.id}`}\n                  disabled={data?.load?.hasLanded}\n                  onPress={() => {\n                    if (slot.user?.id === state.currentUser?.id) {\n                      if (canEditSelf) {\n                        if (slotGroup?.length) {\n                          props.onSlotGroupPress(slotGroup!)\n                        } else {\n                          props.onSlotPress(slot);\n                        }\n                      }\n                    } else if (canEditOthers) {\n                      if (slotGroup?.length) {\n                        props.onSlotGroupPress(slotGroup!)\n                      } else {\n                        props.onSlotPress(slot);\n                      }\n                    }\n                  }}\n                  pointerEvents=\"none\"\n                >\n                  <DataTable.Cell>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.user?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {slot?.jumpType?.name}\n                    </Paragraph>\n                  </DataTable.Cell>\n                  <DataTable.Cell numeric>\n                    <Paragraph style={styles.slotText}>\n                      {((slot?.ticketType?.altitude || 14000) / 1000)}k\n                    </Paragraph>\n                  </DataTable.Cell>\n                </DataTable.Row>\n              )\n            })\n          }\n          {\n            Array.from({length: (data?.load?.maxSlots || 0) - (data?.load?.slots?.length || 0)}, (v, i) => i).map((i) =>\n              <DataTable.Row key={`${load.id}-empty-slot-${i}`}>\n                <DataTable.Cell><Paragraph style={styles.slotText}>- Available -</Paragraph></DataTable.Cell>\n                <DataTable.Cell numeric>-</DataTable.Cell>\n                <DataTable.Cell numeric>-</DataTable.Cell>\n              </DataTable.Row>\n            )\n          }\n      </DataTable>\n    </Card.Content>\n    {\n      !!data?.load?.dispatchAt && data?.load?.dispatchAt > (new Date().getTime() / 1000) && (\n        <View style={{ flex: 1, backgroundColor: \"#FF8800\", padding: 8 }}>\n          <Paragraph>\n            {\n              `Take-off in ${differenceInMinutes(new Date(), (data?.load?.dispatchAt as number) * 1000)} min`\n            }\n          </Paragraph>\n        </View>\n    )}\n    <Card.Actions>\n      {\n        data?.load?.maxSlots && data?.load?.maxSlots < 5 ? null :\n          <Button onPress={() => setExpanded(!isExpanded)}>\n            { isExpanded ? \"Show less\" : \"Show more\" }\n          </Button>\n      }\n      <View style={{ flexGrow: 1 }} />\n      {\n       !canUpdateLoad || !!data?.load?.hasLanded ? null : (\n      \n          data?.load?.dispatchAt\n            ? (\n              <Button mode=\"outlined\" onPress={() => updateCall(null)}>\n                Cancel\n              </Button>\n            ) : (\n              <Menu\n                onDismiss={() => setDispatchOpen(false)}\n                visible={isDispatchOpen}\n                anchor={\n                  <Button mode=\"outlined\" onPress={() => setDispatchOpen(true)}>\n                    Dispatch\n                  </Button>\n                }\n              >\n                <Menu.Item\n                  onPress={() => {\n                    setDispatchOpen(false);\n                    updateCall(20)\n                  }}\n                  title=\"20 minute call\"\n                />\n                <Menu.Item\n                  onPress={() => {\n                    setDispatchOpen(false);\n                    updateCall(15)\n                  }}\n                  title=\"15 minute call\"\n                />\n                <Menu.Item\n                  onPress={() => {\n                    setDispatchOpen(false);\n                    updateCall(10)\n                  }}\n                  title=\"10 minute call\"\n                />\n                <Menu.Item\n                  onPress={() => {\n                    setDispatchOpen(false);\n                    updateCall(5)\n                  }}\n                  title=\"5 minute call\"\n                />\n              </Menu>\n            ))}\n      \n      {\n        data?.load?.hasLanded ? null : (\n          data?.load?.dispatchAt && data?.load.dispatchAt < new Date().getTime() / 1000 && canUpdateLoad\n            ? <Button style={{ marginLeft: 8 }} mode=\"contained\" onPress={() => onLanded()}>\n                Mark as landed\n              </Button>\n            : <Button\n                style={{marginLeft: 8 }}\n                mode=\"contained\"\n                onPress={() => onManifest()}\n                disabled={!canManifest || Boolean(data?.load?.dispatchAt && data.load.dispatchAt < new Date().getTime() / 1000)}\n              >\n                Manifest\n              </Button>\n        )\n      }\n    </Card.Actions>\n  </Card>\n                      \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  slotText: {\n    fontSize: 12\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n","import { useQuery } from '@apollo/client';\nimport { useIsFocused, useNavigation } from '@react-navigation/core';\nimport { startOfDay } from 'date-fns';\nimport gql from 'graphql-tag';\nimport * as React from 'react';\nimport { Dimensions, RefreshControl, StyleSheet } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { FAB, ProgressBar } from 'react-native-paper';\nimport ManifestUserDialog from '../../../components/dialogs/ManifestUserDialog';\n\nimport NoResults from '../../../components/NoResults';\nimport { View } from '../../../components/Themed';\nimport { Load, Query } from '../../../graphql/schema';\nimport useRestriction from '../../../hooks/useRestriction';\nimport { globalActions, slotForm, slotsMultipleForm, snackbarActions, useAppDispatch, useAppSelector } from '../../../redux';\nimport GetStarted from './GetStarted';\nimport LoadCard from './LoadCard';\n\nconst QUERY_DROPZONE = gql`\n  query QueryDropzone($dropzoneId: Int!, $earliestTimestamp: Int) {\n    dropzone(id: $dropzoneId) {\n      id\n      name\n      primaryColor,\n      secondaryColor,\n      planes {\n        id\n        name\n        registration\n      }\n      ticketTypes {\n        id\n        name\n      }\n\n      currentUser {\n        id\n        hasCredits\n        hasExitWeight\n        hasMembership\n        hasReserveInDate\n        hasRigInspection\n        hasLicense\n\n        transactions {\n          edges {\n            node {\n              id\n              status\n              amount\n            }\n          }\n        }\n\n        user {\n          id\n          name\n          exitWeight\n          email\n          phone\n\n          rigs {\n            id\n            model\n            make\n            serial\n            canopySize\n            repackExpiresAt\n          }\n          jumpTypes {\n            id\n            name\n          }\n          license {\n            id\n            name\n          }\n        }\n      }\n\n      loads(earliestTimestamp: $earliestTimestamp) {\n        edges {\n          node {\n            id\n            name\n            loadNumber\n            isOpen\n            maxSlots\n            isFull\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\nexport default function ManifestScreen() {\n  const state = useAppSelector(state => state.global);\n  const [isDialogOpen, setDialogOpen] = React.useState(false);\n  const dispatch = useAppDispatch();\n  const { data, loading, refetch } = useQuery<Query>(QUERY_DROPZONE, {\n    variables: {\n      dropzoneId: Number(state.currentDropzone?.id),\n      earliestTimestamp: startOfDay(new Date()).getTime() / 1000\n    },\n    fetchPolicy: \"no-cache\"\n  });\n\n  const navigation = useNavigation();\n  const isFocused = useIsFocused();\n\n  React.useEffect(() => {\n    if (isFocused) {\n      refetch();\n    }\n  }, [isFocused]);\n\n  const hasPlanes = !!data?.dropzone?.planes?.length;\n  const hasTicketTypes = !!data?.dropzone?.ticketTypes?.length;\n  const isPublic = !!data?.dropzone?.isPublic;\n  const isSetupComplete = hasPlanes && hasTicketTypes;\n\n  React.useEffect(() => {\n    if (data?.dropzone?.id) {\n      dispatch(globalActions.setDropzone(data.dropzone));\n    \n      dispatch(\n        globalActions.setUser({\n          ...state?.currentUser,\n          ...(data?.dropzone?.currentUser.user || {})\n        })\n      );\n    }\n  }, [JSON.stringify(data?.dropzone)]);\n\n  React.useEffect(() => {\n    if (data?.dropzone?.primaryColor && data?.dropzone?.primaryColor !== state.theme?.colors?.primary) {\n      dispatch(globalActions.setPrimaryColor(data.dropzone.primaryColor));\n    }\n\n    if (data?.dropzone?.secondaryColor && data?.dropzone?.secondaryColor !== state.theme?.colors?.accent) {\n      dispatch(globalActions.setPrimaryColor(data.dropzone.secondaryColor));\n    }\n  }, [\n    data?.dropzone?.primaryColor,\n    data?.dropzone?.secondaryColor\n  ])\n\n  const allowed = useRestriction(\"createSlot\");\n  const canCreateLoad = useRestriction(\"createLoad\");\n\n  const onManifest = React.useCallback((load: Load) => {\n    const { currentUser } = data!.dropzone;\n    \n    if (!currentUser.hasLicense) {\n      return dispatch(\n        snackbarActions.showSnackbar({\n          message: \"You need to select a license on your user profile\",\n          variant: \"warning\"\n        })\n      );\n    }\n\n    if (!currentUser.hasMembership) {\n      return dispatch(\n        snackbarActions.showSnackbar({\n          message: \"Your membership is out of date\",\n          variant: \"warning\"\n        })\n      );\n    }\n\n    if (!currentUser.hasRigInspection) {\n      return dispatch(\n        snackbarActions.showSnackbar({\n          message: \"Your rig needs to be inspected before manifesting\",\n          variant: \"warning\"\n        })\n      );\n    }\n\n    if (!currentUser.hasReserveInDate) {\n      return dispatch(\n        snackbarActions.showSnackbar({\n          message: \"Your rig needs a reserve repack\",\n          variant: \"warning\"\n        })\n      );\n    }\n\n    if (!currentUser.hasExitWeight) {\n      return dispatch(\n        snackbarActions.showSnackbar({\n          message: \"Update your exit weight on your profile before manifesting\",\n          variant: \"warning\"\n        })\n      );\n    }\n\n    if (!currentUser.hasCredits) {\n      return dispatch(\n        snackbarActions.showSnackbar({\n          message: \"You have no credits on your account\",\n          variant: \"warning\"\n        })\n      );\n    }\n\n\n    dispatch(\n      slotForm.setField([\"user\", state.currentUser])\n    );\n    dispatch(\n      slotForm.setField([\"load\", load])\n    );\n    setDialogOpen(true);\n  }, [JSON.stringify(data?.dropzone?.currentUser)]);\n\n  return (\n    <>\n    <ManifestUserDialog\n      open={isDialogOpen}\n      onClose={() => setDialogOpen(false)}\n      onSuccess={() => setDialogOpen(false)}\n    />\n    <ProgressBar visible={loading} indeterminate color={state.theme.colors.accent} />\n      <View style={styles.container}>\n        \n        {\n          !loading && (\n            !isSetupComplete\n              ? <GetStarted {...{ hasPlanes, hasTicketTypes, isPublic }}/>\n                : <View style={{ width: \"100%\", flex: 1,  height: Dimensions.get(\"window\").height }}>\n                  { (data?.dropzone?.loads?.edges?.length || 0) < 1\n                    ? <NoResults\n                        title=\"No loads so far today\"\n                        subtitle=\"How's the weather?\"\n                      />\n                    : <FlatList\n                        style={{ flex: 1, height: Dimensions.get(\"window\").height }}\n                        contentContainerStyle={{ flexGrow: 1 }}\n                        numColumns={1}\n                        data={data?.dropzone?.loads?.edges || []}\n                        refreshing={loading}\n                        onRefresh={refetch}\n                        refreshControl={\n                          <RefreshControl refreshing={loading} onRefresh={() => refetch()} />\n                        }\n                        renderItem={({ item: edge, index }) =>\n                          !edge?.node ? null : (\n                            <LoadCard\n                              key={`load-${edge.node.id}`}\n                              load={edge.node}\n                              canManifest={allowed && edge?.node?.isOpen && !edge?.node?.isFull}\n                              loadNumber={(data?.dropzone?.loads?.edges?.length || 0) - index}\n                              onSlotPress={(slot) => {\n                                dispatch(slotForm.setOriginal(slot));\n                                dispatch(\n                                  slotForm.setField([\"load\", edge.node!])\n                                );\n                                setDialogOpen(true);\n                              }}\n                              onSlotGroupPress={(slots) => {\n                                dispatch(slotsMultipleForm.reset());\n                                dispatch(slotsMultipleForm.setFromSlots(slots));\n                                dispatch(slotsMultipleForm.setField([\"load\", edge.node!]));\n                                navigation.navigate(\"ManifestGroupScreen\");\n                              }}\n                              onManifest={() => onManifest(edge.node!)}\n                            />\n                        )}\n                    />\n                  }\n\n                </View>\n        )}\n        { canCreateLoad && isSetupComplete && (\n          <FAB\n            style={styles.fab}\n            small\n            icon=\"plus\"\n            onPress={() => navigation.navigate(\"CreateLoadScreen\")}\n            label=\"New load\"\n          />\n        )}\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"sourceRoot":""}